<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Telerik.Windows.Controls.Diagrams</name>
    </assembly>
    <members>
        <member name="T:Telerik.Windows.Automation.Peers.RadDiagramTextShapeAutomationPeer">
            <summary>
            Automation peer for the <see cref="T:Telerik.Windows.Controls.RadDiagramTextShape"/> class.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Automation.Peers.RadDiagramItemAutomationPeer">
            <summary>
            Automation peer for the <see cref="T:Telerik.Windows.Controls.RadDiagramItem"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Automation.Peers.RadDiagramItemAutomationPeer.#ctor(Telerik.Windows.Controls.Diagrams.RadDiagramItem,Telerik.Windows.Controls.RadDiagram)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Automation.Peers.RadDiagramItemAutomationPeer"/> class.
            </summary>
            <param name="owner">
            The <see cref="T:Telerik.Windows.Controls.RadDiagramItem"/> that will be associated with newly created
            <see cref="T:Telerik.Windows.Controls.Diagrams.AutomationPeers.RadDiagramItemAutomationPeer"/> object.
            </param>
            <param name="diagram">
            The <see cref="T:Telerik.Windows.Controls.RadDiagram"/> that will be associated with newly created
            <see cref="T:Telerik.Windows.Controls.Diagrams.AutomationPeers.RadDiagramItemAutomationPeer"/> object.
            </param>
        </member>
        <member name="M:Telerik.Windows.Automation.Peers.RadDiagramItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern for the <see cref="T:Telerik.Windows.Controls.RadDiagramItem"/>
            that is associated with this <see cref="T:Telerik.Windows.Controls.Diagrams.AutomationPeers.RadDiagramItemAutomationPeer"/>.
            </summary>
            <returns>
            The object that implements the pattern interface, or null.
            </returns>
            <param name="patternInterface">
            One of the enumeration values.
            </param>
        </member>
        <member name="M:Telerik.Windows.Automation.Peers.RadDiagramItemAutomationPeer.GetItem">
            <summary>
            Gets the item in the that is associated with this <see cref="T:Telerik.Windows.Controls.Diagrams.AutomationPeers.RadDiagramItemAutomationPeer"/>.
            </summary>
            <returns>
            The data item.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Automation.Peers.RadDiagramItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
            <summary>
            ISelectionItemProvider implementation.
            Adds the current element to the collection of selected items.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Automation.Peers.RadDiagramItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
            <summary>
            ISelectionItemProvider implementation.
            Removes the current element from the collection of selected items.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Automation.Peers.RadDiagramItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
            <summary>
            ISelectionItemProvider implementation.
            Deselects any selected items and then selects the current element.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Automation.Peers.RadDiagramItemAutomationPeer.System#Windows#Automation#Provider#IScrollItemProvider#ScrollIntoView">
            <summary>Scrolls the content area of a container object in order to display the
            control within the visible region (viewport) of the container.
            </summary>
            <exception cref="T:System.InvalidOperationException">The item cannot be scrolled
            into view.</exception>
        </member>
        <member name="M:Telerik.Windows.Automation.Peers.RadDiagramItemAutomationPeer.GetItemStatusCore">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Windows.Automation.Peers.RadDiagramItemAutomationPeer.GetChildrenCore">
            <summary>
            Returns child elements collection of the item that is associated with this
            <see cref="T:Telerik.Windows.Controls.Diagrams.AutomationPeers.RadDiagramItemAutomationPeer"/>.
            This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren"/>.
            </summary>
            <returns>
            A list of child <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> elements.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Automation.Peers.RadDiagramItemAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the <see cref="T:Telerik.Windows.Controls.RadDiagramItem"/> that is
            associated with this <see cref="T:Telerik.Windows.Controls.Diagrams.AutomationPeers.RadDiagramItemAutomationPeer"/>.
            This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/>.
            </summary>
            <returns>
            The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.TabItem"/> enumeration value.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Automation.Peers.RadDiagramItemAutomationPeer.GetClassNameCore">
            <summary>
            Gets the name of the <see cref="T:Telerik.Windows.Controls.RadDiagramItem"/> that is associated
            with this <see cref="T:Telerik.Windows.Controls.Diagrams.AutomationPeers.RadDiagramItemAutomationPeer"/>.
            This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/>.
            </summary>
            <returns>
            The type of the owner.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Automation.Peers.RadDiagramItemAutomationPeer.GetNameCore">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Windows.Automation.Peers.RadDiagramItemAutomationPeer.GetHelpTextCore">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Windows.Automation.Peers.RadDiagramItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#IsSelected">
            <summary>
            ISelectionItemProvider implementation.
            Gets a value that indicates whether an item is selected. 
            </summary>
            <returns>true if the element is selected; otherwise false.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Automation.Peers.RadDiagramItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
            <summary>
            ISelectionItemProvider implementation.
            Gets the UI Automation provider that implements <see cref="T:System.Windows.Automation.Provider.ISelectionProvider"/>
            and acts as the container for the calling object.
            </summary>
            <returns>
            The provider that supports <see cref="T:System.Windows.Automation.Provider.ISelectionProvider"/>.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Automation.Peers.RadDiagramTextShapeAutomationPeer.#ctor(Telerik.Windows.Controls.RadDiagramTextShape,Telerik.Windows.Controls.RadDiagram)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Automation.Peers.RadDiagramTextShapeAutomationPeer"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="diagram">The diagram.</param>
        </member>
        <member name="M:Telerik.Windows.Automation.Peers.RadDiagramTextShapeAutomationPeer.GetItemStatusCore">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Windows.Automation.Peers.RadDiagramTextShapeAutomationPeer.GetClassNameCore">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Windows.Automation.Peers.RadDiagramTextShapeAutomationPeer.GetHelpTextCore">
            <inheritdoc />
        </member>
        <member name="T:Telerik.Windows.Automation.Peers.RadDiagramContainerShapeAutomationPeer">
            <summary>
            Automation peer for the <see cref="T:Telerik.Windows.Controls.RadDiagramContainerShape"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Automation.Peers.RadDiagramContainerShapeAutomationPeer.#ctor(Telerik.Windows.Controls.RadDiagramContainerShape,Telerik.Windows.Controls.RadDiagram)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Automation.Peers.RadDiagramContainerShapeAutomationPeer"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="diagram">The diagram.</param>
        </member>
        <member name="M:Telerik.Windows.Automation.Peers.RadDiagramContainerShapeAutomationPeer.Collapse">
            <summary>
            Hides all nodes, controls, or content that are descendants of the control.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Automation.Peers.RadDiagramContainerShapeAutomationPeer.Expand">
            <summary>
            Displays all child nodes, controls, or content of the control.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Automation.Peers.RadDiagramContainerShapeAutomationPeer.GetItemStatusCore">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Windows.Automation.Peers.RadDiagramContainerShapeAutomationPeer.GetClassNameCore">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Windows.Automation.Peers.RadDiagramContainerShapeAutomationPeer.GetHelpTextCore">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Windows.Automation.Peers.RadDiagramContainerShapeAutomationPeer.ExpandCollapseState">
            <summary>
            Gets the state, expanded or collapsed, of the control.
            </summary>
            <returns>The state, expanded or collapsed, of the control.</returns>
            <value></value>
        </member>
        <member name="T:Telerik.Windows.Automation.Peers.RadDiagramAutomationPeer">
            <summary>
            Automation peer for the <see cref="T:Telerik.Windows.Controls.RadDiagram"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Automation.Peers.RadDiagramAutomationPeer.#ctor(Telerik.Windows.Controls.RadDiagram)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Automation.Peers.RadDiagramAutomationPeer"/> class.
            </summary>
            <param name="owner">
            The <see cref="T:Telerik.Windows.Controls.RadDiagram"/> that will be associated with newly created
            <see cref="T:Telerik.Windows.Controls.Diagrams.AutomationPeers.RadDiagramAutomationPeer"/> object.
            </param>
        </member>
        <member name="M:Telerik.Windows.Automation.Peers.RadDiagramAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Gets the control pattern for the <see cref="T:Telerik.Windows.Controls.RadDiagram"/>
            that is associated with this <see cref="T:Telerik.Windows.Controls.Diagrams.AutomationPeers.RadDiagramAutomationPeer"/>.
            </summary>
            <returns>
            The object that implements the pattern interface, or null.
            </returns>
            <param name="patternInterface">
            One of the enumeration values.
            </param>
        </member>
        <member name="M:Telerik.Windows.Automation.Peers.RadDiagramAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#GetSelection">
            <summary>
            ISelectionProvider implementation.
            Retrieves a UI Automation provider for each child element that is selected.
            </summary>
            <returns>
            An array of UI Automation providers. 
            </returns>
        </member>
        <member name="M:Telerik.Windows.Automation.Peers.RadDiagramAutomationPeer.GetItemStatusCore">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Windows.Automation.Peers.RadDiagramAutomationPeer.GetNameCore">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Windows.Automation.Peers.RadDiagramAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Gets the control type for the <see cref="T:System.Windows.UIElement"/> that is
            associated with this <see cref="T:Telerik.Windows.Controls.Diagrams.AutomationPeers.RadDiagramAutomationPeer"/>.
            This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/>.
            </summary>
            <returns>
            The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Custom"/> enumeration value.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Automation.Peers.RadDiagramAutomationPeer.GetClassNameCore">
            <summary>
            Gets the name of the <see cref="T:Telerik.Windows.Controls.RadDiagram"/> that is associated
            with this <see cref="T:Telerik.Windows.Controls.Diagrams.AutomationPeers.RadDiagramAutomationPeer"/>.
            This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/>.
            </summary>
            <returns>
            The type of the owner.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Automation.Peers.RadDiagramAutomationPeer.GetChildrenCore">
            <summary>
            Gets the collection of <see cref="T:Telerik.Windows.Controls.AutomationPeer"/> elements that are associated with
            children <see cref="T:Telerik.Windows.Controls.RadDiagramItem"/> elements of the owner
            <see cref="T:Telerik.Windows.Controls.RadDiagram"/>.
            This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren"/>.
            </summary>
            <returns>
            The collection of child elements.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Automation.Peers.RadDiagramAutomationPeer.GetHelpTextCore">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Windows.Automation.Peers.RadDiagramAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
            <summary>
            ISelectionProvider implementation.
            Gets a value that specifies whether the UI Automation provider requires at least
            one child element to be selected.
            </summary>
            <returns>true if selection is required; otherwise false.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Automation.Peers.RadDiagramAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#CanSelectMultiple">
            <summary>
            ISelectionProvider implementation.
            Gets a value that specifies whether the UI Automation provider allows more than
            one child element to be selected concurrently.
            </summary>
            <returns>true if multiple selection is allowed; otherwise false.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Automation.Peers.RadDiagramAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#HorizontalScrollPercent">
            <summary>Gets the current horizontal scroll position.</summary>
            <returns>The horizontal scroll position as a percentage of the total content
            area within the control.</returns>
        </member>
        <member name="P:Telerik.Windows.Automation.Peers.RadDiagramAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#HorizontalViewSize">
            <summary>Gets the current horizontal view size.</summary>
            <returns>The horizontal size of the viewable region as a percentage of the total
            content area within the control. </returns>
        </member>
        <member name="P:Telerik.Windows.Automation.Peers.RadDiagramAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#HorizontallyScrollable">
            <summary>Gets a value that indicates whether the control can scroll horizontally.
            </summary>
            <returns>true if the control can scroll horizontally; otherwise false.</returns>
        </member>
        <member name="P:Telerik.Windows.Automation.Peers.RadDiagramAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#VerticalScrollPercent">
            <summary>Gets the current vertical scroll position.</summary>
            <returns>The vertical scroll position as a percentage of the total content area
            within the control. </returns>
        </member>
        <member name="P:Telerik.Windows.Automation.Peers.RadDiagramAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#VerticalViewSize">
            <summary>Gets the vertical view size.</summary>
            <returns>The vertical size of the viewable region as a percentage of the total
            content area within the control. </returns>
        </member>
        <member name="P:Telerik.Windows.Automation.Peers.RadDiagramAutomationPeer.System#Windows#Automation#Provider#IScrollProvider#VerticallyScrollable">
            <summary>Gets a value that indicates whether the control can scroll vertically.
            </summary>
            <returns>true if the control can scroll vertically; otherwise false. </returns>
        </member>
        <member name="T:Telerik.Windows.Automation.Peers.RadDiagramConnectionAutomationPeer">
            <summary>
            Automation peer for the <see cref="T:Telerik.Windows.Controls.RadDiagramConnection"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Automation.Peers.RadDiagramConnectionAutomationPeer.#ctor(Telerik.Windows.Controls.RadDiagramConnection,Telerik.Windows.Controls.RadDiagram)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Automation.Peers.RadDiagramConnectionAutomationPeer"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="diagram">The diagram.</param>
        </member>
        <member name="M:Telerik.Windows.Automation.Peers.RadDiagramConnectionAutomationPeer.GetItemStatusCore">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Windows.Automation.Peers.RadDiagramConnectionAutomationPeer.GetClassNameCore">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Windows.Automation.Peers.RadDiagramConnectionAutomationPeer.GetHelpTextCore">
            <inheritdoc />
        </member>
        <member name="T:Telerik.Windows.Automation.Peers.RadDiagramShapeAutomationPeer">
            <summary>
            Automation peer for the <see cref="T:Telerik.Windows.Controls.RadDiagramShape"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Automation.Peers.RadDiagramShapeAutomationPeer.#ctor(Telerik.Windows.Controls.RadDiagramShape,Telerik.Windows.Controls.RadDiagram)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Automation.Peers.RadDiagramShapeAutomationPeer"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="diagram">The diagram.</param>
        </member>
        <member name="M:Telerik.Windows.Automation.Peers.RadDiagramShapeAutomationPeer.GetItemStatusCore">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Windows.Automation.Peers.RadDiagramShapeAutomationPeer.GetClassNameCore">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Windows.Automation.Peers.RadDiagramShapeAutomationPeer.GetHelpTextCore">
            <inheritdoc />
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundGrid">
            <summary>
            Represents a visual grid of lines usually used as background surface.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundGridBase">
            <summary>
            Represents a visual grid of lines usually used as background surface.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundGridBase.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application
            code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundGridBase.Refresh(System.Boolean)">
            <summary>
            Redraws the lines.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundGridBase.Diagram">
            <summary>
            Gets or sets the hosting diagram.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundGridBase.CellSize">
            <summary>
            Gets the cell size.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundGridBase.LineStroke">
            <summary>
            Gets line stroke.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundGridBase.LineStrokeThickness">
            <summary>
            Gets line stroke thickness.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundGridBase.LineStrokeDashArray">
            <summary>
            Gets line stroke dash array.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundGridBase.IsDynamic">
            <summary>
            Gets a value indicating whether the grid will be synchronized with the diagram viewport changes (panning and zooming).
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundGridBase.LineInfo">
            <summary>
            Stores information about the Line container.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundGridBase.LineDescriptor">
            <summary>
            Stores information about serial creation of lines.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundGrid.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application
            code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundGrid.ResetTheme">
            <summary>
            Resets the theme.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundGrid.OnInitialized(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.FrameworkElement.Initialized"/> event.
            This method is invoked whenever <see cref="P:System.Windows.FrameworkElement.IsInitialized"/> is set to true internally.
            </summary>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundGrid.CellSizeProperty">
            <summary>
            Identifies the CellSize attached property.
            </summary> 
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundGrid.LineStrokeProperty">
            <summary> 
            Identifies the LineStroke attached property.
            </summary> 
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundGrid.LineStrokeThicknessProperty">
            <summary> 
            Identifies the LineStrokeThickness attached property.
            </summary> 
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundGrid.LineStrokeDashArrayProperty">
            <summary> 
            Identifies the LineStrokeDashArray attached property.
            </summary> 
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundGrid.IsGridVisibleProperty">
            <summary>
            Identifies the IsGridVisible attached property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundGrid.IsDynamicProperty">
            <summary>
            Identifies the IsDynamic attached property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundGrid.GetCellSize(System.Windows.DependencyObject)">
            <summary>
            Gets the cell size.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundGrid.SetCellSize(System.Windows.DependencyObject,System.Windows.Size)">
            <summary>
            Sets the cell size.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundGrid.GetLineStroke(System.Windows.DependencyObject)">
            <summary>
            Gets the line stroke.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundGrid.SetLineStroke(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            Sets the line stroke.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundGrid.GetLineStrokeThickness(System.Windows.DependencyObject)">
            <summary>
            Gets the line stroke thickness.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundGrid.SetLineStrokeThickness(System.Windows.DependencyObject,System.Double)">
            <summary>
            Sets the line stroke thickness.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundGrid.GetLineStrokeDashArray(System.Windows.DependencyObject)">
            <summary>
            Gets the line stroke dash array.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundGrid.SetLineStrokeDashArray(System.Windows.DependencyObject,System.Windows.Media.DoubleCollection)">
            <summary>
            Sets the line stroke dash array.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundGrid.GetIsGridVisible(System.Windows.DependencyObject)">
            <summary>
            Gets the grid visibility.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundGrid.SetIsGridVisible(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the grid visibility.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundGrid.GetIsDynamic(System.Windows.DependencyObject)">
            <summary>
            Gets a value indicating whether the grid will be synchronized with the diagram viewport changes (panning and zooming).
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundGrid.SetIsDynamic(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets value indicating whether the grid will be synchronized with the diagram viewport changes (panning and zooming).
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundGrid.CellSize">
            <summary>
            Gets the cell size.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundGrid.LineStroke">
            <summary>
            Gets the cell size.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundGrid.LineStrokeThickness">
            <summary>
            Gets the cell size.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundGrid.LineStrokeDashArray">
            <summary>
            Gets the cell size.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundGrid.IsDynamic">
            <summary>
            Gets a value indicating whether the grid will be synchronized with the diagram viewport changes (panning and zooming).
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundPageGrid">
            <summary>
            Represents a visual grid of lines usually used as background surface.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundPageGrid.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application
            code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundPageGrid.ResetTheme">
            <summary>
            Resets the theme.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundPageGrid.OnInitialized(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.FrameworkElement.Initialized"/> event.
            This method is invoked whenever <see cref="P:System.Windows.FrameworkElement.IsInitialized"/> is set to true internally.
            </summary>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundPageGrid.PageSizeProperty">
            <summary>
            Identifies the PageSize attached property.
            </summary> 
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundPageGrid.LineStrokeProperty">
            <summary> 
            Identifies the LineStroke attached property.
            </summary> 
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundPageGrid.LineStrokeThicknessProperty">
            <summary> 
            Identifies the LineStrokeThickness attached property.
            </summary> 
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundPageGrid.LineStrokeDashArrayProperty">
            <summary> 
            Identifies the LineStrokeDashArray attached property.
            </summary> 
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundPageGrid.IsGridVisibleProperty">
            <summary>
            Identifies the IsGridVisible attached property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundPageGrid.GetPageSize(System.Windows.DependencyObject)">
            <summary>
            Gets the page size.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundPageGrid.SetPageSize(System.Windows.DependencyObject,System.Windows.Size)">
            <summary>
            Sets the page size.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundPageGrid.GetLineStroke(System.Windows.DependencyObject)">
            <summary>
            Gets the line stroke.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundPageGrid.SetLineStroke(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            Sets the line stroke.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundPageGrid.GetLineStrokeThickness(System.Windows.DependencyObject)">
            <summary>
            Gets the line stroke thickness.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundPageGrid.SetLineStrokeThickness(System.Windows.DependencyObject,System.Double)">
            <summary>
            Sets the line stroke thickness.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundPageGrid.GetLineStrokeDashArray(System.Windows.DependencyObject)">
            <summary>
            Gets the line stroke dash array.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundPageGrid.SetLineStrokeDashArray(System.Windows.DependencyObject,System.Windows.Media.DoubleCollection)">
            <summary>
            Sets the line stroke dash array.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundPageGrid.GetIsGridVisible(System.Windows.DependencyObject)">
            <summary>
            Gets the grid visibility.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundPageGrid.SetIsGridVisible(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the grid visibility.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundPageGrid.CellSize">
            <summary>
            Gets the cell size.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundPageGrid.LineStroke">
            <summary>
            Gets the cell size.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundPageGrid.LineStrokeThickness">
            <summary>
            Gets the cell size.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundPageGrid.LineStrokeDashArray">
            <summary>
            Gets the cell size.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.BackgroundPageGrid.IsDynamic">
            <summary>
            Gets a value indicating whether the grid will be synchronized with the diagram viewport changes (panning and zooming).
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadDiagram">
            <summary>
            Represents the diagram control.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.AddTouchHandlers">
            <summary>
            Initializes the touch behaviors. Must be called in OnApplyTemplate.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.DeserializedEvent">
            <summary>
            Identifies the Deserialized routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.SerializedEvent">
            <summary>
            Identifies the Serialized routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ShapeClickedEvent">
            <summary>
            Identifies the ShapeClicked routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ShapeDoubleClickedEvent">
            <summary>
            Identifies the ShapeDoubleClicked routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ItemsChangedEvent">
            <summary>
            Identifies the ItemsChanged routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ItemsChangingEvent">
            <summary>
            Identifies the ItemsChanging routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.GroupsChangedEvent">
            <summary>
            Identifies the ItemsChanged routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ShapeSerializedEvent">
            <summary>
            Identifies the ShapeSerialized routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.MetadataSerializedEvent">
            <summary>
            Identifies the MetadataSerialized routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.MetadataDeserializedEvent">
            <summary>
            Identifies the MetadataDeserialized routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ShapeDeserializedEvent">
            <summary>
            Identifies the ShapeDeserialized routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ConnectionSerializedEvent">
            <summary>
            Identifies the ConnectionSerialized routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ConnectionDeserializedEvent">
            <summary>
            Identifies the ConnectionDeserialized routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.CommandExecutedEvent">
            <summary>
            Identifies the CommandExecuted routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.PreviewResizeEvent">
            <summary>
            Identifies the PreviewResize routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ResizeEvent">
            <summary>
            Identifies the Resize routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.PreviewDragEvent">
            <summary>
            Identifies the PreviewDrag routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.PreviewPanEvent">
            <summary>
            Identifies the PreviewPan routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.PanEvent">
            <summary>
            Identifies the PreviewPan routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.PreviewRotateEvent">
            <summary>
            Identifies the PreviewRotate routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.RotateEvent">
            <summary>
            Identifies the Rotate routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.DragEvent">
            <summary>
            Identifies the DragEvent routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.SelectedEvent">
            <summary>
            Identifies the Selected routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ConnectorActivationChangedEvent">
            <summary>
            Identifies the ConnectorActivationChanged routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.UnselectedEvent">
            <summary>
            Identifies the Unselected routed event. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.SelectionChangedEvent">
            <summary>
            Identifies the SelectionChanged routed event. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.PreviewSelectionChangedEvent">
            <summary>
            Identifies the PreviewSelectionChanged routed event. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.PositionChangedEvent">
            <summary>
            Identifies the PositionChanged routed event. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.PreviewZoomEvent">
            <summary>
            Identifies the PreviewZoom routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ZoomChangedEvent">
            <summary>
            Identifies the ZoomChanged routed event. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ConnectionManipulationCompletedEvent">
            <summary>
            Identifies the ConnectionManipulationCompleted routed event. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ConnectionManipulationStartedEvent">
            <summary>
            Identifies the ConnectionManipulationStartedEvent routed event. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.DiagramLayoutCompletedEvent">
            <summary>
            Identifies the DiagramLayoutComplete routed event. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.PreviewAdditionalContentActivatedEvent">
            <summary>
            Identifies the PreviewAdditionalContentOpened routed event. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.AdditionalContentActivatedEvent">
            <summary>
            Identifies the AdditionalContentOpened routed event. 
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.OnNudgeCommandExecuted(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Called when the <see cref="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.Nudge"/> is executed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.GetNudgeValue(System.String,Telerik.Windows.Controls.RadDiagram)">
            <summary>
            Gets the nudge vector for the given parameter.
            </summary>
            <param name="parameter">The parameter defining the nudge.
             <para>
            The parameter can be a single string with a value taken from the <see cref="T:Telerik.Windows.Diagrams.Core.Direction"/> enumeration, or a string of the form "direction; amount". The 'direction' being a value from the <see cref="T:Telerik.Windows.Diagrams.Core.Direction"/> enumeration and the 'amount' options are:
            <list type="bullet">
            <item><term>'Small' literal:</term><description> if <see cref="P:Telerik.Windows.Controls.RadDiagram.IsSnapToGridEnabled"/> is <c>true</c> then one <see cref="P:Telerik.Windows.Controls.RadDiagram.SnapX"/> or <see cref="P:Telerik.Windows.Controls.RadDiagram.SnapY"/> step, otherwise on pixel</description></item>
            <item><term>'Large' literal:</term><description> if <see cref="P:Telerik.Windows.Controls.RadDiagram.IsSnapToGridEnabled"/> is <c>true</c> then five <see cref="P:Telerik.Windows.Controls.RadDiagram.SnapX"/> or <see cref="P:Telerik.Windows.Controls.RadDiagram.SnapY"/> steps, otherwise on pixel</description></item>
            <item><term>A number:</term><description> the amount in pixels to nudge. If <see cref="P:Telerik.Windows.Controls.RadDiagram.IsSnapToGridEnabled"/> is <c>true </c> this value will be truncated. </description></item>
            </list>
            </para>
            </param>
            <param name="diagram">The underlying diagram.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Telerik#Windows#Diagrams#Core#ISupportContainerGenerator{Telerik#Windows#Controls#Diagrams#RadDiagramItem}#GetShapeContainerForItemOverride(System.Object)">
            <summary>
            Gets the shape container for item override.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Telerik#Windows#Diagrams#Core#ISupportContainerGenerator{Telerik#Windows#Controls#Diagrams#RadDiagramItem}#GetTextShapeContainerForItemOverride(System.Object)">
            <summary>
            Gets the text shape container for item override.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Telerik#Windows#Diagrams#Core#ISupportContainerGenerator{Telerik#Windows#Controls#Diagrams#RadDiagramItem}#GetConnectionContainerForItemOverride(System.Object)">
            <summary>
            Gets the connection container for item override.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Telerik#Windows#Diagrams#Core#ISupportContainerGenerator{Telerik#Windows#Controls#Diagrams#RadDiagramItem}#IsItemItsOwnConnectionContainerOverride(System.Object)">
            <summary>
            Determines whether [is item its own connection container override] [the specified item].
            </summary>
            <param name="item">The item.</param>
            <returns>
              <c>True</c> if [is item its own connection container override] [the specified item]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Telerik#Windows#Diagrams#Core#ISupportContainerGenerator{Telerik#Windows#Controls#Diagrams#RadDiagramItem}#IsItemItsOwnShapeContainerOverride(System.Object)">
            <summary>
            Determines whether [is item its own shape container override] [the specified item].
            </summary>
            <param name="item">The item.</param>
            <returns>
              <c>True</c> if [is item its own shape container override] [the specified item]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Telerik#Windows#Diagrams#Core#ISupportContainerGenerator{Telerik#Windows#Controls#Diagrams#RadDiagramItem}#PrepareShapeContainerForItemOverride(Telerik.Windows.Controls.Diagrams.RadDiagramItem,System.Object)">
            <summary>
            Prepares the container for item override.
            </summary>
            <param name="container">The container.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Telerik#Windows#Diagrams#Core#ISupportContainerGenerator{Telerik#Windows#Controls#Diagrams#RadDiagramItem}#PrepareConnectionContainerForItemOverride(Telerik.Windows.Controls.Diagrams.RadDiagramItem,System.Object)">
            <summary>
            Prepares the container for item override.
            </summary>
            <param name="container">The container.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Telerik#Windows#Diagrams#Core#ISupportContainerGenerator{Telerik#Windows#Controls#Diagrams#RadDiagramItem}#CleanContainerForItemOverride(Telerik.Windows.Controls.Diagrams.RadDiagramItem,System.Object)">
            <summary>
            Cleans the container for item override.
            </summary>
            <param name="container">The container.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Telerik#Windows#Diagrams#Core#ISupportContainerGenerator{Telerik#Windows#Controls#Diagrams#RadDiagramItem}#UpdateDataContext(Telerik.Windows.Controls.Diagrams.RadDiagramItem,System.Object)">
            <summary>
            Updates the dataContext of the container.
            </summary>
            <param name="container">The container.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.GetShapeContainerForItemOverride(System.Object)">
            <summary>
            Gets the shape container for item override.
            </summary>
            <param name="item">The item.</param>		
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.GetTextShapeContainerForItemOverride(System.Object)">
            <summary>
            Gets the text shape container for item override.
            </summary>
            <param name="item">The item.</param>		
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.GetShapeContainerForItemOverride(Telerik.Windows.Diagrams.Core.IContainerItem)">
            <summary>
            Gets the 'container shape' container for item override.
            </summary>
            <param name="item">The item.</param>		
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.GetConnectionContainerForItemOverride(System.Object)">
            <summary>
            Gets the connection container for item override.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.IsItemItsOwnConnectionContainerOverride(System.Object)">
            <summary>
            Determines whether [is item its own connection container override] [the specified item].
            </summary>
            <param name="item">The item.</param>
            <returns>
              <c>True</c> if [is item its own connection container override] [the specified item]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.IsItemItsOwnShapeContainerOverride(System.Object)">
            <summary>
            Determines whether the item is a container on its own.
            </summary>
            <param name="item">The item.</param>
            <returns>
              <c>True</c> if the item is its own container; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.PrepareShapeContainerForItemOverride(System.Windows.FrameworkElement,System.Object)">
            <summary>
            Prepares the container for item override.
            </summary>
            <param name="container">The container.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.PrepareConnectionContainerForItemOverride(System.Windows.FrameworkElement,System.Object)">
            <summary>
            Prepares the container for item override.
            </summary>
            <param name="container">The container.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.CleanContainerForItemOverride(System.Windows.FrameworkElement,System.Object)">
            <summary>
            Cleans the container for item override.
            </summary>
            <param name="container">The container.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.GetContainerFromItem(System.Object)">
            <summary>
            Gets the (diagram) container of the given item.
            </summary>
            <param name="item">The item.</param>
            <returns>The generated container, which is the item itself if it's an <see cref="T:Telerik.Windows.Diagrams.Core.IDiagramItem"/>.</returns>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.groupsAdorner">
            <summary>
            This adorner is a visual which highlights the currently selected group.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Telerik.Windows.Controls.RadDiagram"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadDiagram"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.ResetTheme">
            <summary>
            Resets the theme.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Duplicate">
            <summary>
            Duplicates the current selection.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.OnInitialized(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.FrameworkElement.Initialized"/> event. This method is invoked whenever <see cref="P:System.Windows.FrameworkElement.IsInitialized"/> is set to true internally.
            </summary>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseMove"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.OnCreateAutomationPeer">
            <summary>
            Creates a <see cref="T:Telerik.Windows.Controls.Diagrams.AutomationPeers.RadDiagramAutomationPeer"/> peer associated with this object.
            </summary>
            <returns> An instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.AutomationPeers.RadDiagramAutomationPeer"/>.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.OnKeyDownHandled(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.OnKeyUpHandled(System.Object,System.Windows.Input.KeyEventArgs)">
            <summary>
            <inheritdoc />
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.OnCanExecuteDeleteCommandOverride(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)">
            <summary>
            Called on can execute delete command.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.OnDeleteCommandExecutedOverride(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Called when delete command is executed.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.OnIsConnectorsManipulationEnabledChanged(System.Boolean,System.Boolean)">
            <summary>
            Called on is connectors manipulation enabled property changed.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.UpdateGroupsAdorner">
            <summary>
            Updates the adorner highlighting the current group.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.AddItemToCanvas(Telerik.Windows.Diagrams.Core.IDiagramItem)">
            <summary>
            Endpoint of the internal processing of a new item and finally adds it to the standard canvas.
            </summary>
            <param name="container">The container item to add.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.AddImageShape(System.IO.Stream,System.Windows.Point)">
            <summary>
            Adds a shape with image content.
            </summary>
            <param name="source"></param>
            <param name="position"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.FileTransfer(Telerik.Windows.Diagrams.Core.DataTransferResult,System.Windows.Point)">
            <summary>
            The default action or handler when a data transfer occurs from the file system to the diagram.
            </summary>
            <seealso cref="T:Telerik.Windows.Controls.Diagrams.DataTransferService"/>
            <seealso cref="M:Telerik.Windows.Controls.RadDiagram.ElementTransfer(Telerik.Windows.Diagrams.Core.DataTransferResult,System.Boolean,System.Windows.Point)"/>
            <param name="fileDrop">The result from the data transfer, i.e. what has been identified from the file being dropped as meaningful diagramming stuff.</param>
            <param name="dropPosition">The drop position.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.ElementTransfer(Telerik.Windows.Diagrams.Core.DataTransferResult,System.Boolean,System.Windows.Point)">
            <summary>
            The default action or handler when a data transfer occurs from the clipboard or other non file system origin to the diagram.
            </summary>
            <param name="elementDrop">The result from the data transfer, i.e. what has been identified from the clipboard or other non file system origin as meaningful diagramming stuff.</param>
            <param name="usePosition">If set to <c>true</c> the given <paramref name="dropPosition"/> will be used, otherwise an offset from the transferred items will be used.</param>
            <param name="dropPosition">The drop position.</param>
            <seealso cref="T:Telerik.Windows.Controls.Diagrams.DataTransferService"/>
            <seealso cref="M:Telerik.Windows.Controls.RadDiagram.FileTransfer(Telerik.Windows.Diagrams.Core.DataTransferResult,System.Windows.Point)"/>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.AddDataTransferData(System.Object,System.Windows.Point,System.Boolean)">
            <summary>
            Transfers the object data into the diagram.
            </summary>
            <param name="data">The data drop.</param>
            <param name="dropPosition">The drop position.</param>
            <param name="isDrop">Identifies whether this is a drop operation.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.AddDataTransferItems(Telerik.Windows.Diagrams.Core.DataTransferResult,System.Windows.Point,System.Boolean)">
            <summary>
            Transfers the image in the <see cref="P:Telerik.Windows.Diagrams.Core.DataTransferResult.Items"/> into the diagram.
            </summary>
            <param name="elementDrop">The element drop.</param>
            <param name="usePosition">If set to <c>true</c> the given <paramref name="dropPosition"/> will be used.</param>
            <param name="dropPosition">The drop position.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.OnDrop(System.Object,Telerik.Windows.DragDrop.DragEventArgs)">
            <summary>
            Handles the drop as managed by the <seealso cref="T:Telerik.Windows.DragDrop.DragDropManager"/>. This method will be called both when there is an internal (e.g. shape toolbox) dragdrop as
            well as an external (file system) dragdrop.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="args">The event arguments.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Telerik#Windows#Diagrams#Core#IGraphInternal#IntersectingConnections(Telerik.Windows.Diagrams.Core.IConnection,System.Nullable{System.Windows.Rect})">
            <summary>
            Returns all intersecting connections that are below or above the given one.
            </summary>
            <param name="connection">The connection.</param>
            <param name="bounds">The bounds. If null the connection's Bounds are used.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.UpdateRectSelection(System.Windows.Rect)">
            <summary>
            Updates the rectangle selection.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.PublishDiagramEvent(Telerik.Windows.Diagrams.Core.DiagramEvent,System.Object)">
            <summary>
            Raises generic event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ConnectionBridgeProperty">
            <summary>
            Identifies the Position dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.RouteConnectionsProperty">
            <summary>
            Identifies the RouteConnections dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ConnectionRoundedCornersProperty">
            <summary>
            Identifies the RoundedCorners dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.PositionProperty">
            <summary>
            Identifies the Position dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ZoomProperty">
            <summary>
            Identifies the Zoom dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.RectSelectionModeProperty">
            <summary>
            Identifies the RectSelectionMode dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.SelectionRectangleStyleProperty">
            <summary>
            Identifies the SelectionRectangleStyle dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.GraphSourceProperty">
            <summary>
            Identifies the GraphSource dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.DisplayMemberPathProperty">
            <summary>
            Identifies the DisplayMemberPath dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ShapeTemplateProperty">
            <summary>
            Identifies the ShapeTemplate dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ShapeTemplateSelectorProperty">
            <summary>
            Identifies the ShapeTemplateSelector dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ShapeEditTemplateProperty">
            <summary>
            Identifies the ShapeEditTemplate dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ShapeEditTemplateSelectorProperty">
            <summary>
            Identifies the ShapeEditTemplateSelector dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ShapeStyleProperty">
            <summary>
            Identifies the ShapeStyle dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ContainerShapeStyleProperty">
            <summary>
            Identifies the ContainerShapeStyle dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ConnectorStyleProperty">
            <summary>
            Identifies the ConnectorStyle dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ShapeStyleSelectorProperty">
            <summary>
            Identifies the ShapeStyleSelector dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ConnectionTemplateProperty">
            <summary>
            Identifies the ConnectionTemplate dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ConnectionTemplateSelectorProperty">
            <summary>
            Identifies the ConnectionTemplateSelector dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ConnectionEditTemplateProperty">
            <summary>
            Identifies the ConnectionEditTemplate dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ConnectionEditTemplateSelectorProperty">
            <summary>
            Identifies the ConnectionEditTemplateSelector dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ConnectionStyleProperty">
            <summary>
            Identifies the ConnectionStyle dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ConnectionStyleSelectorProperty">
            <summary>
            Identifies the ConnectionStyleSelector dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ActiveToolProperty">
            <summary>
            Identifies the ActiveTool dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.SnapXProperty">
            <summary>
            Identifies the SnapX dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.SnapYProperty">
            <summary>
            Identifies the SnapY dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.IsSnapToGridEnabledProperty">
            <summary>
            Identifies the IsSnapEnabled dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.IsSnapToItemsEnabledProperty">
            <summary>
            Identifies the IsSnapToItemsEnabled dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.IsResizingEnabledProperty">
            <summary>
            Identifies the IsResizingEnabled dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.IsRotationEnabledProperty">
            <summary>
            Identifies the IsRotationEnabled dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.IsBackgroundSurfaceVisibleProperty">
            <summary>
            Identifies the IsBackgroundSurfaceVisible dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.IsInformationAdornerVisibleProperty">
            <summary>
            Identifies the IsInformationAdornerVisible dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.IsEditableProperty">
            <summary>
            Identifies the IsEditable dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.IsDraggingEnabledProperty">
            <summary>
            Identifies the IsDraggingEnabled dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.IsPanEnabledProperty">
            <summary>
            Identifies the IsPanEnabled dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.IsZoomEnabledProperty">
            <summary>
            Identifies the IsZoomEnabled dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.IsConnectorsManipulationEnabledProperty">
            <summary>
            Identifies the IsConnectorsManipulationEnabled dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.IsManipulationAdornerVisibleProperty">
            <summary>
            Identifies the IsManipulationAdornerVisible dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.AllowDeleteProperty">
            <summary>
            Identifies the AllowDelete dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.AllowCutProperty">
            <summary>
            Identifies the AllowCut dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.AllowCopyProperty">
            <summary>
            Identifies the AllowCopy dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.AllowPasteProperty">
            <summary>
            Identifies the AllowPaste dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.GroupStyleProperty">
            <summary>
            Identifies the SelectedGroupBrush dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.SelectedIndexProperty">
            <summary>
            Identifies the SelectedIndex dependency property. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.SelectedItemProperty">
            <summary>
            Identifies the SelectedItem dependency property. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.SelectionModeProperty">
            <summary>
            Identifies the SelectionMode dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.SupportTouchGesturesProperty">
            <summary>
            Identifies the SupportTouchGestures dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.AutoLayoutProperty">
            <summary>
            Identifies the AutoLayout dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ItemsProperty">
            <summary>
            Identifies the Items dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.ViewportProperty">
            <summary>
            Identifies the  Viewport dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagram.IsAdditionalContentVisibleProperty">
            <summary>
            Identifies the IsAdditionalContentVisible dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Layout(Telerik.Windows.Diagrams.Core.LayoutType,System.Object)">
            <summary>
            Organizes the diagram using the specified layout.
            </summary>
            <param name="type">The layout type to apply.</param>
            <param name="settings">The settings specific to the layout type.</param>
            <seealso cref="T:Telerik.Windows.Diagrams.Core.TreeLayoutSettings"/>
            <seealso cref="T:Telerik.Windows.Diagrams.Core.SugiyamaSettings"/>
            <seealso cref="T:Telerik.Windows.Diagrams.Core.TreeLayoutType"/>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.LayoutAsync(Telerik.Windows.Diagrams.Core.LayoutType,System.Object)">
            <summary>
            Organizes the diagram using the specified layout asynchronously.
            </summary>
            <param name="type">The layout type to apply.</param>
            <param name="settings">The settings specific to the layout type.</param>
            <seealso cref="T:Telerik.Windows.Diagrams.Core.TreeLayoutSettings"/>
            <seealso cref="T:Telerik.Windows.Diagrams.Core.SugiyamaSettings"/>
            <seealso cref="T:Telerik.Windows.Diagrams.Core.TreeLayoutType"/>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.AddConnection(Telerik.Windows.Diagrams.Core.IShape,Telerik.Windows.Diagrams.Core.IShape,System.Boolean)">
            <summary>
            Adds a new connection to the diagram connecting the given source and target shapes.
            </summary>
            <param name="source">The source or start shape of the connection.</param>
            <param name="target">The target or end shape of the connection.</param>		
            <param name="isUndoable">If set to <c>true</c> this action will be recorded in the undo stack.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.AddGlidingConnection(Telerik.Windows.Diagrams.Core.IShape,Telerik.Windows.Diagrams.Core.IShape,System.Boolean)">
            <summary>
            Adds a new gliding connection to the diagram connecting the given source and target shapes.
            </summary>
            <remarks>If the shape already contains connections on the default connectors this will raise an exception since gliding connections are mutually exclusive with
            normal connections. Remove first the existing connections on the source and target shapes before calling this method.</remarks>
            <param name="source">The source or start shape of the connection.</param>
            <param name="target">The target or end shape of the connection.</param>		
            <param name="isUndoable">If set to <c>true</c> this action will be recorded in the undo stack.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.AddConnection(Telerik.Windows.Diagrams.Core.IShape,Telerik.Windows.Diagrams.Core.IShape,System.String,System.Boolean)">
            <summary>
            Adds a new connection to the diagram connecting the given source and target shapes.
            </summary>
            <param name="source">The source or start shape of the connection.</param>
            <param name="target">The target or end shape of the connection.</param>
            <param name="connectorsPosition">The connectors position.</param>
            <param name="isUndoable">If set to <c>true</c> this action will be recorded in the undo stack.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.AddConnection(Telerik.Windows.Diagrams.Core.IShape,Telerik.Windows.Diagrams.Core.IShape,System.String,System.String,System.Boolean)">
            <summary>
            Adds a new connection to the diagram connecting the given source and target shapes.
            </summary>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
            <param name="sourceConnector">The source connector position.</param>
            <param name="targetConnector">The target connector position.</param>
            <param name="isUndoable">If set to <c>true</c> is undoable.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.AddConnection(System.Windows.Point,System.Windows.Point,System.Boolean)">
            <summary>
            Adds a floating connection.
            </summary>
            <param name="startPoint">The source (starting) point of the connection.</param>
            <param name="endPoint">The target (end) point of the connection.</param>
            <param name="isUndoable">True, if this action is undoable.</param>
            <returns>
            Returns the added connection.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.AddConnection(Telerik.Windows.Diagrams.Core.IConnection,System.Boolean)">
            <summary>
            Adds a new connection to the diagram.
            </summary>
            <param name="connection">The connection to be added.</param>
            <param name="isUndoable">If set to <c>true</c> this action will be recorded in the undo stack.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.AddShape(System.Object,System.Windows.Media.Geometry,System.Nullable{System.Windows.Point},System.Boolean)">
            <summary>
            Adds a new shape to the diagram.
            </summary>
            <remarks>The given object will be inserted as the content of a new RadDiagramShape and will internally uniquely identify the shape. Alternatively, you can instantiate a new shape and use this same AddShape
            method to add it to the diagram, in which case the shape rather than the content will uniquely identify it internally.</remarks>
            <param name="content">The content of the shape.</param>
            <param name="geometry">The geometry.</param>
            <param name="position">The position.</param>
            <param name="isUndoable">If set to <c>true</c> the action is undoable.</param>
            <returns>The added shape.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.AddShape(System.Object,Telerik.Windows.Controls.Diagrams.CommonShapeType,System.Nullable{System.Windows.Point},System.Boolean)">
            <summary>
            Adds a new shape to the diagram.
            </summary>
            <remarks>The given object will be inserted as the content of a new RadDiagramShape and will internally uniquely identify the shape. Alternatively, you can instantiate a new shape and use this same AddShape
            method to add it to the diagram, in which case the shape rather than the content will uniquely identify it internally.</remarks>
            <param name="content">The content of the shape.</param>
            <param name="type">The common shape type.</param>
            <param name="position">The position.</param>
            <param name="isUndoable">If set to <c>true</c> the addition will be recorded as undoable.</param>
            <returns>The added shape.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.AddShape(System.Object,Telerik.Windows.Controls.Diagrams.FlowChartShapeType,System.Nullable{System.Windows.Point},System.Boolean)">
            <summary>
            Adds a new shape to the diagram.
            </summary>
            <remarks>The given object will be inserted as the content of a new RadDiagramShape and will internally uniquely identify the shape. Alternatively, you can instantiate a new shape and use this same AddShape
            method to add it to the diagram, in which case the shape rather than the content will uniquely identify it internally.</remarks>
            <param name="content">The content of the shape.</param>
            <param name="type">The common shape type.</param>
            <param name="position">The position.</param>
            <param name="isUndoable">If set to <c>true</c> the addition will be recorded as undoable.</param>
            <returns>The added shape.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.AddShape(System.Object,Telerik.Windows.Controls.Diagrams.ArrowShapeType,System.Nullable{System.Windows.Point},System.Boolean)">
            <summary>
            Adds a new shape to the diagram.
            </summary>
            <remarks>The given object will be inserted as the content of a new RadDiagramShape and will internally uniquely identify the shape. Alternatively, you can instantiate a new shape and use this same AddShape
            method to add it to the diagram, in which case the shape rather than the content will uniquely identify it internally.</remarks>
            <param name="content">The content of the shape.</param>
            <param name="type">The common shape type.</param>
            <param name="position">The position.</param>
            <param name="isUndoable">If set to <c>true</c> the addition will be recorded as undoable.</param>
            <returns>The added shape.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.AddShape(Telerik.Windows.Diagrams.Core.IShape,System.Nullable{System.Windows.Point},System.Boolean)">
            <summary>
            Adds the given shape to the diagram.
            </summary>
            <param name="shape">The shape to add.</param>
            <param name="position">The position at which the shape will be added on the canvas.</param>
            <param name="isUndoable">If set to <c>true</c> the action is undoable.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Scroll(System.Double,System.Double)">
            <summary>
            Scrolls with specified horizontal and vertical offset.
            </summary>
            <param name="horizontalOffset">The horizontal offset.</param>
            <param name="verticalOffset">The vertical offset.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Deserialize(Telerik.Windows.Diagrams.Core.SerializationInfo)">
            <summary>
            Deserializes the specified info.
            </summary>
            <param name="info">The info.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Serialize">
            <summary>
            Serializes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.RemoveConnection(Telerik.Windows.Diagrams.Core.IConnection,System.Boolean)">
            <summary>
            Removes the connection.
            </summary>
            <param name="connection">The connection.</param>
            <param name="isUndoable">If set to <c>true</c> the action is undoable.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.RemoveShape(Telerik.Windows.Diagrams.Core.IShape,System.Boolean)">
            <summary>
            Removes the shape.
            </summary>
            <param name="shape">The shape.</param>
            <param name="isUndoable">If set to <c>true</c> the action is undoable.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Align(Telerik.Windows.Diagrams.Core.Alignment,System.Collections.Generic.IEnumerable{Telerik.Windows.Diagrams.Core.IShape})">
            <summary>
            Aligns the given shapes.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Snap(System.Collections.Generic.IEnumerable{Telerik.Windows.Diagrams.Core.IShape})">
            <summary>
            Snaps the specified shapes.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Clear">
            <summary>
            Clears the diagram and resets the document.
            </summary>
            <remarks>
            The diagram is not saved prior to this reset. You need to handle in the
            application the eventual necessity to save (or request the user) the diagram
            before this.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Cut">
            <summary>
            Cuts the currently selected items of the diagram.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Copy">
            <summary>
            Copies the currently selected items of the diagram.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Delete">
            <summary>
            Deletes the currently selected items of the diagram.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Paste">
            <summary>
            Pastes the content of the clipboard onto the diagram.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Undo">
            <summary>
            Performs undo on the last action.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Redo">
            <summary>
            Performs redo on the last undone action.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.BringForward(System.Collections.Generic.IEnumerable{Telerik.Windows.Diagrams.Core.IDiagramItem},System.Boolean)">
            <summary>
            Brings the items forward.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.BringToFront(System.Collections.Generic.IEnumerable{Telerik.Windows.Diagrams.Core.IDiagramItem},System.Boolean)">
            <summary>
            Brings the items to front.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.SendBackward(System.Collections.Generic.IEnumerable{Telerik.Windows.Diagrams.Core.IDiagramItem},System.Boolean)">
            <summary>
            Sends the items backward.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.SendToBack(System.Collections.Generic.IEnumerable{Telerik.Windows.Diagrams.Core.IDiagramItem},System.Boolean)">
            <summary>
            Sends the items to back.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Group(System.String,Telerik.Windows.Diagrams.Core.IGroupable[])">
            <summary>
            Groups the specified items.
            </summary>
            <param name="groupName">Name of the new group.</param>
            <param name="items">The groups items to ungroup.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Group(System.String,System.Boolean,Telerik.Windows.Diagrams.Core.IGroupable[])">
            <summary>
            Groups the specified items.
            </summary>
            <param name="groupName">Name of the new group.</param>
            <param name="isUndoable">If set to <c>true</c> the action will be recorded as undoable.</param>
            <param name="items">The groups items to ungroup.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Ungroup(Telerik.Windows.Diagrams.Core.IGroup[])">
            <summary>
            Ungroups the specified items.
            </summary>
            <param name="groups">The groups items to ungroup.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Ungroup(System.Boolean,Telerik.Windows.Diagrams.Core.IGroup[])">
            <summary>
            Ungroups the specified items.
            </summary>
            <param name="isUndoable">If set to <c>true</c> the action will be recorded as undoable.</param>
            <param name="groups">The groups items to ungroup.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.BeginBatchTransformation">
            <summary>
            Begins a batch transformation and signals the undo-redo stack that a
            batch of transformation should be considered as one, i.e. a composite change.
            </summary>
            <seealso cref="M:Telerik.Windows.Controls.RadDiagram.CommitBatchTransformation(Telerik.Windows.Diagrams.Core.DiagramLayoutState,Telerik.Windows.Diagrams.Core.DiagramLayoutState,System.Boolean,System.Boolean,Telerik.Windows.Diagrams.Core.LayoutType,System.Object)"/>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.CommitBatchTransformation(Telerik.Windows.Diagrams.Core.DiagramLayoutState,Telerik.Windows.Diagrams.Core.DiagramLayoutState,System.Boolean,System.Boolean,Telerik.Windows.Diagrams.Core.LayoutType,System.Object)">
            <summary>
            Commits the batch transformation and ends the composite undo redo change.
            </summary>
            <param name="initialState">The initial state.</param>
            <param name="finalState">The final state.</param>
            <param name="animate">If set to <c>true</c> the layout will be animated.</param>
            <param name="execute">Whether the undo-redo unit is only added or also executed.</param>
            <param name="type">The layout type that has been applied.</param>
            <param name="settings">The layout specific settings used for the layout.</param>
            <remarks>The animation tremendously decreases the performance.</remarks>
            <seealso cref="M:Telerik.Windows.Controls.RadDiagram.BeginBatchTransformation"/>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.SelectAll">
            <summary>
            Selects all shapes in the diagram.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.DeselectAll">
            <summary>
            Deselects all shapes in the diagram.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Save">
            <summary>
            Saves the diagram.
            </summary>
            <returns>Returns the serialization string.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Load(System.String)">
            <summary>
            Loads the specified serialization string.
            </summary>
            <param name="serializationValue">The serialization value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.ExportToImage(System.IO.Stream,System.Windows.Media.Imaging.BitmapEncoder,System.Nullable{System.Windows.Rect},System.Windows.Size,System.Windows.Media.Brush,System.Windows.Thickness,System.Double)">
            <summary>
            Exports an image of the given element to stream using the specified bitmap encoder.
            </summary>
            <param name="stream">The stream to write the image to.</param>
            <param name="encoder">The bitmap encoder. If none is specified the <see cref="T:System.Windows.Media.Imaging.PngBitmapEncoder"/> will be used.</param>
            <param name="enclosingBounds">The bound of the diagram which should be exported.</param>
            <param name="returnImageSize">The size of the exported image.</param>
            <param name="backgroundBrush">The background brush to use.</param>
            <param name="margin">The margin around the exported image.</param>
            <param name="dpi">The quality of the image.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Export(System.String)">
            <summary>
            Exports the Diagram into png or bmp.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.IsInViewport(Telerik.Windows.Diagrams.Core.IDiagramItem)">
            <summary>
            Checks if the diagram item is in the viewport.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.Print(Telerik.Windows.Controls.Diagrams.RadDiagramPrintSettings)">
            <summary>
            Print the diagram.
            </summary>
            <param name="printSettings">The print settings.</param>
            <returns>True when the printing is successful, False otherwise.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.ZoomIn(System.Nullable{System.Double},System.Nullable{System.Windows.Point},System.Boolean)">
            <summary>
            Zooms in the diagram. Simulates zooming with the mouse.
            Performs incremental zoom taking into account previous zoom operations.
            </summary>
            <param name="factor">The value by which to change <see cref="P:Telerik.Windows.Controls.RadDiagram.Zoom"/> property.
            When factor is null, smaller or equal to zero the <see cref="P:Telerik.Windows.Diagrams.Core.DiagramConstants.ZoomFactor"/> value will be used.</param>
            <param name="targetPoint">The center of the zoom. The point should be provided in viewport coordinates.</param>
            <param name="useAnimation">Determines whether animation should be used.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.ZoomOut(System.Nullable{System.Double},System.Nullable{System.Windows.Point},System.Boolean)">
            <summary>
            Zooms out the diagram. Simulates zooming with the mouse.
            Performs incremental zoom taking into account previous zoom operations.
            </summary>
            <param name="factor">The value by which to change <see cref="P:Telerik.Windows.Controls.RadDiagram.Zoom"/> property.
            When factor is null, smaller or equal to zero the <see cref="P:Telerik.Windows.Diagrams.Core.DiagramConstants.ZoomFactor"/> value will be used.</param>
            <param name="targetPoint">The center of the zoom. The point should be provided in viewport coordinates.</param>
            <param name="useAnimation">Determines whether animation should be used.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.AutoFit">
            <summary>
            Zoom and pans the diagram in such a way that all items will fit into the currently visible area of the canvas.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.AutoFit(System.Windows.Thickness,System.Boolean)">
            <summary>
            Zoom and pans the diagram in such a way that all items will fit into the currently visible area of the canvas.
            If there are no items or the visible area is with empty size or the margin is greater than the visible area no action will be performed.
            </summary>
            <param name="margin">The margin to be used as whitespace border around the diagram items.</param>
            <param name="useAnimation">Determines whether animations should be used.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.AutoFitAsync(System.Windows.Thickness,System.Boolean)">
            <summary>
            Zoom and pans the diagram asynchronously in such a way that all items will fit into the currently visible area of the canvas.
            If there are no items or the visible area is with empty size or the margin is greater than the visible area no action will be performed.
            </summary>
            <param name="margin">The margin to be used as whitespace border around the diagram items.</param>
            <param name="useAnimation">Determines whether animations should be used.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.FitTo(System.Windows.Rect,System.Boolean)">
            <summary>
            Makes the requested rectangle the new view port. After the rectangle is placed in the top left corner of the view port
            a zoom operation stretches the rectangle to occupy the whole view port.
            The zoom is coerced according to <see cref="P:Telerik.Windows.Controls.RadDiagram.Zoom"/> property restriction.
            </summary>
            <param name="newViewport">The new viewport.
            If the viewport is invalid (NaN or infinity for position or size) the operation will not be executed.
            The desired zoom level after the bring operation is determined by the ratio of new viewport width to current viewport width.</param>
            <param name="useAnimation">Determines whether an animation will be used.</param>
            <returns>Whether the operation has bee executed successfully or not.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.BringIntoView(System.Windows.Rect,System.Boolean)">
            <summary>
            Makes the requested rectangle the new view port. After the rectangle is centered in the view port a zoom operation
            stretches the rectangle to occupy the whole view port. The zoom is coerced according to 
            <see cref="P:Telerik.Windows.Controls.RadDiagram.Zoom"/> property restriction.
            </summary>
            <param name="newViewPort">The rect to bring into view. If the rectangle is empty the operation will not be executed.</param>
            <param name="useAnimation">Determines whether an animation will be used.</param>
            <returns>Whether the operation has bee executed successfully or not.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.BringIntoView(System.Windows.Point,System.Double,System.Boolean)">
            <summary>
            Brings the provided point into the top left corner of the view port with the requested zoom.
            </summary>
            <param name="position">The point to bring to the top left view port corner.
            If the position is invalid (NaN or infinity) the operation will not be executed.</param>
            <param name="zoomLevel">The zoom level. It will be coerced according to <see cref="P:Telerik.Windows.Controls.RadDiagram.Zoom"/> property restriction.</param>
            <param name="useAnimation">Determines whether an animation will be used.</param>
            <returns>Whether the operation has bee executed successfully or not.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.BringIntoView(System.Object,System.Double,System.Boolean)">
            <summary>
            Brings the provided item to the center of the view port with the requested zoom.
            </summary>
            <param name="item">The shape to bring to the center of the view port.
            If the item is null or has with invalid position/size (NaN or infinity) the operation will not be executed.</param>
            <param name="zoomLevel">The zoom level. It will be coerced according to <see cref="P:Telerik.Windows.Controls.RadDiagram.Zoom"/> property restriction.</param>
            <param name="useAnimation">Determines whether an animation will be used.</param>
            <returns>Whether the operation has bee executed successfully or not.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.ResetViewport(System.Boolean)">
            <summary>
            Brings the (0, 0) point into the top left corner of the view port with zoom equal to 1.
            </summary>
            <param name="useAnimation">Determines whether an animation will be used.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Called when the mouse wheel is used to zoom the diagram.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseWheelEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.OnPositionChanged(System.Windows.Point,System.Windows.Point)">
            <summary>
            Called when the <see cref="P:Telerik.Windows.Controls.RadDiagram.Position"/> property changes.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.OnZoomChanged(System.Double,System.Double)">
            <summary>
            Called when the <see cref="P:Telerik.Windows.Controls.RadDiagram.Zoom"/>property changes.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.OnRouteConnectionsChanged(System.Boolean,System.Boolean)">
            <summary>
            Called on route connections property change.
            </summary>
            <param name="newValue">The new value.</param>
            <param name="oldValue">The old value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.PanInternal(System.Windows.Point,System.Boolean)">
            <summary>
            Pans the diagram to the provided position. The values are interpreted in the zoomed coordinate system.
            This means that panning with 100 pixel will result in visual translation with 100 pixel.
            </summary>
            <param name="newPosition">The new position.</param>
            <param name="useAnimation">Determines whether the pan should be animated or not.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagram.ZoomInternal(System.Double,System.Windows.Point,Telerik.Windows.Controls.Diagrams.ZoomType,System.Boolean)">
            <summary>
            Zooms the diagram.
            With incremental zoom the difference between current zoom and new zoom will be applied in the new zoom center.
            This way the new zoom values will be accumulated to the previous once.
            With non incremental zoom (absolute) the new zoom and zoom point will clear the old zoom values.
            </summary>
            <param name="newZoom">The new zoom value.</param>
            <param name="newZoomPoint">The point where new zoom should be applied. The point should be provided in original coordinates.</param>
            <param name="zoomType">Type of the zoom.</param>
            <param name="useAnimation">Determines whether animation should be used.</param>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.VisualChildrenChanged">
            <summary>
            Occurs when [children changed].
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.ItemsChanged">
            <summary>
            Occurs when count of the items change.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.ItemsChanging">
            <summary>
            Occurs while the diagram items are changing.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.GroupsChanged">
            <summary>
            Occurs when count of the groups change.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.Deserialized">
            <summary>
            Occurs when the diagram has been deserialized.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.Serialized">
            <summary>
            Occurs after the diagram has been serialized.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.ShapeClicked">
            <summary>
            Occurs when shape is clicked.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.ShapeDoubleClicked">
            <summary>
            Occurs when a shape has been double-clicked.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.MetadataSerialized">
            <summary>
            Occurs when the diagram's metadata has been serialized.
            </summary>
            <remarks>This event allows you to add additional, application specific data to the serialization.</remarks>
            <seealso cref="E:Telerik.Windows.Controls.RadDiagram.MetadataDeserialized"/>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.MetadataDeserialized">
            <summary>
            Occurs when the diagram's metadata has been deserialized.
            </summary>
            <remarks>The event allows you to deserialize the additional data added, if any, using the <see cref="E:Telerik.Windows.Controls.RadDiagram.MetadataDeserialized"/> event handler.</remarks>
            <see cref="E:Telerik.Windows.Controls.RadDiagram.ShapeSerialized"/>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.ShapeSerialized">
            <summary>
            Occurs when a shape has been serialized.
            </summary>
            <remarks>This event allows you to add additional, application specific data to the serialization.</remarks>
            <seealso cref="E:Telerik.Windows.Controls.RadDiagram.ShapeDeserialized"/>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.ShapeDeserialized">
            <summary>
            Occurs when a shape has been deserialized.
            </summary>
            <remarks>The event allows you to deserialize the additional data added, if any, using the <see cref="E:Telerik.Windows.Controls.RadDiagram.ShapeSerialized"/> event handler.</remarks>
            <see cref="E:Telerik.Windows.Controls.RadDiagram.ShapeSerialized"/>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.ConnectionSerialized">
            <summary>
            Occurs when a connection has been serialized.
            </summary>
            <remarks>This event allows you to add additional, application specific data to the serialization.</remarks>
            <seealso cref="E:Telerik.Windows.Controls.RadDiagram.ConnectionDeserialized"/>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.ConnectionDeserialized">
            <summary>
            Occurs when a connection has been deserialized.
            </summary>
            <remarks>This event allows you to recover additional, application specific data from the serialization.</remarks>
            <seealso cref="E:Telerik.Windows.Controls.RadDiagram.ConnectionSerialized"/>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.CommandExecuted">
            <summary>
            Occurs when a command is executed.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.PreviewResize">
            <summary>
            Occurs before an item is resized.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.Resize">
            <summary>
            Occurs when an item is resized.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.PreviewPan">
            <summary>
            Occurs before the diagram is panned.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.ConnectorActivationChanged">
            <summary>
            Occurs after a connector activation or deactivation.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.Pan">
            <summary>
            Occurs after the diagram is panned.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.Drag">
            <summary>
            Occurs when an item is dragged.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.PreviewDrag">
            <summary>
            Occurs before an item is dragged.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.PreviewRotate">
            <summary>
            Occurs before an item is rotated.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.Rotate">
            <summary>
            Occurs when an item is rotated.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.SelectionChanged">
            <summary>
            Occurs when the selection of the diagram changes.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.PreviewSelectionChanged">
            <summary>
            Occurs when the selection of the diagram starts changing.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.PositionChanged">
            <summary>
            Occurs when the position has changed.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.PreviewZoom">
            <summary>
            Occurs before the zoom has been changed.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.ZoomChanged">
            <summary>
            Occurs when the zoom has been changed.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.ViewportChanged">
            <summary>
            Occurs when the viewport has changed.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.ConnectionManipulationCompleted">
            <summary>
            Occurs when the connection manipulation has completed.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.ConnectionManipulationStarted">
            <summary>
            Occurs before the connection manipulation has started.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.DiagramLayoutComplete">
            <summary>
            Occurs when the diagram layout has completed.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.GraphSourceChanging">
            <summary>
            Occurs when the graph source begins changing.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.GraphSourceChanged">
            <summary>
            Occurs when the graph source has changed.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.PreviewAdditionalContentActivated">
            <summary>
            Occurs when AdditionContent is about to be activated.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.AdditionalContentActivated">
            <summary>
            Occurs when AdditionContent is activated.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagram.SelectionBoundsChanged">
            <summary>
            Occurs when the selection bounds of the diagram changes.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.SupportTouchGestures">
            <summary>
            Gets or sets a value indicating whether the touch gestures are enabled by default.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.IgnoreLinkDirection">
            <summary>
            Gets or sets a value indicating whether the underlying graph structure is a directional graph.
            </summary>
            <value>
            <c>True</c> if link directions are ignored; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.ActiveTool">
            <summary>
            Gets or sets the tool which is active when interacting with the diagram elements.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>
            The position.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.ConnectionBridge">
            <summary>
            Gets or sets the connection bridge type.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.RouteConnections">
            <summary>
            Gets whether the <see cref="F:Telerik.Windows.Diagrams.Core.ConnectionType.Spline"/> and <see cref="F:Telerik.Windows.Diagrams.Core.ConnectionType.Polyline"/> connections will be automatically routed. 
            </summary>
            <remarks>Setting this property has no effect on other connection types.</remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.ConnectionRoundedCorners">
            <summary>
            Gets or sets whether the corners of the (polyline) connection are rounded.
            </summary>
            <remarks>This property has only an effect when the <see cref="P:Telerik.Windows.Diagrams.Core.IConnection.ConnectionType"/> is set to <see cref="F:Telerik.Windows.Diagrams.Core.ConnectionType.Polyline"/>.</remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.Zoom">
            <summary>
            Gets or sets the zoom.
            A zoom value of 1 means 100% and less then 1 means a zoom out.
            Zoom value will be coerced to be greater than zero, not infinity and not Nan.
            In addition, Zoom value will be coerced to be greater or equal than <see cref="P:Telerik.Windows.Diagrams.Core.DiagramConstants.MinimumZoom"/>
            and smaller or equal than <see cref="P:Telerik.Windows.Diagrams.Core.DiagramConstants.MaximumZoom"/>.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.IsInformationAdornerVisible">
            <summary>
            Gets or sets whether the information adorner is visible.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.AutoLayout">
            <summary>
            Gets or sets the auto layout.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.Viewport">
            <summary>
            Gets the bounds of the viewport.
            </summary>
            
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.Shapes">
            <summary>
            Gets the shapes.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.Groups">
            <summary>
            Gets the group collection.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.GroupStyle">
            <summary>
            Gets or sets the Style for the groups adorner. It is shown when a group is selected.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.Connections">
            <summary>
            Gets the connections.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.Metadata">
            <summary>
            Gets the diagram metadata.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.SnapX">
            <summary>
            Gets or sets the horizontal snapping distance.
            </summary>
            <value>
            The horizontal snapping distance.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.SnapY">
            <summary>
            Gets or sets the vertical snapping distance.
            </summary>
            <value>
            The vertical snapping distance.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.IsSnapToGridEnabled">
            <summary>
            Gets or sets a value indicating whether grid snapping is enabled.
            </summary>
            <value>
            	<c>True</c> if grid snapping is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.IsSnapToItemsEnabled">
            <summary>
            Gets or sets a value indicating whether snapping of selected item(s) to the other items in the view port is enabled or not.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.IsBackgroundSurfaceVisible">
            <summary>
            Gets or sets whether the background grid is visible.
            </summary>	
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.IsMouseCaptured">
            <summary>
            Gets or sets a value indicating whether the mouse is captured.
            </summary>
            <value>
            	<c>True</c> if the mouse is captured; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.IsRotationEnabled">
            <summary>
            Gets or sets a value indicating whether rotation is enabled.
            </summary>
            <value>
            	<c>true</c> if this rotation is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.IsResizingEnabled">
            <summary>
            Gets or sets a value indicating whether resizing is enabled.
            </summary>
            <value>
            	<c>True</c> if resizing is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.IsEditable">
            <summary>
            Gets or sets a value indicating whether editing is enabled.
            </summary>
            <value>
              <c>True</c> if editing is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.IsDraggingEnabled">
            <summary>
            Gets or sets a value indicating whether dragging is enabled.
            </summary>
            <value>
              <c>True</c> if dragging is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.IsPanEnabled">
            <summary>
            Gets or sets a value indicating whether panning is enabled.
            </summary>
            <value>
              <c>True</c> if panning is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.IsZoomEnabled">
            <summary>
            Gets or sets a value indicating whether zooming is enabled.
            </summary>
            <value>
              <c>True</c> if zooming is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.IsConnectorsManipulationEnabled">
            <summary>
            Gets or sets a value indicating whether manipulation on the connectors is enabled.
            </summary>
            <value>
              <c>True</c> if manipulation on connectors is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.IsManipulationAdornerVisible">
            <summary>
            Gets or sets a value indicating whether the manipulation adorner is visible.
            </summary>
            <value>
              <c>True</c> if the manipulation adorner is visible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.AllowDelete">
            <summary>
            Gets or sets a value indicating whether deleting is allowed.
            </summary>
            <value>
              <c>True</c> if deleting is allowed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.AllowCut">
            <summary>
            Gets or sets a value indicating whether cutting is allowed.
            </summary>
            <value>
              <c>True</c> if cutting is allowed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.AllowCopy">
            <summary>
            Gets or sets a value indicating whether copying is allowed.
            </summary>
            <value>
              <c>True</c> if copying is allowed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.AllowPaste">
            <summary>
            Gets or sets a value indicating whether pasting is allowed.
            </summary>
            <value>
              <c>True</c> if pasting is allowed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.GraphSource">
            <summary>
            Gets or sets the graph source.
            </summary>
            <value>
            The graph source.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.Items">
            <summary>
            Gets or sets the diagramming items.
            </summary>
            <value>The items.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.SelectionRectangleStyle">
            <summary>
            Gets or sets the style of the selection rectangle.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.DisplayMemberPath">
            <summary>
            Gets or sets the display member path.
            </summary>
            <value>
            The display member path.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.ShapeTemplate">
            <summary>
            Gets or sets the shape template.
            </summary>
            <value>
            The shape template.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.ShapeTemplateSelector">
            <summary>
            Gets or sets the shape template selector.
            </summary>
            <value>
            The shape template selector.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.ShapeEditTemplate">
            <summary>
            Gets or sets the shape edit template.
            </summary>
            <value>
            The shape edit template.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.ShapeEditTemplateSelector">
            <summary>
            Gets or sets the shape edit template selector.
            </summary>
            <value>
            The shape edit template selector.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.ShapeStyle">
            <summary>
            Gets or sets the shape style.
            </summary>
            <value>
            The shape style.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.ContainerShapeStyle">
            <summary>
            Gets or sets the container shape style.
            </summary>
            <value>
            The container shape style.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.ConnectorStyle">
            <summary>
            Gets or sets the connector style.
            </summary>
            <value>
            The connector style.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.ShapeStyleSelector">
            <summary>
            Gets or sets the shape style selector.
            </summary>
            <value>
            The shape style selector.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.ConnectionTemplate">
            <summary>
            Gets or sets the connection template.
            </summary>
            <value>
            The connection template.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.ConnectionTemplateSelector">
            <summary>
            Gets or sets the connection template selector.
            </summary>
            <value>
            The connection template selector.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.ConnectionEditTemplate">
            <summary>
            Gets or sets the connection edit template.
            </summary>
            <value>
            The connection edit template.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.ConnectionEditTemplateSelector">
            <summary>
            Gets or sets the connection edit template selector.
            </summary>
            <value>
            The connection edit template selector.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.ConnectionStyle">
            <summary>
            Gets or sets the connection style.
            </summary>
            <value>
            The connection style.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.ConnectionStyleSelector">
            <summary>
            Gets or sets the connection style selector.
            </summary>
            <value>
            The connection style selector.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.RectSelectionMode">
            <summary>
            Gets or sets the rectangle selection mode.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.ContainerGenerator">
            <summary>
            Gets the container generator.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.UndoRedoService">
            <summary>
            Gets the undo redo service.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.RoutingService">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.SelectedItems">
            <summary>
            Gets the selected items.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.ServiceLocator">
            <summary>
            Gets the service locator.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.SelectedItem">
            <summary>
            Gets or sets the first item in the current selection or returns null if the selection is empty. This is a dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.SelectedIndex">
            <summary>
            Gets or sets the index of the first item in the current selection or returns negative one (-1) if the selection is empty.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.SelectionBounds">
            <summary>
            Gets the starting selection bounds.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.SelectionMode">
            <summary>
            Gets or sets the selection mode.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagram.IsAdditionalContentVisible">
            <summary>
            Gets a value indicating whether the additional content visible.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.DataTransferService">
            <summary>
            Default implementation of the <see cref="T:Telerik.Windows.Diagrams.Core.IDataTransferService"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DataTransferService.#ctor(Telerik.Windows.Diagrams.Core.IGraphInternal)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.DataTransferService"/> class.
            </summary>
            <param name="graph">The diagram control.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DataTransferService.HandleDrop(System.Windows.DataObject,System.Action{Telerik.Windows.Diagrams.Core.DataTransferResult},System.Action{Telerik.Windows.Diagrams.Core.DataTransferResult})">
            <summary>
            Handles the transfer of data when there is a dragdrop action. This can be both an internal dragdrop (from one control to another within the same application) as well as an external dragdrop (from one application to another
            or from the file system to an application).
            </summary>
            <param name="dataObject">The data object being transferred.</param>
            <param name="fileDropAction">The file drop action which will handle the result of the external data transfer.</param>
            <param name="elementDropAction">The element drop action which will handle the result of the internal data transfer.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DataTransferService.HandlePaste(System.Windows.DataObject,System.Action{Telerik.Windows.Diagrams.Core.DataTransferResult})">
            <summary>
            Handles the transfer of data when a copy-paste or cut-paste was performed.
            </summary>
            <param name="dataObject">The data object being transferred.</param>
            <param name="action">The action which will handle the result of the clipboard data transfer.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DataTransferService.CreateImage(System.IO.Stream)">
            <summary>
            The transformation of image stream data to an image.
            </summary>
            <param name="imageStream">The image stream.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DataTransferService.TryGetDiagramSerializationInfo(System.String,Telerik.Windows.Diagrams.Core.SerializationInfo@)">
            <summary>
            Attempts to fetch the <see cref="T:Telerik.Windows.Diagrams.Core.SerializationInfo"/> from the string which supposedly contains a serialized diagram as XML.
            </summary>
            <param name="diagramXML">The diagram XML.</param>
            <param name="serializationInfo">The serialization info.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DataTransferService.CreateShapeFromImage(System.Windows.Controls.Image)">
            <summary>
            Creates a diagram shape for the given image.
            </summary>
            <param name="image">The image to wrap in a shape.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DataTransferService.TryGetDiagramSerializationInfo(System.Windows.DataObject,Telerik.Windows.Diagrams.Core.SerializationInfo@)">
            <summary>
            Attempts to fetch the <see cref="T:Telerik.Windows.Diagrams.Core.SerializationInfo"/> from the <see cref="P:Telerik.Windows.DragDrop.DragEventArgs.Data"/>.
            </summary>
            <param name="dataObject">The data object.</param>
            <param name="serializationInfo">The serialization info.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DataTransferService.TryGetDiagramSerializationInfo(Telerik.Windows.DragDrop.DragEventArgs,Telerik.Windows.Diagrams.Core.SerializationInfo@)">
            <summary>
            Attempts to fetch the <see cref="T:Telerik.Windows.Diagrams.Core.SerializationInfo"/> from the <see cref="P:Telerik.Windows.DragDrop.DragEventArgs.Data"/>.
            </summary>
            <param name="args">The <see cref="T:Telerik.Windows.DragDrop.DragEventArgs"/> instance containing the event data.</param>
            <param name="serializationInfo">The serialization info.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DataTransferService.TryGetDiagramDropInfo(System.Windows.DataObject,Telerik.Windows.Controls.Diagrams.DiagramDropInfo@)">
            <summary>
            Attempts to fetch the <see cref="T:Telerik.Windows.Controls.Diagrams.DiagramDropInfo"/> from the <see cref="P:Telerik.Windows.DragDrop.DragEventArgs.Data"/>.
            </summary>
            <param name="dataObject">The data object.</param>
            <param name="dropInfo">The drop info.</param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DataTransferService.SupportedImageFileExtensions">
            <summary>
            Gets the supported image file extensions when an image is taken from the clipboard or dragdropped onto the diagram.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.AdditionalContentActivatedEventArgs">
            <summary>
            Event args used holding the ContextItems for SettingsPaneView. They are used in RadDiagramAdditionalContentActivated events.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.AdditionalContentActivatedEventArgs.#ctor(System.Windows.RoutedEvent)">
            <summary>
             Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.AdditionalContentActivatedEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.AdditionalContentActivatedEventArgs.ContextItems">
            <summary>
            Gets or Sets the ContextItems for SettingsPane / SettingsPaneView.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.ConnectorActivationChangedEventArgs">
            <summary>
            Represents ConnectorActivation routed event args.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.ConnectorActivationChangedEventArgs.#ctor(System.Windows.RoutedEvent,Telerik.Windows.Diagrams.Core.IConnector)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.ConnectorActivationChangedEventArgs"/> class.
            </summary>
            <param name="routedEvent">The routed event.</param>
            <param name="connector">The connector.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.ConnectorActivationChangedEventArgs.Connector">
            <summary>
            Gets or sets the connector.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.DiagramItemsChangingEventArgs">
            <summary>
            Represents ItemsChanging event args.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DiagramItemsChangingEventArgs.#ctor(System.Windows.RoutedEvent,System.Collections.IEnumerable,System.Collections.IEnumerable,System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.DiagramItemsChangingEventArgs"/> class.
            </summary>
            <param name="routedEvent">The routed event.</param>
            <param name="newItems">The new items.</param>
            <param name="oldItems">The old items.</param>
            <param name="action">The action.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramItemsChangingEventArgs.NewItems">
            <summary>
            The new items.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramItemsChangingEventArgs.OldItems">
            <summary>
            The old items.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramItemsChangingEventArgs.Action">
            <summary>
            Gets the action.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.ItemsManipulationRoutedEventArgs">
            <summary>
            Represents ItemsManipulation event args.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.DiagramItemsRoutedEventArgs">
            <summary>
            Represents items routed event args.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DiagramItemsRoutedEventArgs.#ctor(System.Windows.RoutedEvent,System.Collections.Generic.IEnumerable{Telerik.Windows.Diagrams.Core.IDiagramItem})">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.DiagramItemsRoutedEventArgs"/> class.
            </summary>
            <param name="routedEvent">The routed event.</param>
            <param name="items">The items.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramItemsRoutedEventArgs.Items">
            <summary>
            Gets the associated items.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.ItemsManipulationRoutedEventArgs.#ctor(System.Windows.RoutedEvent,System.Collections.Generic.IEnumerable{Telerik.Windows.Diagrams.Core.IDiagramItem})">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.ItemsManipulationRoutedEventArgs"/> class.
            </summary>
            <param name="routedEvent">The routed event.</param>
            <param name="items">The items.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.ItemsManipulationRoutedEventArgs.#ctor(System.Windows.RoutedEvent,System.Collections.Generic.IEnumerable{Telerik.Windows.Diagrams.Core.IDiagramItem},System.Windows.Point)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.ItemsManipulationRoutedEventArgs"/> class.
            </summary>
            <param name="routedEvent">The routed event.</param>
            <param name="items">The items.</param>
            <param name="mousePosition">The mouse position.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.ItemsManipulationRoutedEventArgs.MousePosition">
            <summary>
            Gets the mouse point.
            </summary>
            <value>The mouse point.</value>
        </member>
        <member name="T:Telerik.Windows.Diagrams.Core.ColorExtension">
            <summary>
            A collection of utilities related to color.
            </summary>
            <seealso cref="T:Telerik.Windows.Diagrams.Core.KnownColors"/>
        </member>
        <member name="M:Telerik.Windows.Diagrams.Core.ColorExtension.op_Implicit(System.UInt32)~Telerik.Windows.Diagrams.Core.ColorExtension">
            <summary>
            Performs an implicit conversion from <see cref="T:System.UInt32"/> to <see cref="T:Telerik.Windows.Diagrams.Core.ColorExtension"/>.
            </summary>
            <param name="color">The color.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Diagrams.Core.ColorExtension.op_Implicit(Telerik.Windows.Diagrams.Core.ColorExtension)~System.Windows.Media.Color">
            <summary>
            Performs an implicit conversion from <see cref="T:Telerik.Windows.Diagrams.Core.ColorExtension"/> to <see cref="T:System.Windows.Media.Color"/>.
            </summary>
            <param name="color">The color.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Diagrams.Core.ColorExtension.op_Implicit(Telerik.Windows.Diagrams.Core.ColorExtension)~System.Windows.Media.Brush">
            <summary>
            Performs an implicit conversion from <see cref="T:Telerik.Windows.Diagrams.Core.ColorExtension"/> to <see cref="T:System.Windows.Media.Brush"/>.
            </summary>
            <param name="color">The color.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Diagrams.Core.ColorExtension.ToBrush(Telerik.Windows.Diagrams.Core.ColorExtension)">
            <summary>
            Converts ColorExtension to Brush.
            </summary>
            <param name="color">The color.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Diagrams.Core.ColorExtension.op_Implicit(Telerik.Windows.Diagrams.Core.ColorExtension)~System.Int32">
            <summary>
            Performs an implicit conversion from <see cref="T:Telerik.Windows.Diagrams.Core.ColorExtension"/> to <see cref="T:System.UInt32"/>.
            </summary>
            <param name="color">The color.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="T:Telerik.Windows.Diagrams.Core.KnownColors">
            <summary>
            A collection of color presets.
            </summary>
            <remarks>These colors are available under WPF in the Colors class but missing in under Silverlight.</remarks>
            <example>
            Through the implicit conversion you can use the <see cref="T:Telerik.Windows.Diagrams.Core.KnownColors"/> directly to define a color, a number or even a brush like so:
            <code>
            Color color = KnownColors.DarkGreen; 
            Brush brush = KnownColors.CadetBlue;
            int number = KnownColors.Crimson;
            </code>
            </example>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.AliceBlue">
            <summary>
            The AliceBlue color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.AntiqueWhite">
            <summary>
            The AntiqueWhite color preset. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Aqua">
            <summary>
             The Aqua color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Aquamarine">
            <summary>
             The Aquamarine color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Azure">
            <summary>
             The Azure color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Beige">
            <summary>
             The Beige color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Bisque">
            <summary>
             The Bisque color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Black">
            <summary>
             The Black color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.BlanchedAlmond">
            <summary>
             The BlanchedAlmond color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Blue">
            <summary>
             The Blue color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.BlueViolet">
            <summary>
             The BlueViolet color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Brown">
            <summary>
             The Brown color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.BurlyWood">
            <summary>
             The BurlyWood color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.CadetBlue">
            <summary>
             The CadetBlue color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Chartreuse">
            <summary>
             The Chartreuse color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Chocolate">
            <summary>
             The Chocolate color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Coral">
            <summary>
             The Coral color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.CornflowerBlue">
            <summary>
             The CornflowerBlue color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.CornSilk">
            <summary>
             The CornSilk color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Crimson">
            <summary>
             The Crimson color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Cyan">
            <summary>
             The Cyan color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.DarkBlue">
            <summary>
             The DarkBlue color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.DarkCyan">
            <summary>
             The DarkCyan color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.DarkGoldenrod">
            <summary>
             The DarkGoldenrod color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.DarkGray">
            <summary>
             The DarkGray color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.DarkGreen">
            <summary>
             The DarkGreen color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.DarkKhaki">
            <summary>
             The DarkKhaki color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.DarkMagenta">
            <summary>
             The DarkMagenta color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.DarkOliveGreen">
            <summary>
             The DarkOliveGreen color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.DarkOrange">
            <summary>
             The DarkOrange color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.DarkOrchid">
            <summary>
             The DarkOrchid color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.DarkRed">
            <summary>
             The DarkRed color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.DarkSalmon">
            <summary>
             The DarkSalmon color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.DarkSeaGreen">
            <summary>
             The DarkSeaGreen color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.DarkSlateBlue">
            <summary>
             The DarkSlateBlue color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.DarkSlateGray">
            <summary>
             The DarkSlateGray color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.DarkTurquoise">
            <summary>
             The DarkTurquoise color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.DarkViolet">
            <summary>
             The DarkViolet color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.DeepPink">
            <summary>
             The DeepPink color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.DeepSkyBlue">
            <summary>
             The DeepSkyBlue color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.DimGray">
            <summary>
             The DimGray color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.DodgerBlue">
            <summary>
             The DodgerBlue color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Firebrick">
            <summary>
             The Firebrick color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.FloralWhite">
            <summary>
             The FloralWhite color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.ForestGreen">
            <summary>
             The ForestGreen color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Fuchsia">
            <summary>
             The Fuchsia color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Gainsboro">
            <summary>
              The Gainsboro color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.GhostWhite">
            <summary>
             The GhostWhite color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Gold">
            <summary>
             The Gold color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Goldenrod">
            <summary>
             The Goldenrod color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Gray">
            <summary>
             The Gray color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Green">
            <summary>
             The Green color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.GreenYellow">
            <summary>
             The GreenYellow color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Honeydew">
            <summary>
             The Honeydew color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.HotPink">
            <summary>
             The HotPink color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.IndianRed">
            <summary>
             The IndianRed color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Indigo">
            <summary>
             The Indigo color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Ivory">
            <summary>
             The Ivory color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Khaki">
            <summary>
             The Khaki color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Lavender">
            <summary>
             The Lavender color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.LavenderBlush">
            <summary>
             The LavenderBlush color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.LawnGreen">
            <summary>
             The LawnGreen color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.LemonChiffon">
            <summary>
             The LemonChiffon color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.LightBlue">
            <summary>
             The LightBlue color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.LightCoral">
            <summary>
             The LightCoral color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.LightCyan">
            <summary>
             The LightCyan color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.LightGoldenrodYellow">
            <summary>
             The LightGoldenrodYellow color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.LightGray">
            <summary>
             The LightGray color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.LightLightGray">
            <summary>
             The LightLightGray color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.LightGreen">
            <summary>
             The LightGreen color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.LightPink">
            <summary>
             The LightPink color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.LightSalmon">
            <summary>
             The LightSalmon color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.LightSeaGreen">
            <summary>
             The LightSeaGreen color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.LightSkyBlue">
            <summary>
             The LightSkyBlue color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.LightSlateGray">
            <summary>
             The LightSlateGray color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.LightSteelBlue">
            <summary>
             The LightSteelBlue color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.LightYellow">
            <summary>
             The LightYellow color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Lime">
            <summary>
             The Lime color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.LimeGreen">
            <summary>
             The LimeGreen color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Linen">
            <summary>
             The Linen color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Magenta">
            <summary>
             The Magenta color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Maroon">
            <summary>
             The Maroon color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.MediumAquamarine">
            <summary>
             The MediumAquamarine color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.MediumBlue">
            <summary>
             The MediumBlue color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.MediumOrchid">
            <summary>
             The MediumOrchid color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.MediumPurple">
            <summary>
             The MediumPurple color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.MediumSeaGreen">
            <summary>
             The MediumSeaGreen color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.MediumSlateBlue">
            <summary>
             The MediumSlateBlue color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.MediumSpringGreen">
            <summary>
             The MediumSpringGreen color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.MediumTurquoise">
            <summary>
             The MediumTurquoise color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.MediumVioletRed">
            <summary>
             The MediumVioletRed color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.MidnightBlue">
            <summary>
             The MidnightBlue color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.MintCream">
            <summary>
             The MintCream color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.MistyRose">
            <summary>
             The MistyRose color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Moccasin">
            <summary>
             The Moccasin color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.NavajoWhite">
            <summary>
             The NavajoWhite color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Navy">
            <summary>
             The Navy color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.OldLace">
            <summary>
             The OldLace color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Olive">
            <summary>
             The Olive color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.OliveDrab">
            <summary>
             The OliveDrab color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Orange">
            <summary>
             The Orange color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.OrangeRed">
            <summary>
             The OrangeRed color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Orchid">
            <summary>
             The Orchid color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.PaleGoldenrod">
            <summary>
             The PaleGoldenrod color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.PaleGreen">
            <summary>
             The PaleGreen color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.PaleTurquoise">
            <summary>
             The PaleTurquoise color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.PaleVioletRed">
            <summary>
             The PaleVioletRed color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.PapayaWhip">
            <summary>
             The PapayaWhip color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.PeachPuff">
            <summary>
             The PeachPuff color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Peru">
            <summary>
             The Peru color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Pink">
            <summary>
             The Pink color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Plum">
            <summary>
             The Plum color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.PowderBlue">
            <summary>
             The PowderBlue color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Purple">
            <summary>
             The Purple color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Red">
            <summary>
             The Red color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.RosyBrown">
            <summary>
             The RosyBrown color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.RoyalBlue">
            <summary>
             The RoyalBlue color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.SaddleBrown">
            <summary>
             The SaddleBrown color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Salmon">
            <summary>
             The Salmon color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.SandyBrown">
            <summary>
             The SandyBrown color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.SeaGreen">
            <summary>
             The SeaGreen color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.SeaShell">
            <summary>
             The SeaShell color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Sienna">
            <summary>
             The Sienna color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Silver">
            <summary>
             The Silver color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.SkyBlue">
            <summary>
             The SkyBlue color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.SlateBlue">
            <summary>
             The SlateBlue color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.SlateGray">
            <summary>
             The SlateGray color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Snow">
            <summary>
             The Snow color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.SpringGreen">
            <summary>
             The SpringGreen color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.SteelBlue">
            <summary>
             The SteelBlue color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Tan">
            <summary>
             The Tan color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Teal">
            <summary>
             The Teal color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Thistle">
            <summary>
             The Thistle color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Tomato">
            <summary>
             The Tomato color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Transparent">
            <summary>
             The Transparent color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Turquoise">
            <summary>
             The Turquoise color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Violet">
            <summary>
             The Violet color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Wheat">
            <summary>
             The Wheat color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.White">
            <summary>
             The White color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.WhiteSmoke">
            <summary>
             The WhiteSmoke color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.Yellow">
            <summary>
             The Yellow color preset.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownColors.YellowGreen">
            <summary>
             The YellowGreen color preset.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Diagrams.Core.ColorUtilities">
            <summary>
            Static helper class related to color.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.ColorUtilities.NamedColorsRgb">
            <summary>
            The ARGB values corresponding to the <see cref="F:Telerik.Windows.Diagrams.Core.ColorUtilities.NamedColors"/>.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.ColorUtilities.NamedColors">
            <summary>
            Know color names taken over from .Net.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Diagrams.Core.ColorUtilities.FromArgb(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Returns brush from ARGB values.
            </summary>
            <param name="alfa">The alfa.</param>
            <param name="red">The red.</param>
            <param name="green">The green.</param>
            <param name="blue">The blue.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Diagrams.Core.ColorUtilities.FromHsl(System.Double,System.Double,System.Double)">
            <summary>
            Returns a color based on its HSL value.
            </summary>
            <param name="hue">The hue.</param>
            <param name="saturation">The saturation.</param>
            <param name="luminance">The luminance.</param>
            <returns>The corresponding color.</returns>
        </member>
        <member name="M:Telerik.Windows.Diagrams.Core.ColorUtilities.RgbToHsl(System.Windows.Media.Color)">
            <summary>
            Given a Color (RGB Struct) in range of 0-255
            Return H,S,L in the range [0,1].
            </summary>
            <param name="colorRgb">The RGB.</param>
        </member>
        <member name="M:Telerik.Windows.Diagrams.Core.ColorUtilities.ByteArrayToHexString(System.Byte[])">
            <summary>
            Converts the given byte array to a color in the format #AARRGGBB.
            </summary>
            <param name="value">The bytes.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Diagrams.Core.ColorUtilities.HexStringToByteArray(System.String)">
            <summary>
            Converts the #AARRGGBB string color to a byte array.
            </summary>
            <param name="color">The hex string value of the color.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Diagrams.Core.ColorUtilities.HexStringFromSolidColor(System.Windows.Media.Color)">
            <summary>
            
            </summary>
            <param name="color">The color.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Diagrams.Core.ColorUtilities.ColorToString(System.Windows.Media.Color)">
            <summary>
            Converts the specified color to a format #AARRGGBB. Use the <see cref="M:Telerik.Windows.Diagrams.Core.ColorUtilities.ColorToString(System.Windows.Media.Color)"/> to convert a string back to a color.
            </summary>
            <param name="color">
            The value to convert.
            </param>
            <returns>
            A string representing the specified value.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Diagrams.Core.ColorUtilities.StringToColor(System.String)">
            <summary>
            Converts the specified string value to Color.
            </summary>
            <param name="value">
            The string value to convert from.
            </param>
            <returns>
            A Color value that is deserialized from the specified string.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Diagrams.Core.ColorUtilities.ParseToBrush(System.String)">
            <summary>
            Parses to brush.
            </summary>
            <param name="hexValue">The hex string.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Diagrams.Core.ColorUtilities.ColorFromString(System.String)">
            <summary>
            Colors from string.
            </summary>
            <param name="hexValue">The hex string.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Diagrams.Core.ColorUtilities.Sum(System.Windows.Media.Color,System.Windows.Media.Color)">
            <summary>
            Adds the two given colors.
            </summary>
            <param name="color1">The first color.</param>
            <param name="color2">The second color.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Diagrams.Core.ColorUtilities.ToValue(System.Windows.Media.Color)">
            <summary>
            Returns the unsigned integer value of the color.
            </summary>
            <param name="color">The color.</param>                
        </member>
        <member name="M:Telerik.Windows.Diagrams.Core.ColorUtilities.Parse(System.Int32)">
            <summary>
            Parses the specified value and converts it to a color.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>        
        </member>
        <member name="M:Telerik.Windows.Diagrams.Core.ColorUtilities.FromAngle(System.Double)">
            <summary>
            Creates a color from an angle.
            </summary>
            <param name="value">The angle in degrees.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Diagrams.Core.ColorUtilities.Multiply(System.Windows.Media.Color,System.Double)">
            <summary>
            Multiplies/scales the specified color.
            </summary>
            <param name="color">The color.</param>
            <param name="factor">The factor.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Diagrams.Core.ColorUtilities.Parse(System.String)">
            <summary>
            Parses the specified color string (e.g. '#FF4B4578').
            </summary>
            <param name="value">The string representation of the color.</param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Windows.Diagrams.Core.ColorUtilities.RandomBlues">
            <summary>
            Gets a random shade of blue.
            </summary>
            <value>The random blue color.</value>
        </member>
        <member name="P:Telerik.Windows.Diagrams.Core.ColorUtilities.RandomBrush">
            <summary>
            Gets the random brush where the color is picked from the known colors.
            </summary>
            <value>The random brush.</value>
        </member>
        <member name="T:Telerik.Windows.Diagrams.Core.ColorVector">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Diagrams.Core.ColorVector.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Diagrams.Core.ColorVector"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Diagrams.Core.ColorVector.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Diagrams.Core.ColorVector"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Diagrams.Core.ColorVector.A">
            <summary>
            Gets or sets the A.
            </summary>
            <value>
            The A.
            </value>
        </member>
        <member name="P:Telerik.Windows.Diagrams.Core.ColorVector.R">
            <summary>
            Gets or sets the R.
            </summary>
            <value>
            The R.
            </value>
        </member>
        <member name="P:Telerik.Windows.Diagrams.Core.ColorVector.G">
            <summary>
            Gets or sets the G.
            </summary>
            <value>
            The G.
            </value>
        </member>
        <member name="P:Telerik.Windows.Diagrams.Core.ColorVector.B">
            <summary>
            Gets or sets the B.
            </summary>
            <value>
            The B.
            </value>
        </member>
        <member name="T:Telerik.Windows.Diagrams.Core.KnownBrushes">
            <summary>
            KnownBrushes contains predefined Brush objects. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownBrushes.Black">
            <summary>
            A solid black brush.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownBrushes.Transparent">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownBrushes.Gray">
            <summary>
            A solid gray brush.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownBrushes.White">
            <summary>
            A solid white brush.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownBrushes.Red">
            <summary>
            A solid red brush.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownBrushes.Green">
            <summary>
            A solid green brush.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownBrushes.Cyan">
            <summary>
            A solid cyan brush.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownBrushes.Yellow">
            <summary>
            A solid yellow brush.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownBrushes.Blue">
            <summary>
            A solid blue brush.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownBrushes.LightYellow">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownBrushes.LightGoldenrodYellow">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownBrushes.SteelBlue">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownBrushes.Silver">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownBrushes.DimGray">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownBrushes.LightGray">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownBrushes.LightLightGray">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownBrushes.SeaGreen">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Diagrams.Core.KnownBrushes.BlueWhiteGradient">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Windows.Diagrams.Core.Pen">
            <summary>
            The pen implementation for Silverlight.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Diagrams.Core.Pen.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Diagrams.Core.Pen"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Diagrams.Core.Pen.#ctor(System.Windows.Media.Brush)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Diagrams.Core.Pen"/> class.
            </summary>
            <param name="brush">The brush.</param>
        </member>
        <member name="M:Telerik.Windows.Diagrams.Core.Pen.#ctor(System.Windows.Media.Brush,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Diagrams.Core.Pen"/> class.
            </summary>
            <param name="brush">The brush.</param>
            <param name="thickness">The thickness.</param>
        </member>
        <member name="M:Telerik.Windows.Diagrams.Core.Pen.#ctor(System.Windows.Media.Brush,System.Double,Telerik.Windows.Diagrams.Core.DashStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Diagrams.Core.Pen"/> class.
            </summary>
            <param name="brush">The brush of the pen.</param>
            <param name="thickness">The thickness of the pen.</param>
            <param name="dashStyle">The dash style of the pen.</param>
        </member>
        <member name="M:Telerik.Windows.Diagrams.Core.Pen.Clone">
            <summary>
            Creates an exact copy of this pen.
            </summary>
            <returns>An instance of the Pen class.</returns>
        </member>
        <member name="M:Telerik.Windows.Diagrams.Core.Pen.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Diagrams.Core.Pen.Brush">
            <summary>
            Gets or sets the Brush object that defines the appearance of this pen.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Diagrams.Core.Pen.Thickness">
            <summary>
            Gets or sets the width of the pen.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Diagrams.Core.Pen.DashStyle">
            <summary>
            Gets or sets the style used for dashed pens.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.ArrowShapeExtension">
            <summary>
            Represents a custom markup extension for creating arrow shape geometries.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.ArrowShapeExtension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.ArrowShapeExtension"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.ArrowShapeExtension.ProvideValue(System.IServiceProvider)">
            <summary>
            When implemented in a derived class, returns an object that is set as the value of the target property for this markup extension.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            The object value to set on the property where the extension is applied.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.ArrowShapeExtension.ShapeType">
            <summary>
            The type of the Arrow.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.ArrowShapeType">
            <summary>
            The type of shape.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.ArrowShapeType.Arrow1">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.ArrowShapeType.Arrow2">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.ArrowShapeType.Arrow3">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.ArrowShapeType.Arrow4">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.ArrowShapeType.Arrow5">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.ArrowShapeType.Arrow6">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.ArrowShapeType.Arrow7">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.ArrowShapeType.Arrow8">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.ArrowShapeType.DoubleArrow1">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.ArrowShapeType.DoubleArrow2">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.ArrowShapeType.DoubleArrow3">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.ArrowShapeType.DoubleArrow4">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.ArrowShapeType.DoubleArrow5">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.DiagramCommands">
            <summary>
            This static class lists all Diagram public Commands.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DiagramCommands.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Telerik.Windows.Controls.Diagrams.DiagramCommands"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.Align">
            <summary>
            Gets the Align command.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.SwitchGridVisibility">
            <summary>
            Gets the SwitchGridVisibility command.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.Snap">
            <summary>
            Gets the Snap command.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.AutoFit">
            <summary>
            Gets the Auto fit command.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.Copy">
            <summary>
            Gets the Copy command.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.Layout">
            <summary>
            Gets the Layout command.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.Paste">
            <summary>
            Gets the Paste command.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.Delete">
            <summary>
            Gets the Delete command.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.Cut">
            <summary>
            Gets the Cut command.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.Undo">
            <summary>
            Gets the Undo command.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.Redo">
            <summary>
            Gets the Redo command.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.BringToFront">
            <summary>
            Gets the BringToFront command.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.BringForward">
            <summary>
            Gets the BringForward command.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.SendToBack">
            <summary>
            Gets the SendToBack command.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.SendBackward">
            <summary>
            Gets the SendBackward command.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.Save">
            <summary>
            Gets the Save command.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.Clear">
            <summary>
            Gets the Clear command.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.Open">
            <summary>
            Gets the Open command.
            </summary>
            <value>The open.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.BeginEdit">
            <summary>
            Gets the BeginEdit command.
            </summary>
            <value>The open.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.CommitEdit">
            <summary>
            Gets the CommitEdit command.
            </summary>
            <value>The open.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.CancelEdit">
            <summary>
            Gets the CancelEdit command.
            </summary>
            <value>The open.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.SelectAll">
            <summary>
            Gets the SelectAll command.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.Group">
            <summary>
            Gets the Group command.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.Ungroup">
            <summary>
            Gets the Ungroup command.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.Nudge">
            <summary>
            Gets the Nudge command.
            </summary>
            <seealso cref="M:Telerik.Windows.Diagrams.Core.GraphController.Nudge(System.Windows.Point)"/>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.Duplicate">
            <summary>
            Gets the Duplicate command.
            </summary>
            <seealso cref="M:Telerik.Windows.Controls.RadDiagram.Duplicate"/>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.Load">
            <summary>
            Gets the Load command.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.Print">
            <summary>
            Gets the Print command.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramCommands.Export">
            <summary>
            Gets the Export command.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.CommonShapeExtension">
            <summary>
            Represents a custom markup extension for creating common shape geometries.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.CommonShapeExtension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.CommonShapeExtension"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.CommonShapeExtension.ProvideValue(System.IServiceProvider)">
            <summary>
            When implemented in a derived class, returns an object that is set as the value of the target property for this markup extension.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            The object value to set on the property where the extension is applied.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.CommonShapeExtension.ShapeType">
            <summary>
            The type of the shape.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.CommonShapeType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.CommonShapeType.EllipseShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.CommonShapeType.RoundedRectangleShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.CommonShapeType.CloudShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.CommonShapeType.RightTriangleShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.CommonShapeType.RectangleShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.CommonShapeType.TriangleShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.CommonShapeType.PentagonShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.CommonShapeType.HeptagonShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.CommonShapeType.HexagonShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.CommonShapeType.OctagonShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.CommonShapeType.CrossShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.CommonShapeType.Cross2Shape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.CommonShapeType.Star5Shape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.CommonShapeType.Star6Shape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.CommonShapeType.Star7Shape">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.DiagramLayoutRoutedEventArgs">
            <summary>
            The event argument supplied when the diagram layout event is raised. 
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DiagramLayoutRoutedEventArgs.#ctor(Telerik.Windows.Diagrams.Core.DiagramLayoutEventArgs)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.DiagramLayoutRoutedEventArgs"/> class.
            </summary>
            <param name="args">The <see cref="T:Telerik.Windows.Diagrams.Core.DiagramLayoutEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramLayoutRoutedEventArgs.LayoutType">
            <summary>
            Gets the type of the layout algorithm that has been applied.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramLayoutRoutedEventArgs.LayoutSettings">
            <summary>
            Gets the layout settings specific to the applied layout type.
            </summary>
            <seealso cref="T:Telerik.Windows.Diagrams.Core.TreeLayoutSettings"/>
            <seealso cref="T:Telerik.Windows.Diagrams.Core.SugiyamaSettings"/>
            <seealso cref="T:Telerik.Windows.Diagrams.Core.TreeLayoutType"/>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramLayoutRoutedEventArgs.OldState">
            <summary>
            Gets state and the positions of shapes before the layout was applied.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramLayoutRoutedEventArgs.NewState">
            <summary>
             Gets state and the positions of shapes after the layout was applied.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.ManipulationRoutedEventArgs">
            <summary>
            Represents manipulation routed event args.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.ManipulationRoutedEventArgs.#ctor(System.Windows.RoutedEvent,Telerik.Windows.Diagrams.Core.IConnectionEditPoint,Telerik.Windows.Diagrams.Core.IConnector,System.Windows.Point,Telerik.Windows.Diagrams.Core.ManipulationStatus)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.ManipulationRoutedEventArgs"/> class.
            </summary>
            <param name="routedEvent">The routed event.</param>
            <param name="manipulationPoint">The manipulation point.</param>
            <param name="connector">The connector.</param>
            <param name="currentPosition">The current position.</param>
            <param name="status">The status.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.ManipulationRoutedEventArgs.Connection">
            <summary>
            Gets the connection.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.ManipulationRoutedEventArgs.ManipulationPoint">
            <summary>
            Gets the manipulation point.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.ManipulationRoutedEventArgs.Shape">
            <summary>
            Gets the shape.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.ManipulationRoutedEventArgs.CurrentPosition">
            <summary>
            Gets the current position.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.ManipulationRoutedEventArgs.ManipulationStatus">
            <summary>
            Gets the manipulation status.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.ManipulationRoutedEventArgs.Connector">
            <summary>
            Gets the connector.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.DiagramTransformationType.Pan">
            <summary>
            Represents panning transformation.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.DiagramTransformationType.Zoom">
            <summary>
            Represents zooming transformation.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.DiagramZoomEventArgs">
            <summary>
            Encapsulates data related to diagram zoom events.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramZoomEventArgs.TargetZoom">
            <summary>
            Gets or sets the result zoom. By default this property contains the coerced new zoom.
            If custom value is set it will be coerced before being set as a value to the zoom.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramZoomEventArgs.Zoom">
            <summary>
            Gets the old zoom value.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramZoomEventArgs.ZoomPoint">
            <summary>
            Gets the zoom point.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramZoomEventArgs.IsAnimationRunning">
            <summary>
            Gets whether a zoom animation is currently running.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.ZoomType">
            <summary>
            Defines possible types of zoom operation.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.ZoomType.Incremental">
            <summary>
            The zoom operation will be applied over the previous zoom state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.ZoomType.Absolute">
            <summary>
            The zoom operation will be applied over the initial zoom state.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.Primitives.ConnectorsControl">
            <summary>
            Represents a manipulation point for connections.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ConnectorsControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.Primitives.ConnectorsControl"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ConnectorsControl.ResetTheme">
            <summary>
            Resets the theme.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ConnectorsControl.OnInitialized(System.EventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ConnectorsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Prepares the specified element to display the specified item.
            </summary>
            <param name="element">Element used to display the specified item.</param>
            <param name="item">Specified item.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ConnectorsControl.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            When overridden in a derived class, undoes the effects of the <see cref="M:System.Windows.Controls.ItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
            method.
            </summary>
            <param name="element">The container element.</param>
            <param name="item">The item.</param>
        </member>
        <member name="E:Telerik.Windows.Controls.Diagrams.Primitives.ConnectorsControl.MeasureRequest">
            <summary>
            Occurs on [measure request].
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.Primitives.ContainerLayout">
            <summary>
            The adaptation types of the <see cref="T:Telerik.Windows.Controls.RadDiagramContainerShape"/>.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.ContainerLayout.Fixed">
            <summary>
            The container has its own size and position.
            </summary>
            <remarks>Use this type to preserve the size of the container when saving the diagram.</remarks>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.ContainerLayout.Auto">
            <summary>
            The container size and position is determined by its children.
            </summary>
            <remarks>It is applied only initially, when the container is loaded.</remarks>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.Primitives.DrawingAdorner">
            <summary>
            Represents a drawing adorner.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.Primitives.DiagramAdornerBase">
            <summary>
            Represents a base class for diagram adorners.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.DiagramAdornerBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.Primitives.DiagramAdornerBase"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.DiagramAdornerBase.ResetTheme">
            <summary>
            Resets the theme.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.DiagramAdornerBase.OnInitialized(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.FrameworkElement.Initialized"/> event. This method is invoked whenever <see cref="P:System.Windows.FrameworkElement.IsInitialized"/> is set to true internally.
            </summary>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.DiagramAdornerBase.Diagram">
            <summary>
            Gets or sets the hosting diagram.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.DiagramAdornerBase.Position">
            <summary>
            Gets or sets the position of the control.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.DiagramAdornerBase.Rotation">
            <summary>
            Gets the rotation.
            </summary>
            <value>The rotation.</value>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.DrawingAdorner.IsShapeFilledProperty">
            <summary>
            Registers the IsShapeFilled attached property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.DrawingAdorner.IsShapeClosedProperty">
            <summary>
            Registers the IsShapeClosed attached property. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.DrawingAdorner.FillRuleProperty">
            <summary>
            Registers the FillRule attached property. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.DrawingAdorner.FillProperty">
            <summary>
            Registers the Fill attached property. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.DrawingAdorner.StrokeProperty">
            <summary>
            Registers the Stroke attached property. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.DrawingAdorner.StrokeThicknessProperty">
            <summary>
            Registers the StrokeThickness attached property. 
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.DrawingAdorner.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.Primitives.DrawingAdorner"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.DrawingAdorner.GetFill(System.Windows.DependencyObject)">
            <summary>
            Gets the fill.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.DrawingAdorner.SetFill(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            Sets the fill.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.DrawingAdorner.GetStrokeThickness(System.Windows.DependencyObject)">
            <summary>
            Gets the stroke thickness.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.DrawingAdorner.SetStrokeThickness(System.Windows.DependencyObject,System.Double)">
            <summary>
            Sets the stroke thickness.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.DrawingAdorner.GetStroke(System.Windows.DependencyObject)">
            <summary>
            Gets the stroke.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.DrawingAdorner.SetStroke(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            Sets the stroke.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.DrawingAdorner.GetFillRule(System.Windows.DependencyObject)">
            <summary>
            Gets the fill rule.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.DrawingAdorner.SetFillRule(System.Windows.DependencyObject,System.Windows.Media.FillRule)">
            <summary>
            Sets the fill rule.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.DrawingAdorner.GetIsShapeClosed(System.Windows.DependencyObject)">
            <summary>
            Gets the IsShapeClosed.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.DrawingAdorner.SetIsShapeClosed(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the IsShapeClosed.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.DrawingAdorner.GetIsShapeFilled(System.Windows.DependencyObject)">
            <summary>
            Gets the IsShapeFilled.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.DrawingAdorner.SetIsShapeFilled(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the IsShapeFilled.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.DrawingAdorner.OnApplyTemplate">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.DrawingAdorner.Diagram">
            <summary>
            Gets or sets the hosting diagram.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.DrawingAdorner.DrawingService">
            <summary>
            Gets or sets the drawing service.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.Primitives.ToggleButtonExtensions">
            <summary>
            Extension properties for the RadToggleButton class.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.ToggleButtonExtensions.CheckedContentProperty">
            <summary>
            The CheckedContentProperty dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.ToggleButtonExtensions.UncheckedContentProperty">
            <summary>
            The UncheckedContentProperty dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ToggleButtonExtensions.GetCheckedContent(System.Windows.DependencyObject)">
            <summary>
            Gets the content for the checked state of the Toggle button.
            </summary>
            <param name="obj">The object.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ToggleButtonExtensions.SetCheckedContent(System.Windows.DependencyObject,System.Object)">
            <summary>
            Sets the content for the checked state of the Toggle button.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ToggleButtonExtensions.GetUncheckedContent(System.Windows.DependencyObject)">
            <summary>
            Gets the content for the unchecked state of the Toggle button.
            </summary>
            <param name="obj">The object.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ToggleButtonExtensions.SetUncheckedContent(System.Windows.DependencyObject,System.Object)">
            <summary>
            Sets the content for the unchecked state of the Toggle button.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.Primitives.ToolsProperties">
            <summary>
            Represents a static class that holds tools' attached properties.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.ToolsProperties.TextShapeStyleProperty">
            <summary>
            Identifies the TextShapeStyle attached property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ToolsProperties.GetTextShapeStyle(System.Windows.DependencyObject)">
            <summary>
            Gets the textShape style.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ToolsProperties.SetTextShapeStyle(System.Windows.DependencyObject,System.Windows.Style)">
            <summary>
            Sets the textShape style.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.RadDiagramPrintService">
            <summary>
            Helper class used to print <see cref="T:Telerik.Windows.Controls.RadDiagram"/> instance.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramPrintService.#ctor(Telerik.Windows.Controls.RadDiagram)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.RadDiagramPrintService"/> class.
            </summary>
            <param name="diagram">The diagram to print.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramPrintService.Print(Telerik.Windows.Controls.Diagrams.RadDiagramPrintSettings)">
            <summary>
            Print the associated diagram.
            </summary>
            <param name="printSettings">The print settings.</param>
            <returns>True when the printing is successful, False otherwise.</returns>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramPrintService.Diagram">
            <summary>
            The associated diagram.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.RadDiagramPrintSettings">
            <summary>
            Encapsulates the diagram printing info.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramPrintSettings.Default">
            <summary>
            The default diagram print settings.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramPrintSettings.#ctor(System.String,System.Windows.Thickness,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.RadDiagramPrintSettings"/> class.
            </summary>
            <param name="title">The title of the printed document.</param>
            <param name="pageMargin">The margin between page content and page edges.</param>
            <param name="dpi">The resolution used during printing.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramPrintSettings.Title">
            <summary>
            Gets the title of the printed document.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramPrintSettings.PageMargin">
            <summary>
            Gets the margin between page content and page edges.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramPrintSettings.Dpi">
            <summary>
            Gets the resolution used during printing.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.RadDiagramPrintUtils">
            <summary>
            Contains <see cref="T:Telerik.Windows.Controls.RadDiagram"/> printing related extensions and utilities.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramPrintUtils.CalculatePages(Telerik.Windows.Controls.RadDiagram,System.Windows.Size,System.Windows.Thickness)">
            <summary>
            Slices the diagram into collection of pages.
            </summary>
            <param name="diagram">The diagram.</param>
            <param name="pageSize">Size of the page.</param>
            <param name="pageMargin">Margin used to calculate actual content size.</param>
            <returns>Print preview information.</returns>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.Properties.ExceptionResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Properties.ExceptionResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Properties.ExceptionResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Properties.ExceptionResources.AddConnectionPointNotForAllConnectionTypes">
            <summary>
              Looks up a localized string similar to This method can only be used when the connection is a Bezier line or a polyline..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Properties.ExceptionResources.CannotRemoveDefaultConnector">
            <summary>
              Looks up a localized string similar to The default connectors cannot be removed because connections are attached to it..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Properties.ExceptionResources.CannotRemoveGlidingConnector">
            <summary>
              Looks up a localized string similar to The gliding connector cannot be removed because connections are attached to it..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Properties.ExceptionResources.ConnectorDoesntExist">
            <summary>
              Looks up a localized string similar to Connector &apos;{0}&apos; does not exist..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Properties.ExceptionResources.DefaultConnectorNotDefined">
            <summary>
              Looks up a localized string similar to The default connectors need to be enabled, please set the UseIntermediateConnector to true on the shape or remove first the connections on the gliding connector..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Properties.ExceptionResources.GlidingAdditionOnlyRadDiagramShapeBase">
            <summary>
              Looks up a localized string similar to This method is not supported for shapes not inheriting from RadDiagramShapeBase..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Properties.ExceptionResources.GlidingConnectorNotDefined">
            <summary>
              Looks up a localized string similar to The gliding connector needs to be enabled, please set the UseGlidingConnector to true on the shape or remove first the connections on the default connectors..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Properties.ExceptionResources.ItemCountTooLow">
            <summary>
              Looks up a localized string similar to There are insufficient items in the collection..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Properties.ExceptionResources.NegativeBezierTension">
            <summary>
              Looks up a localized string similar to The Bezier tension cannot be a negative value..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Properties.ExceptionResources.NegativeCornerRadius">
            <summary>
              Looks up a localized string similar to The corner radius of the connection cannot be nagative, please change the value of DiagramConstants.ConnectionCornerRadius..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Properties.ExceptionResources.ShapeAcceptsOnlyGlidingConnections">
            <summary>
              Looks up a localized string similar to The shape accepts only gliding connections..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Properties.ExceptionResources.ShapeAcceptsOnlyNonGlidingConnections">
            <summary>
              Looks up a localized string similar to The shape accepts only non-gliding connections..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Properties.ExceptionResources.ShapeHasNoConnectors">
            <summary>
              Looks up a localized string similar to The shape has no connectors defined..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Properties.ExceptionResources.SwitchToGlidingButAlreadyHasConnections">
            <summary>
              Looks up a localized string similar to The default connectors of the {0} shape have already some connections attached. Using gliding connections is mutually exclusive with the default connectors, please remove the existing connections first..
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Properties.ExceptionResources.WorkInProgress">
            <summary>
              Looks up a localized string similar to Work in progress..
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.DiagramDropInfo">
            <summary>
            Represents drop information.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DiagramDropInfo.#ctor(System.Windows.Size,Telerik.Windows.Diagrams.Core.SerializationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.DiagramDropInfo"/> struct.
            </summary>
            <param name="dropSize">Size of the drop.</param>
            <param name="info">The info.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramDropInfo.DropSize">
            <summary>
            Gets or sets the size of the drop.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramDropInfo.Info">
            <summary>
            Gets or sets the info.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.RadDiagramPagesInfo">
            <summary>
            Encapsulates data regarding print preview.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramPagesInfo.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.Imaging.WriteableBitmap},System.Int32,System.Windows.Size,System.Windows.Thickness)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.RadDiagramPagesInfo"/> class. This constructor will be obsolete.
            </summary>
            <param name="pages">Collection with print pages.</param>
            <param name="numberOfColumns">Number of columns in the pages collection.</param>
            <param name="pageSize">Size of the page.</param>
            <param name="pageMargin">Margin around the page content.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramPagesInfo.GetPage(System.Int32)">
            <summary>
            Returns the page at given index.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramPagesInfo.GetPageCount">
            <summary>
            Returns the number of pages.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramPagesInfo.Pages">
            <summary>
            Gets the collection with images of all print pages. This property will be obsolete.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramPagesInfo.NumberOfColumns">
            <summary>
            Gets the number of columns in which pages are arranged.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramPagesInfo.PageSize">
            <summary>
            Gets the size of each page.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramPagesInfo.PageMargin">
            <summary>
            Gets the margin on each page.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramPagesInfo.Background">
            <summary>
            Gets or sets the background for each page.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramPagesInfo.Dpi">
            <summary>
            Gets or sets the resolution to use during printing.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.PositionChangedRoutedEventArgs">
            <summary>
            Encapsulates information about position changed event.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.PositionChangedRoutedEventArgs.#ctor(System.Windows.RoutedEvent)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.PositionChangedRoutedEventArgs"/> class.
            </summary>
            <param name="routedEvent">The routed event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.PositionChangedRoutedEventArgs.#ctor(System.Windows.RoutedEvent,System.Windows.Point,System.Windows.Point)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.PositionChangedRoutedEventArgs"/> class.
            </summary>
            <param name="routedEvent">The routed event.</param>
            <param name="oldPosition">The old zoom.</param>
            <param name="newPosition">The new zoom.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.PositionChangedRoutedEventArgs.OldPosition">
            <summary>
            Gets the old position.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.PositionChangedRoutedEventArgs.NewPosition">
            <summary>
            Gets the new position.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.RadRoutedEditEventArgs">
            <summary>
            Contains state information and event data associated with a routed event.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadRoutedEditEventArgs.#ctor(System.Windows.RoutedEvent,System.Object,System.Object,System.Boolean)">
            <summary>
            Initializes a new instance of the RadRoutedEditEventArgs class, using 
            the supplied routed event identifier, and providing the opportunity 
            to declare a different source for the event. 
            </summary>
            <param name="routedEvent">
            The routed event identifier for this instance of the RoutedEventArgs class.
            </param>
            <param name="source">
            An alternate source that will be reported when the event is handled. 
            This pre-populates the Source property.
            </param>
            <param name="editedContent">
            The result of the edit operation. 
            </param>
            <param name="commitChanges">
            Determines whether the changes will be committed.
            </param>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadRoutedEditEventArgs.EditedContent">
            <summary>
            Gets the result of the edit operation. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadRoutedEditEventArgs.CommitChanges">
            <summary>
            Gets or sets whether the changes should be committed. 
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.CommonExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.CommonExtensions.SetLocation(System.Windows.UIElement,System.Double,System.Double)">
            <summary>
            Sets the location in the element in Canvas.
            </summary>
            <param name="element">The element.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.CommonExtensions.SetLayout(System.Windows.FrameworkElement,System.Windows.Rect)">
            <summary>
            Sets the location in the element in Canvas.
            </summary>
            <param name="element">The element.</param>
            <param name="rect">The rectangle.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.CommonExtensions.SetLocation(System.Windows.UIElement,System.Windows.Point)">
            <summary>
            Sets the location in the element in Canvas.
            </summary>
            <param name="element">The element.</param>
            <param name="point">The point.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.CommonExtensions.ClearIfNoBindingAndSet(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
            <summary>
            Clears if set.
            </summary>
            <param name="dependencyObject">The dependency object.</param>
            <param name="dependencyProperty">The dependency property.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.CommonExtensions.GetSupremumContainer(Telerik.Windows.Diagrams.Core.IShape,Telerik.Windows.Diagrams.Core.IShape)">
            <summary>
            Gets the first (lowest in the hierarchy) group which groups both given shapes.
            </summary>
            <param name="item1">A diagram item.</param>
            <param name="item2">Another diagram item.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.CommonExtensions.Contains(Telerik.Windows.Diagrams.Core.IContainerShape,Telerik.Windows.Diagrams.Core.IDiagramItem)">
            <summary>
            Returns whether the container contains in its hierarchy the given item. 
            </summary>
            <param name="container">The container.</param>
            <param name="item">The item to test for.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.CommonExtensions.GetItemsRecursively(Telerik.Windows.Diagrams.Core.IContainerShape)">
            <summary>
            Returns the full hierarchy of items contained in the container.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.CommonExtensions.HasSelectedChild(Telerik.Windows.Diagrams.Core.IContainerShape)">
            <summary>
            Determines whether a container has a selected child.
            </summary>
            <param name="container">The container.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.DiagramAnimations">
            <summary>
            Contains diagram animations attached properties.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.DiagramAnimations.AnimationDurationProperty">
            <summary>
            Identifies the AnimationDuration attached dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.DiagramAnimations.IsZoomAnimationEnabledProperty">
            <summary>
            Identifies the IsZoomAnimationEnabled attached dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.DiagramAnimations.IsPanAnimationEnabledProperty">
            <summary>
            Identifies the IsPanAnimationEnabled attached dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DiagramAnimations.GetAnimationDuration(System.Windows.DependencyObject)">
            <summary>
            Gets animation duration in seconds.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DiagramAnimations.SetAnimationDuration(System.Windows.DependencyObject,System.Double)">
            <summary>
            Sets animation duration in seconds.
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DiagramAnimations.GetIsZoomAnimationEnabled(System.Windows.DependencyObject)">
            <summary>
            Gets whether zoom animations are enabled or not.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DiagramAnimations.SetIsZoomAnimationEnabled(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets whether zoom animations are enabled or not.
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DiagramAnimations.GetIsPanAnimationEnabled(System.Windows.DependencyObject)">
            <summary>
            Gets whether pan animations are enabled or not.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DiagramAnimations.SetIsPanAnimationEnabled(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets whether pan animations are enabled or not.
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.DiagramBehaviors">
            <summary>
            Represents a class containing diagram behaviors exposed via attached properties.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.DiagramBehaviors.TextWrappingProperty">
            <summary>
            Registers the TextWrapping dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.DiagramBehaviors.TextElementForegroundProperty">
            <summary>
            Registers the TextElementForeground dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.DiagramBehaviors.NameScopeProviderProperty">
            <summary>
            Registers the NameScopeProvider attached dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DiagramBehaviors.GetNameScopeProvider(System.Windows.DependencyObject)">
            <summary>
            Gets the NameScope provider for the diagram items.
            </summary>
            <param name="obj">The RadDiagram.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DiagramBehaviors.SetNameScopeProvider(System.Windows.DependencyObject,System.Windows.DependencyObject)">
            <summary>
            Sets the NameScope provider for the diagram items.
            </summary>
            <param name="obj">The RadDiagram.</param>
            <param name="value">The name scope provider.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DiagramBehaviors.GetTextWrapping(System.Windows.DependencyObject)">
            <summary>
            Gets the value of TextWrappingProperty property.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DiagramBehaviors.SetTextWrapping(System.Windows.DependencyObject,System.Windows.TextWrapping)">
            <summary>
            Sets the TextWrappingProperty property.
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DiagramBehaviors.GetTextElementForeground(System.Windows.DependencyObject)">
            <summary>
            Gets the text element foreground.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DiagramBehaviors.SetTextElementForeground(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            Sets the text element foreground.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DiagramBehaviors.OnTextElementForegroundPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [text element foreground property changed].
            </summary>
            <param name="d">The d.</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DiagramBehaviors.OnTextWrappingPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [wrap text property changed].
            </summary>
            <param name="d">The d.</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DiagramBehaviors.OnNameScopeProviderChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when [name scope provider changed].
            </summary>
            <param name="d">The d.</param>
            <param name="args">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DiagramBehaviors.OnSizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Called when [size changed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.SizeChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.DiagramExtensions">
            <summary>
            Some <see cref="T:Telerik.Windows.Controls.RadDiagram"/> related extensions and utilities.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DiagramExtensions.GetTransformedPoint(Telerik.Windows.Controls.RadDiagram,System.Windows.Point)">
            <summary>
            Applies the panning and zooming for the point and returns the transformed point.
            </summary>
            <param name="diagram">The diagram.</param>
            <param name="point">The point.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DiagramExtensions.CalculatePages(Telerik.Windows.Controls.RadDiagram,System.Windows.Size,System.Windows.Thickness)">
            <summary>
            Slices the diagram into collection of pages.
            </summary>
            <param name="diagram">The diagram.</param>
            <param name="pageSize">Size of the page.</param>
            <param name="pageMargin">Margin used to calculate actual content size.</param>
            <returns>Print preview information.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DiagramExtensions.CreateDiagramImage(Telerik.Windows.Controls.RadDiagram,System.Windows.Rect,System.Windows.Size,System.Windows.Media.Brush,System.Windows.Thickness,System.Double)">
            <summary>
            Creates the diagram image.
            </summary>
            <param name="diagram">The diagram.</param>
            <param name="enclosingBounds">The enclosing bounds.</param>
            <param name="returnImageSize">The return image size.</param>
            <param name="backgroundBrush">The background brush.</param>
            <param name="dpi">The quality of the image.</param>
            <param name="margin">The margin.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.FlowChartShapeExtension">
            <summary>
            Represents a custom markup extension for creating flow chart shape geometries.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.FlowChartShapeExtension.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.FlowChartShapeExtension"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.FlowChartShapeExtension.ProvideValue(System.IServiceProvider)">
            <summary>
            When implemented in a derived class, returns an object that is set as the value of the target property for this markup extension.
            </summary>
            <param name="serviceProvider">Object that can provide services for the markup extension.</param>
            <returns>
            The object value to set on the property where the extension is applied.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.FlowChartShapeExtension.ShapeType">
            <summary>
            The type of the shape.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.FlowChartShapeType">
            <summary>
            List of flow chart - like shape types.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.BeginLoopShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.CardShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.CollateShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.CreateRequestShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.Database1Shape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.Database2Shape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.Database3Shape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.DataShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.DataStoreShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.DecisionShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.DelayShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.DevidedProcessShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.DirectDataShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.DisplayShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.DocumentShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.DuplicatingShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.ExternalDataShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.FeedbackShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.FramedRectangleShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.InternalStorageShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.LinedDocumentShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.LoopLimitShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.ManualInputShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.ManualOperationShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.MessageFromUserShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.MessageToUserShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.MicroformProcessingShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.MicroformRecordingShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.MultipleDocumentShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.OffPageConnectionShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.OffPageLinkShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.OffPageReflectionShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.OrShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.PaperTapeShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.PredefinedShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.PreparationShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.PrimitiveFromCallShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.PrimitiveToCallShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.SequentialDataShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.SortShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.StartShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.StoredDataShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.SummingJunctionShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.TerminatorShape">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.FlowChartShapeType.TransmittalTapeShape">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.Primitives.AdornerSurface">
            <summary>
            Represents the adorner surface.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.Primitives.AlignmentAdorner">
            <summary>
            Represents AligningAdorner.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.AlignmentAdorner.HorizontalLineStrokeProperty">
            <summary> 
            Identifies the HorizontalLineStroke attached property.
            </summary> 
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.AlignmentAdorner.VerticalLineStrokeProperty">
            <summary> 
            Identifies the VerticalLineStroke attached property.
            </summary> 
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.AlignmentAdorner.HorizontalLineStrokeThicknessProperty">
            <summary> 
            Identifies the HorizontalLineStrokeThickness attached property.
            </summary> 
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.AlignmentAdorner.VerticalLineStrokeThicknessProperty">
            <summary> 
            Identifies the VerticalLineStrokeThickness attached property.
            </summary> 
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.AlignmentAdorner.HorizontalLineStrokeDashArrayProperty">
            <summary> 
            Identifies the HorizontalLineStrokeDashArray attached property.
            </summary> 
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.AlignmentAdorner.VerticalLineStrokeDashArrayProperty">
            <summary> 
            Identifies the VerticalLineStrokeDashArray attached property.
            </summary> 
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.AlignmentAdorner.GetHorizontalLineStroke(System.Windows.DependencyObject)">
            <summary>
            Gets the alignment adorner HorizontalLineStroke property.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.AlignmentAdorner.SetHorizontalLineStroke(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            Sets the alignment adorner HorizontalLineStroke property.
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.AlignmentAdorner.GetVerticalLineStroke(System.Windows.DependencyObject)">
            <summary>
            Gets the alignment adorner VerticalLineStroke property.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.AlignmentAdorner.SetVerticalLineStroke(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            Sets the alignment adorner VerticalLineStroke property.
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.AlignmentAdorner.GetHorizontalLineStrokeThickness(System.Windows.DependencyObject)">
            <summary>
            Gets the alignment adorner HorizontalLineStrokeThickness property.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.AlignmentAdorner.SetHorizontalLineStrokeThickness(System.Windows.DependencyObject,System.Double)">
            <summary>
            Sets the alignment adorner HorizontalLineStrokeThickness property.
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.AlignmentAdorner.GetVerticalLineStrokeThickness(System.Windows.DependencyObject)">
            <summary>
            Gets the alignment adorner VerticalLineStrokeThickness property.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.AlignmentAdorner.SetVerticalLineStrokeThickness(System.Windows.DependencyObject,System.Double)">
            <summary>
            Sets the alignment adorner VerticalLineStrokeThickness property.
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.AlignmentAdorner.GetHorizontalLineStrokeDashArray(System.Windows.DependencyObject)">
            <summary>
            Gets the alignment adorner HorizontalLineStrokeDashArray property.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.AlignmentAdorner.SetHorizontalLineStrokeDashArray(System.Windows.DependencyObject,System.Windows.Media.DoubleCollection)">
            <summary>
            Sets the alignment adorner HorizontalLineStrokeDashArray property.
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.AlignmentAdorner.GetVerticalLineStrokeDashArray(System.Windows.DependencyObject)">
            <summary>
            Gets the alignment adorner VerticalLineStrokeDashArray property.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.AlignmentAdorner.SetVerticalLineStrokeDashArray(System.Windows.DependencyObject,System.Windows.Media.DoubleCollection)">
            <summary>
            Sets the alignment adorner VerticalLineStrokeDashArray property.
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.AlignmentAdorner.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application
            code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.AlignmentAdorner.DrawAligningLines(System.Collections.Generic.IEnumerable{System.Windows.Rect})">
            <summary>
            Draw snapping lines.
            </summary>
            <param name="logicalLines"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.AlignmentAdorner.OnInitialized(System.EventArgs)">
            <inheritdoc />
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionEditPointControl">
            <summary>
            Represents a manipulation point of a connection.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionEditPointControl.TypeProperty">
            <summary>
            The <see cref="P:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionEditPointControl.Type"/> dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionEditPointControl.PositionProperty">
            <summary>
            The <see cref="P:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionEditPointControl.Position"/> dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionEditPointControl.#ctor(Telerik.Windows.Diagrams.Core.ManipulationPointType,System.Windows.Point,Telerik.Windows.Controls.RadDiagramConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionEditPointControl"/> class.
            </summary>
            <param name="position">The position.</param>
            <param name="type">The type.</param>
            <param name="connection">The connection.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionEditPointControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionEditPointControl"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionEditPointControl.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionEditPointControl.ResetTheme">
            <summary>
            Resets the theme.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionEditPointControl.Telerik#Windows#Diagrams#Core#IConnectionEditPoint#UpdateDisplayElement">
            <summary>
            Updates the display element.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionEditPointControl.UpdateDisplayElement">
            <summary>
            Updates the displayed element.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionEditPointControl.OnInitialized(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.FrameworkElement.Initialized"/> event. This method is invoked whenever <see cref="P:System.Windows.FrameworkElement.IsInitialized"/> is set to true internally.
            </summary>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionEditPointControl.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"/> routed event is raised on this element. Implement this method to add class handling for this event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> that contains the event data. The event data reports that the left mouse button was pressed.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionEditPointControl.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> attached event is raised on this element. Implement this method to add class handling for this event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionEditPointControl.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseLeave"/> attached event is raised on this element. Implement this method to add class handling for this event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionEditPointControl.OnIsManipulatingChanged">
            <summary>
            Called when IsManipulating property is changed.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionEditPointControl.UpdateVisualStates">
            <summary>
            Updates the visual states.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionEditPointControl.OnPositionChanged">
            <summary>
            Called when position changes.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionEditPointControl.Position">
            <summary>
            Gets or sets the position of this editor.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionEditPointControl.IsConnected">
            <summary>
            Gets a value indicating whether this editor is connected to a shape.
            </summary>
            <remarks>This property only makes sense if the <see cref="P:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionEditPointControl.Type"/> is either equal to <see cref="F:Telerik.Windows.Diagrams.Core.ManipulationPointType.First"/> or to <see cref="F:Telerik.Windows.Diagrams.Core.ManipulationPointType.Last"/>.</remarks>
            <value>
            	<c>True</c> if this instance is connected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionEditPointControl.IsManipulating">
            <summary>
            Gets or sets a value indicating whether this editor is currently being used (moved).
            </summary>
            <value>
            	<c>True</c> if this instance is manipulating; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionEditPointControl.Type">
            <summary>
            Gets or sets this editor's type.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionEditPointControl.Connection">
            <summary>
            Gets the underlying connection that's being manipulated by this editor.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionEditPointControl.Adorner">
            <summary>
            Gets the connection adorner in which this editor resides.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.Primitives.ConnectorsPanel">
            <summary>
            Represents a layout panel for the connectors.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ConnectorsPanel.MeasureOverride(System.Windows.Size)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ConnectorsPanel.ArrangeOverride(System.Windows.Size)">
            <inheritdoc />
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionManipulationAdorner">
            <summary>
            Represents a connection manipulation adorner.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionManipulationAdorner.ConnectionManipulationPointsSurfacePartName">
            <summary>
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionManipulationAdorner.IsConnectionAdornerActiveProperty">
            <summary>
            Identifies the IsConnectionAdornerActive dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionManipulationAdorner.StartPointProperty">
            <summary>
            StartPoint Dependency Property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionManipulationAdorner.EndPointProperty">
            <summary>
            EndPoint Dependency Property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionManipulationAdorner.StartBezierPointProperty">
            <summary>
            StartBezierPoint Dependency Property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionManipulationAdorner.EndBezierPointProperty">
            <summary>
            StartBezierPoint Dependency Property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionManipulationAdorner.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionManipulationAdorner"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionManipulationAdorner.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionManipulationAdorner.Update(System.Collections.Generic.IEnumerable{System.Object},System.Boolean)">
            <summary>
            Updates the specified items.
            </summary>
            <param name="items">
            The items.
            </param>
            <param name="show">
            If set to <c>true</c> [show].
            </param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionManipulationAdorner.UpdateEditorPointPositions">
            <summary>
            Updates the editor point positions.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionManipulationAdorner.UpdateConnectionEditPoints">
            <summary>
            Updates the connection manipulation points.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionManipulationAdorner.Clear">
            <summary>
            Clears the cached members of the manipulation adorner.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionManipulationAdorner.CreateEditPoints">
            <summary>
            Creates the thumbs which allow the user to manipulate the connection.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionManipulationAdorner.AddEditorPoint(Telerik.Windows.Diagrams.Core.ManipulationPointType,System.Windows.Point)">
            <summary>
            Adds a manipulation point to the adorner.
            </summary>
            <param name="type">
            </param>
            <param name="p">
            </param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionManipulationAdorner.OnConnectionManipulationPointsSurfaceUnloaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            </summary>
            <param name="sender">
            </param>
            <param name="e">
            </param>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionManipulationAdorner.ConnectionEditors">
            <summary>
            The connection editors.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionManipulationAdorner.IsConnectionAdornerActive">
            <summary>
            Gets or sets a value indicating whether connection adorner is active.
            </summary>
            <value>
            	<c>True</c> if connection adorner is active; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionManipulationAdorner.StartPoint">
            <summary>
            Gets or sets the StartPoint property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionManipulationAdorner.EndPoint">
            <summary>
            Gets or sets the EndPoint property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionManipulationAdorner.StartBezierPoint">
            <summary>
            Gets or sets the StartBezierPoint property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionManipulationAdorner.EndBezierPoint">
            <summary>
            Gets or sets the EndBezierPoint property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.ConnectionManipulationAdorner.ActiveConnection">
            <summary>
            Gets the active connection that is currently adorned.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.Primitives.GraphPaper">
            <summary>
            Represents a graph paper control.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.GraphPaper.CellSizeProperty">
            <summary>
            Identifies the CellSize attached property.
            </summary> 
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.GraphPaper.LineStrokeDashArrayProperty">
            <summary> 
            Identifies the LineStrokeDashArray attached property.
            </summary> 
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.GraphPaper.LineStrokeProperty">
            <summary> 
            Identifies the LineStroke attached property.
            </summary> 
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.GraphPaper.LineThicknessProperty">
            <summary> 
            Identifies the LineThickness attached property.
            </summary> 
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.GraphPaper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.Primitives.GraphPaper"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.GraphPaper.GetCellSize(System.Windows.DependencyObject)">
            <summary>
            Gets the graph paper cell size.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.GraphPaper.GetLineStroke(System.Windows.DependencyObject)">
            <summary>
            Gets the graph paper line stroke.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.GraphPaper.GetLineStrokeDashArray(System.Windows.DependencyObject)">
            <summary>
            Gets the graph paper line stroke dash array.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.GraphPaper.GetLineThickness(System.Windows.DependencyObject)">
            <summary>
            Gets the graph paper line thickness.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.GraphPaper.SetCellSize(System.Windows.DependencyObject,System.Windows.Size)">
            <summary>
            Sets the size of the graph paper cell.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.GraphPaper.SetLineStroke(System.Windows.DependencyObject,System.Windows.Media.Brush)">
            <summary>
            Sets the graph paper line stroke.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.GraphPaper.SetLineStrokeDashArray(System.Windows.DependencyObject,System.Windows.Media.DoubleCollection)">
            <summary>
            Sets the graph paper line stroke dash array.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.GraphPaper.SetLineThickness(System.Windows.DependencyObject,System.Double)">
            <summary>
            Sets the graph paper line thickness.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.GraphPaper.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application
            code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.GraphPaper.ResetTheme">
            <summary>
            Resets the theme.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.GraphPaper.OnInitialized(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.FrameworkElement.Initialized"/> event. This method is invoked whenever <see cref="P:System.Windows.FrameworkElement.IsInitialized"/> is set to true internally.
            </summary>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.Primitives.GroupsAdorner">
            <summary>
            The adorner displaying the currently selected group.
            </summary>
            <remarks>The default control template is essentially a Canvas displaying the items.</remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.GroupsAdorner.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.Primitives.GroupsAdorner"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.GroupsAdorner.UpdateGroupPosition(Telerik.Windows.Diagrams.Core.IGroup)">
            <summary>
            Updates the position of the given group.
            </summary>
            <param name="group">The group.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.GroupsAdorner.GetContainerForItemOverride">
            <summary>
            Creates or identifies the element that is used to display the given item.
            </summary>
            <returns>
            The element that is used to display the given item.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.GroupsAdorner.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Prepares the specified element to display the specified item.
            </summary>
            <param name="element">Element used to display the specified item.</param>
            <param name="item">Specified item.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.GroupsAdorner.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            When overridden in a derived class, undoes the effects of the <see cref="M:System.Windows.Controls.ItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" /> method.
            </summary>
            <param name="element">The container element.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.GroupsAdorner.OnInitialized(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.FrameworkElement.Initialized" /> event. This method is invoked whenever <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> is set to true internally.
            </summary>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.GroupsAdorner.SetPosition(System.Windows.FrameworkElement,Telerik.Windows.Diagrams.Core.IGroup)">
            <summary>
            Sets the position of the visual corresponding to the group.
            </summary>
            <param name="visualGroup">The visual representing the group.</param>
            <param name="group">The group.</param>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.Primitives.InformationTipTemplateSelector">
            <summary>
            Represents an information tip template selector.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.InformationTipTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
            <summary>
            When overridden in a derived class, returns a <see cref="T:System.Windows.DataTemplate"/> based on custom logic.
            </summary>
            <param name="item">The data object for which to select the template.</param>
            <param name="container">The data-bound object.</param>
            <returns>
            Returns a <see cref="T:System.Windows.DataTemplate"/> or null. The default value is null.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.InformationTipTemplateSelector.SizeChangedTemplate">
            <summary>
            Gets or sets the size changed template.
            </summary>
            <value>
            The size changed template.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.InformationTipTemplateSelector.PositionChangedTemplate">
            <summary>
            Gets or sets the position changed template.
            </summary>
            <value>
            The position changed template.
            </value>		
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.InformationTipTemplateSelector.RotationChangedTemplate">
            <summary>
            Gets or sets the rotation changed template.
            </summary>
            <value>
            The rotation changed template.
            </value>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.DiagramSurface">
            <summary>
            Represents the diagram surface.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.DiagramSurface.IsVirtualizingProperty">
            <summary>
            Identifies the IsVirtualizationEnabled attached property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.DiagramSurface.ItemVisibilityProperty">
            <summary>
            Identifies the ItemVisibility attached property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DiagramSurface.GetIsVirtualizing(System.Windows.DependencyObject)">
            <summary>
            Gets a value indicating whether the virtualization is enabled.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DiagramSurface.SetIsVirtualizing(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets a value indicating whether the virtualization is enabled.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">If set to <c>true</c> virtualization is enabled.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DiagramSurface.GetItemVisibility(System.Windows.DependencyObject)">
            <summary>
            Gets the item visibility.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DiagramSurface.SetItemVisibility(System.Windows.DependencyObject,Telerik.Windows.Diagrams.Core.ItemVisibility)">
            <summary>
            Sets the item visibility.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">If set to <c>true</c> virtualization is enabled.</param>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.Primitives.ItemInformationAdorner">
            <summary>
            Represents an item information adorner.
            </summary>	
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.ItemInformationAdorner.InformationTipProperty">
            <summary>
            Identifies the InformationTip dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.ItemInformationAdorner.AdditionalContentProperty">
            <summary>
            Identifies the AdditionalContent dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.ItemInformationAdorner.InformationTipTemplateSelectorProperty">
            <summary>
            Identifies the InformationTipTemplateSelector dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ItemInformationAdorner.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.Primitives.ItemInformationAdorner"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ItemInformationAdorner.GetAdditionalContent(System.Windows.DependencyObject)">
            <summary>
            Gets the content of the additional.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ItemInformationAdorner.SetAdditionalContent(System.Windows.DependencyObject,System.Object)">
            <summary>
            Sets the content of the additional.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ItemInformationAdorner.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ItemInformationAdorner.GlimpseInformationTip">
            <summary>
            Shows the information tip for a second and then closes it.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ItemInformationAdorner.OnInitialized(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.FrameworkElement.Initialized"/> event. This method is invoked whenever <see cref="P:System.Windows.FrameworkElement.IsInitialized"/> is set to true internally.
            </summary>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ItemInformationAdorner.UpdateInformationTipOverride(System.Object,System.Windows.DataTemplate)">
            <summary>
            When overridden, updates the information tip.
            </summary>
            <param name="content">The content.</param>
            <param name="template">The template.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ItemInformationAdorner.UpdateAdditionalContentOverride(System.Object)">
            <summary>
            When overridden, updates the additional content.
            </summary>
            <param name="content">The content.</param>
        </member>
        <member name="E:Telerik.Windows.Controls.Diagrams.Primitives.ItemInformationAdorner.IsAdditionalContentVisibleChanged">
            <summary>
            Indicates when the IsAdditionalContentVisible property changes.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.Diagrams.Primitives.ItemInformationAdorner.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.ItemInformationAdorner.InformationTipTemplateSelector">
            <summary>
            Gets or sets the information tip template selector.
            </summary>
            <value>
            The information tip template selector.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.ItemInformationAdorner.InformationTip">
            <summary>
            Gets or sets the information tip.
            </summary>
            <value>
            The information tip.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.ItemInformationAdorner.IsAdditionalContentVisible">
            <summary>
            Indicates whether the additional content is visible or not.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.ItemInformationAdorner.IsInformationTipVisible">
            <summary>
            Gets a value indicating whether this instance is information tip visible.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.ItemInformationAdorner.Diagram">
            <summary>
            Gets or sets the diagram.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationAdorner">
            <summary>
            Represents a manipulation adorner.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationAdorner.IsResizingEnabledProperty">
            <summary>
            Identifies the IsResizingEnabled dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationAdorner.IsRotationEnabledProperty">
            <summary>
            Identifies the IsRotationEnabled dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationAdorner.ZoomLevelProperty">
            <summary>
            Identifies the ZoomLevel dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationAdorner.ResizeActivationRadiusProperty">
            <summary>
            Identifies the ResizeActivationRadius dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationAdorner.RotateHitTestRadiusProperty">
            <summary>
            Identifies the RotateHitTestRadius dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationAdorner.IsScalingEnabledProperty">
            <summary>
            Identifies the IsScalingEnabledProperty dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationAdorner.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationAdorner"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationAdorner.Telerik#Windows#Diagrams#Core#IAdornerPartResolver#GetResizeActivationRadius">
            <summary>
            Gets the resize handles activation radius.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationAdorner.Telerik#Windows#Diagrams#Core#IAdornerPartResolver#GetRotateActivationRadius">
            <summary>
            Gets the rotate handle activation radius.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationAdorner.Telerik#Windows#Diagrams#Core#IAdornerPartResolver#GetRotationElementBounds(System.Boolean)">
            <summary>
            Gets the bounds of the rotation handle.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationAdorner.Telerik#Windows#Diagrams#Core#IAdornerPartResolver#GetRotationElementOffset(System.Boolean)">
            <summary>
            Gets the offset of the rotation handle relative to top center point.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationAdorner.Telerik#Windows#Diagrams#Core#IAdornerPartResolver#GetTopLeftResizeHandleOffset(System.Boolean)">
            <summary>
            Gets the bounds of the top left resize handle.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationAdorner.Telerik#Windows#Diagrams#Core#IAdornerPartResolver#GetTopRightResizeHandleOffset(System.Boolean)">
            <summary>
            Gets the bounds of the top right resize handle.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationAdorner.Telerik#Windows#Diagrams#Core#IAdornerPartResolver#GetBottomLeftResizeHandleOffset(System.Boolean)">
            <summary>
            Gets the bounds of the bottom left resize handle.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationAdorner.Telerik#Windows#Diagrams#Core#IAdornerPartResolver#GetBottomRightResizeHandleOffset(System.Boolean)">
            <summary>
            Gets the bounds of the bottom right resize handle.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationAdorner.Update(System.Collections.Generic.IEnumerable{System.Object},System.Boolean)">
            <summary>
            Updates the specified items.
            </summary>
            <param name="items">The items.</param>
            <param name="show">If set to <c>true</c> [show].</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationAdorner.GetRenderTransformOrigin">
            <summary>
            Gets the bounds of the rotation handle.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationAdorner.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes call
            <see cref="M:System.Windows.FrameworkElement.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationAdorner.OnInitialized(System.EventArgs)">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationAdorner.IsRotationEnabled">
            <summary>
            Gets or sets a value indicating whether rotation is enabled.
            </summary>
            <value>
            	<c>true</c> if rotation is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationAdorner.IsResizingEnabled">
            <summary>
            Gets or sets a value indicating whether resizing is enabled.
            </summary>
            <value>
            	<c>true</c> if resizing is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationAdorner.ZoomLevel">
            <summary>
            Gets or sets the zoom level.
            </summary>
            <value>
            The zoom level.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationAdorner.ResizeActivationRadius">
            <summary>
            Gets or sets the resize handles activation radius.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationAdorner.RotateHitTestRadius">
            <summary>
            Gets or sets the rotate handle activation radius.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationAdorner.IsScalingEnabled">
            <summary>
            Gets or sets whether the scaling is enabled.
            </summary>
            <value>The is scaling enabled.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Primitives.ManipulationAdorner.PartResolver">
            <summary>
            Gets the part resolver.
            </summary>
            <value>The part resolver.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.RadDiagramPrintPaginator">
            <summary>
            Represent the default implementation of abstract <see cref="T:System.Windows.Documents.DocumentPaginator"/> class suitable for diagram printing.
            Paginates the content of <see cref="T:Telerik.Windows.Controls.RadDiagram"/> object.
            Creates a virtual grid of columns and rows where each cell is a printable page. 
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramPrintPaginator.#ctor(Telerik.Windows.Controls.Diagrams.RadDiagramPagesInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.RadDiagramPrintPaginator"/> class.
            </summary>
            <param name="pagesInfo">Info about the pages.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramPrintPaginator.GetPage(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramPrintPaginator.GetPageContent(System.Int32)">
            <summary>
            User can alter the visual that is going to be printed.
            </summary>
            <param name="pageNumber"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramPrintPaginator.IsPageCountValid">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramPrintPaginator.PageCount">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramPrintPaginator.PageSize">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramPrintPaginator.Source">
            <inheritdoc />
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.BitmapUtils">
            <summary>
            Bitmap utilities.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.BitmapUtils.CreateWriteableBitmap(System.Windows.UIElement,System.Windows.Rect,System.Windows.Size,System.Windows.Media.Brush,System.Windows.Thickness,System.Double)">
            <summary>
            Creates a writeable bitmap of the given FrameworkElement.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.BitmapUtils.ImageFromDib(System.IO.MemoryStream)">
            <summary>
            Gets an image from a Dib stream. If from the Clipboard then use
            <code>
            Clipboard.GetData("DeviceIndependentBitmap") as MemoryStream
            </code>
            otherwise, if from a DataObject then use
            <code>
            dataObject.GetData("DeviceIndependentBitmap") as MemoryStream
            </code>
            as a parameter for this method.
            </summary>
            <param name="ms">The <see cref="T:System.IO.MemoryStream"/> to fetch the image from.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.BitmapUtils.BinaryStructConverter.FromByteArray``1(System.Byte[])">
            <summary>
            Returns an object from the given byte array.
            </summary>
            <param name="bytes">The byte array.</param>
            <typeparam name="T">The type to construct.</typeparam>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.BitmapUtils.BinaryStructConverter.ToByteArray``1(``0)">
            <summary>
            Creates a byte array from the given object.
            </summary>
            <param name="obj">The object to stream.</param>
            <typeparam name="T">The type to stream.</typeparam>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.LineSpecification">
            <summary>
            Parametrization of a polyline geometry which allows you to use multiple <see cref="P:Telerik.Windows.Controls.Diagrams.LineSpecification.Points"/> and bridges (using the <see cref="P:Telerik.Windows.Controls.Diagrams.LineSpecification.Crossings"/> data and the <see cref="P:Telerik.Windows.Controls.Diagrams.LineSpecification.BridgeType"/>). The <see cref="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.CreateBaseLineGeometry(Telerik.Windows.Controls.Diagrams.LineSpecification)"/> method uses such specifications to create a concrete geometry.
            </summary>
            <remarks>
            There are a few things to consider in relation to crossings:
            <list type="bullet">
            <item>
            <term>None: </term>
            <description>the <see cref="P:Telerik.Windows.Controls.Diagrams.LineSpecification.StartPoint"/> and <see cref="P:Telerik.Windows.Controls.Diagrams.LineSpecification.EndPoint"/> will be used to define the start and end of the polyline. If some caps are used these points will be shifted if necessary so that the polyline makes space for the caps. This depends on the type of the cap.</description>
            </item> 
            <item><term>Some bridge type:</term>
            <description>the <see cref="P:Telerik.Windows.Controls.Diagrams.LineSpecification.Crossings"/> data will define the start and end points, while the <see cref="P:Telerik.Windows.Controls.Diagrams.LineSpecification.StartPoint"/> and <see cref="P:Telerik.Windows.Controls.Diagrams.LineSpecification.EndPoint"/> will be irrelevant in this case. </description> 
            </item>
            </list>
            </remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.LineSpecification.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.LineSpecification"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.LineSpecification.Bounds">
            <summary>
            Gets or sets the bounds of the connection.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.LineSpecification.ConnectionType">
            <summary>
            Gets or sets the type of the connection.
            </summary>
            <value>
            The type of the connection.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.LineSpecification.BezierTension">
            <summary>
            Gets or sets the Bezier tension.
            </summary>
            <value>
            A value or zero turns the Bezier connection into a straight line, a value of one and above increase the sharpness of the Bezier curve.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.LineSpecification.StartPoint">
            <summary>
            Gets or sets the start point.
            </summary>
            <remarks>
            This position is with respect to the local coordinate system (of the connection).
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.LineSpecification.EndPoint">
            <summary>
            Gets or sets the end point.
            </summary>
            <remarks>
            This position is with respect to the local coordinate system (of the connection).
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.LineSpecification.RoundedCorners">
            <summary>
            Gets or sets the corners should be rounded.
            </summary>
            <value>
              <c>true</c> if [rounded corners]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.LineSpecification.BridgeType">
            <summary>
            Gets or sets the type of the bridge or crossing.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.LineSpecification.Crossings">
            <summary>
            Gets or sets the crossings data.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.LineSpecification.Points">
            <summary>
            Gets or sets the intermediate connection points.
            </summary>
            <remarks>Do NOT include the start/end points.</remarks>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.ItemVisibilityToVisibilityConverter">
            <summary>
            Converts <see cref="T:Telerik.Windows.Diagrams.Core.ItemVisibility"/> to <see cref="T:System.Windows.Visibility"/> and vice versa.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.ItemVisibilityToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.ItemVisibilityToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.ItemVisibilityToVisibilityConverter.Instance">
            <summary>
            Gets a single instance of type <see cref="T:Telerik.Windows.Controls.Diagrams.ItemVisibilityToVisibilityConverter"/>.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.PolylineSpecification">
            <summary>
            Parametrization of a polyline geometry which allows you to use multiple Points, bridges (using the Crossings data and the BridgeType) and end caps. See the <see cref="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.CreateLineGeometry(Telerik.Windows.Controls.Diagrams.PolylineSpecification)"/> to use this specification and return a concrete geometry.
            </summary>
            <seealso cref="T:Telerik.Windows.Controls.Diagrams.LineSpecification"/>
            <seealso cref="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.CreateLineGeometry(Telerik.Windows.Controls.Diagrams.PolylineSpecification)"/>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.PolylineSpecification.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.PolylineSpecification"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.PolylineSpecification.StartCapType">
            <summary>
            Gets or sets the type of the start-cap.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.PolylineSpecification.EndCapType">
            <summary>
            Gets or sets the type of the end-cap.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.PolylineSpecification.StartCapWidth">
            <summary>
            Gets or sets the width of the start-cap.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.PolylineSpecification.StartCapHeight">
            <summary>
            Gets or sets the height of the start-cap.
            </summary>
            <value>
            The start height of the cap.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.PolylineSpecification.EndCapWidth">
            <summary>
            Gets or sets the width of the end-cap.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.PolylineSpecification.EndCapHeight">
            <summary>
            Gets or sets the height of the end-cap.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.PredefinedGeometry">
            <summary>
            Defines the combination of string geometry and the (approximate) edge geometry along which
            a gliding connector moves.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.DistanceToPointComparer">
            <summary>
            Compares the distance to a given reference point.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.DistanceToPointComparer.#ctor(System.Windows.Point)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.DistanceToPointComparer"/> class.
            </summary>
            <param name="referencePoint">The point which sets the reference to which the other points are compared.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.DistanceToPointComparer.Compare(System.Windows.Point,System.Windows.Point)">
            <summary>
            Compares the specified left.
            </summary>
            <param name="x">A point.</param>
            <param name="y">Another point to compare the first one with.</param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Windows.Controls.DistanceToPointComparer.ReferencePoint">
            <summary>
            Gets or sets the reference point with respect to which the ordering occurs.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.RadDiagramConnector">
            <summary>
            Represents a connector point.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramConnector.ActivationChangedEvent">
            <summary>
            Identifies the ConnectorActivated routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramConnector.OffsetProperty">
            <summary>
            The <see cref="P:Telerik.Windows.Controls.Diagrams.RadDiagramConnector.Offset"/> dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramConnector.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Telerik.Windows.Controls.Diagrams.RadDiagramConnector"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramConnector.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.RadDiagramConnector"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramConnector.System#ICloneable#Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramConnector.Telerik#Windows#Controls#IThemable#ResetTheme">
            <summary>
            Resets the theme.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramConnector.Serialize">
            <summary>
            Serializes this instance.
            Primitives like Background, Foreground, Stroke , Width, height are saved only if they are locally set.
            If they are set via style, we expect the style to be applied after save/load so there is no need to save them and load them.
            This is also done for performance reasons.
            Exception of this rule are the Name and Offset properties which can be used to define a custom connector and 
            we do not expect them to be set in Style setter because Connectors do not provide MVVM support.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramConnector.Deserialize(Telerik.Windows.Diagrams.Core.SerializationInfo)">
            <summary>
            Deserializes the specified info.
            </summary>
            <param name="info">The info.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramConnector.CalculateRelativePosition(System.Windows.Size)">
            <summary>
            Calculate the relative position of this connector.
            </summary>
            <param name="shapeSize">Size of the shape.</param>
            <returns>The desired position of the connector's center. This position is relative to the parent shape's (connectorsControl's) position.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramConnector.OnInitialized(System.EventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramConnector.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramConnector.UpdateVisualStates">
            <summary>
            Updates the visual states.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramConnector.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramConnector.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramConnector.OnOffsetChanged(System.Windows.Point,System.Windows.Point)">
            <summary>
            Called when [offset changed].
            </summary>
            <param name="oldOffset">The old offset.</param>
            <param name="newOffset">The new offset.</param>
        </member>
        <member name="E:Telerik.Windows.Controls.Diagrams.RadDiagramConnector.ActivationChanged">
            <summary>
            Occurs when [connector activation changed].
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.Diagrams.RadDiagramConnector.OffsetChanged">
            <summary>
            Occurs when [offset changed].
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramConnector.Offset">
            <summary>
            Gets or sets the offset of the top-left corner of the shape. A value of zero corresponds to the upper-left corner, while a value of one corresponds to the right side of the shape.
            Values outside the <c>[0,1]</c> range will position the connector outside the shape.
            </summary>
            <value>
            The connector's offset.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramConnector.Shape">
            <summary>
            Gets the associated shape.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramConnector.Telerik#Windows#Diagrams#Core#IConnector#IsActive">
            <summary>
            Gets or sets a value indicating whether this instance is active.
            </summary>
            <value>
              <c>True</c> if this instance is active; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramConnector.Telerik#Windows#Diagrams#Core#IConnector#AbsolutePosition">
            <summary>
            Gets the absolute (actual or real) position.
            </summary>
            <returns>The point where this connector's center is located on the diagram surface.</returns>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.ConnectorRoutedEventArgs">
            <summary>
            Represents connector routed event args.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.ConnectorRoutedEventArgs.#ctor(System.Windows.RoutedEvent,Telerik.Windows.Diagrams.Core.IConnection,Telerik.Windows.Diagrams.Core.IShape,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.ConnectorRoutedEventArgs"/> class.
            </summary>
            <param name="routedEvent">The routed event.</param>
            <param name="connection">The connection.</param>
            <param name="shape">The shape.</param>
            <param name="attachSource">True is the connection attaches to the shape as source, otherwise as target.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.ConnectorRoutedEventArgs.Connection">
            <summary>
            The connection.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.ConnectorRoutedEventArgs.Shape">
            <summary>
            The shape.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.ConnectorRoutedEventArgs.AttachAsSource">
            <summary>
            Gets a value whether the connection is attached as source to the shape.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.ConnectorRoutedEventArgs.AttachAsTarget">
            <summary>
            Gets a value whether the connection is attached as target to the shape.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.DiagramSerializationRoutedEventArgs">
            <summary>
            Represents serialization routed event args.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DiagramSerializationRoutedEventArgs.#ctor(System.Windows.RoutedEvent,Telerik.Windows.Diagrams.Core.IGraph,Telerik.Windows.Diagrams.Core.SerializationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.DiagramSerializationRoutedEventArgs"/> class.
            </summary>
            <param name="routedEvent">The routed event.</param>
            <param name="graph">The graph (diagram).</param>
            <param name="serializationInfo">The serialization info.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramSerializationRoutedEventArgs.SerializationInfo">
            <summary>
            Gets the serialization info.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.CommandRoutedEventArgs">
            <summary>
            Represents command routed event args.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.CommandRoutedEventArgs.#ctor(System.Windows.RoutedEvent,Telerik.Windows.Diagrams.Core.ICommand,Telerik.Windows.Diagrams.Core.ExecuteAction)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.CommandRoutedEventArgs"/> class.
            </summary>
            <param name="routedEvent">The routed event.</param>
            <param name="command">The command.</param>
            <param name="action">The action.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.CommandRoutedEventArgs.Command">
            <summary>
            Gets or sets the command.
            </summary>
            <value>
            The command.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.CommandRoutedEventArgs.ExecuteAction">
            <summary>
            Gets the execute action.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.ConnectionRoutedEventArgs">
            <summary>
            Represents connection routed event args.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.ConnectionRoutedEventArgs.#ctor(System.Windows.RoutedEvent,Telerik.Windows.Diagrams.Core.IConnection)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.ConnectionRoutedEventArgs"/> class.
            </summary>
            <param name="routedEvent">The routed event.</param>
            <param name="connection">The connection.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.ConnectionRoutedEventArgs.Connection">
            <summary>
            Gets the connection.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.ConnectionSerializationRoutedEventArgs">
            <summary>
            Represents connection serialization routed event args.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.ConnectionSerializationRoutedEventArgs.#ctor(System.Windows.RoutedEvent,Telerik.Windows.Diagrams.Core.IConnection,Telerik.Windows.Diagrams.Core.SerializationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.ConnectionSerializationRoutedEventArgs"/> class.
            </summary>
            <param name="routedEvent">The routed event.</param>
            <param name="connection">The connection.</param>
            <param name="serializationInfo">The serialization info.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.ConnectionSerializationRoutedEventArgs.SerializationInfo">
            <summary>
            Gets the serialization info.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.DragRoutedEventArgs">
            <summary>
            Represents drag routed event args.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DragRoutedEventArgs.#ctor(System.Windows.RoutedEvent,System.Collections.Generic.IEnumerable{Telerik.Windows.Diagrams.Core.IDiagramItem})">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.DragRoutedEventArgs"/> class.
            </summary>
            <param name="routedEvent">The routed event.</param>
            <param name="items">The items.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DragRoutedEventArgs.#ctor(System.Windows.RoutedEvent,System.Collections.Generic.IEnumerable{Telerik.Windows.Diagrams.Core.IDiagramItem},System.Windows.Point,System.Windows.Point)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.DragRoutedEventArgs"/> class.
            </summary>
            <param name="routedEvent">The routed event.</param>
            <param name="items">The items.</param>
            <param name="oldPosition">The old position.</param>
            <param name="newPosition">The new position.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DragRoutedEventArgs.StartMousePosition">
            <summary>
            Gets the StartMouse Position.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.DiagramItemsChangedEventArgs">
            <summary>
            Represents ItemsChanged event args.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DiagramItemsChangedEventArgs.#ctor(System.Windows.RoutedEvent,System.Collections.IEnumerable,System.Collections.IEnumerable,System.Collections.Specialized.NotifyCollectionChangedAction)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.DiagramItemsChangedEventArgs"/> class.
            </summary>
            <param name="routedEvent">The routed event.</param>
            <param name="newItems">The new items.</param>
            <param name="oldItems">The old items.</param>
            <param name="action">The action.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramItemsChangedEventArgs.NewItems">
            <summary>
            The new items.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramItemsChangedEventArgs.OldItems">
            <summary>
            The old items.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramItemsChangedEventArgs.Action">
            <summary>
            Gets the action.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.ResizeRoutedEventArgs">
            <summary>
            Represents resizing routed event args.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.ResizeRoutedEventArgs.#ctor(System.Windows.RoutedEvent,System.Collections.Generic.IEnumerable{Telerik.Windows.Diagrams.Core.IDiagramItem})">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.ResizeRoutedEventArgs"/> class.
            </summary>
            <param name="routedEvent">The routed event.</param>
            <param name="items">The items.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.ResizeRoutedEventArgs.#ctor(System.Windows.RoutedEvent,System.Collections.Generic.IEnumerable{Telerik.Windows.Diagrams.Core.IDiagramItem},System.Windows.Rect,System.Windows.Point)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.ResizeRoutedEventArgs"/> class.
            </summary>
            <param name="routedEvent">The routed event.</param>
            <param name="items">The items.</param>
            <param name="newBounds">The new bounds.</param>
            <param name="mousePosition">The mouse position.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.ResizeRoutedEventArgs.NewBounds">
            <summary>
            Gets the new bounds.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.RotateRoutedEventArgs">
            <summary>
            Represents rotated routed event args.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RotateRoutedEventArgs.#ctor(System.Windows.RoutedEvent,System.Collections.Generic.IEnumerable{Telerik.Windows.Diagrams.Core.IDiagramItem})">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.RotateRoutedEventArgs"/> class.
            </summary>
            <param name="routedEvent">The routed event.</param>
            <param name="items">The items.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RotateRoutedEventArgs.#ctor(System.Windows.RoutedEvent,System.Collections.Generic.IEnumerable{Telerik.Windows.Diagrams.Core.IDiagramItem},System.Windows.Point)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.RotateRoutedEventArgs"/> class.
            </summary>
            <param name="routedEvent">The routed event.</param>
            <param name="items">The items.</param>
            <param name="mousePosition">The mouse position.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RotateRoutedEventArgs.#ctor(System.Windows.RoutedEvent,System.Collections.Generic.IEnumerable{Telerik.Windows.Diagrams.Core.IDiagramItem},System.Double,System.Double,System.Windows.Point)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.RotateRoutedEventArgs"/> class.
            </summary>
            <param name="routedEvent">The routed event.</param>
            <param name="items">The items.</param>
            <param name="oldAngle">The old angle.</param>
            <param name="newAngle">The new angle.</param>
            <param name="mousePosition">The mouse position.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RotateRoutedEventArgs.OldAngle">
            <summary>
            Gets the old angle.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RotateRoutedEventArgs.NewAngle">
            <summary>
            Gets the new angle.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.ShapeRoutedEventArgs">
            <summary>
            Represents shape routed event args.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.ShapeRoutedEventArgs.#ctor(System.Windows.RoutedEvent,Telerik.Windows.Diagrams.Core.IShape)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.ShapeRoutedEventArgs"/> class.
            </summary>
            <param name="routedEvent">The routed event.</param>
            <param name="shape">The shape.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.ShapeRoutedEventArgs.Shape">
            <summary>
            Gets the shape.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.ShapeSerializationRoutedEventArgs">
            <summary>
            Routed event argument related to a shape.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.ShapeSerializationRoutedEventArgs.#ctor(System.Windows.RoutedEvent,Telerik.Windows.Diagrams.Core.IShape,Telerik.Windows.Diagrams.Core.SerializationInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.ShapeSerializationRoutedEventArgs"/> class.
            </summary>
            <param name="routedEvent">The routed event.</param>
            <param name="shape">The shape.</param>
            <param name="serializationInfo">The serialization info.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.ShapeSerializationRoutedEventArgs.SerializationInfo">
            <summary>
            Gets the serialization info.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.DiagramTransformationInfo">
            <summary>
            Contains encapsulated information about the pan and zoom values.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramTransformationInfo.PanOffset">
            <summary>
            Gets the translate vector.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramTransformationInfo.ZoomLevel">
            <summary>
            Gets the scaling value.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.DiagramTransformationInfo.ZoomCenter">
            <summary>
            Get the scaling center point.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.GeometryExtensions">
            <summary>
            Methods related to planar geometry.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.CreateConnectionGeometry(Telerik.Windows.Diagrams.Core.IConnection,Telerik.Windows.Diagrams.Core.BridgeType,System.Boolean)">
            <summary>
            This method is called by the connection update process to create a geometry which is then plugged into the Path in the XAML template of the connection.
            </summary>
            <remarks>
            <list type="bullet">
            <item>
            The method essentially dispatches first a calculation of the route, if required, and then hands over a specification to the <see cref="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.CreateLineGeometry(Telerik.Windows.Controls.Diagrams.PolylineSpecification)"/> method. 
            </item>
            <item>
            The points defined by the given connection and the routing service are global positions, they are converted internally to local coordinates.
            </item>
            </list>
            </remarks>
            <param name="connection">The connection for which to create a geometry.</param>
            <param name="connectionBridge">What type of bridging should be applied to the line. </param>
            <param name="connectionRoundedCorners">Whether the corners of the line should be rounded.</param>
            <seealso cref="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.CreateLineGeometry(Telerik.Windows.Controls.Diagrams.PolylineSpecification)"/>
            <returns>The geometry of the connection path.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.CreateLineGeometry(Telerik.Windows.Controls.Diagrams.PolylineSpecification)">
            <summary>
            Creates a line geometry based on the given specifications.
            </summary>
            <remarks>
            <list type="bullet">
            <item>This method will create a polyline or Bezier line including possibly the end caps and the crossings.</item> 
            <item>This method decouples between the method called by the connection (<see cref="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.CreateConnectionGeometry(Telerik.Windows.Diagrams.Core.IConnection,Telerik.Windows.Diagrams.Core.BridgeType,System.Boolean)"/>) on the one hand and the more specific methods for a polyline (<see cref="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.CreatePolylineLineFigure(Telerik.Windows.Controls.Diagrams.PolylineSpecification)"/>) or a Bezier line (<see cref="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.CreateBezierLineFigure(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Double)"/>) on the other.</item>
            <item>All  coordinates handled in this method are local positions. </item>
            </list>
            </remarks>
            <seealso cref="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.CreateConnectionGeometry(Telerik.Windows.Diagrams.Core.IConnection,Telerik.Windows.Diagrams.Core.BridgeType,System.Boolean)"/>
            <seealso cref="T:Telerik.Windows.Controls.Diagrams.PolylineSpecification"/>
            <seealso cref="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.CreatePolylineLineFigure(Telerik.Windows.Controls.Diagrams.PolylineSpecification)"/>
            <returns>A <see cref="T:System.Windows.Media.Geometry"/> to be used in a <see cref="T:System.Windows.Shapes.Path"/></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.CreateBaseLineGeometry(Telerik.Windows.Controls.Diagrams.LineSpecification)">
            <summary>
            Creates a line geometry based on the given specifications.
            </summary>
            <remarks>
            <list type="bullet">
            <item>This method will create the base line of a connection. This line will including possible bridges but no end caps.</item> 
            <item>All  coordinates handled in this method are local positions. </item>
            </list>
            </remarks>
            <param name="specs">The specs.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.GetString(System.Windows.Media.Geometry)">
            <summary>
            Converts the geometry object to its string equivalent.
            </summary>
            <param name="geometry">The geometry.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.CreatePolylineLineFigure(Telerik.Windows.Controls.Diagrams.PolylineSpecification)">
            <summary>
            Gets the polyline figure.
            </summary>
            <param name="specs">The polyline specifications.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.CreateEllipse(System.Windows.Point,System.Double,System.Double)">
            <summary>
            Creates an ellipse.
            </summary>
            <param name="center">The center.</param>
            <param name="radiusX">The x radius.</param>
            <param name="radiusY">The y radius.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.CreatePathGeometry(System.Windows.Point,System.Collections.Generic.IList{System.Windows.Media.PathSegment})">
            <summary>
            Creates a geometry.
            </summary>
            <param name="startPoint">The start point.</param>
            <param name="pathSegments">The path segments.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.CreateBezier(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Double)">
            <summary>
            Creates a bezier geometry.
            </summary>
            <param name="startPoint">The start point.</param>
            <param name="endPoint">The end point.</param>
            <param name="startBezierPoint">The start bezier point.</param>
            <param name="endBezierPoint">The end bezier point.</param>
            <param name="tension">The tension of the Bezier curve.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.FindIntersection(System.Windows.Point,System.Windows.Point,System.Windows.Media.Geometry,System.Double,System.Boolean)">
            <summary>
            Finds the intersection.
            </summary>
            <param name="sourcePoint">The source point.</param>
            <param name="targetPoint">The target point.</param>
            <param name="geometry">The geometry.</param>
            <param name="edgeThick">The edge thick.</param>
            <param name="isArrow">If set to <c>true</c> [is arrow].</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.CreateRoundedPolyline(System.Windows.Media.PathFigure,System.Collections.Generic.IList{System.Windows.Point},System.Boolean)">
            <summary>
            Adds rounded corners to the existing polyline figure.
            </summary>
            <param name="figure">The figure which will be incremented with corner arcs.</param>
            <param name="points">The points of the polyline.</param>
            <param name="addLastLine">If set to <c>true</c> the last line segment will be added.</param>
            <remarks>
            The corner radius is set in the <see cref="P:Telerik.Windows.Diagrams.Core.DiagramConstants.ConnectionCornerRadius"/> and has default <c>5.0</c> pixels.
            </remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.CreateLineGeometry(System.Windows.Point,System.Windows.Point,System.Boolean,System.Windows.Point[])">
            <summary>
            Creates the polyline.
            </summary>
            <param name="startPoint">The start point.</param>
            <param name="endPoint">The end point.</param>
            <param name="points">The points.</param>
            <param name="roundedCorners">If set to <c>true</c> the corners of the polyline will be rounded.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.GetSplineFigureTangents(System.Collections.Generic.IList{System.Windows.Point},System.Windows.Point@,System.Windows.Point@,System.Double,System.Boolean)">
            <summary>
            Gets the tangents of the spline figure.
            </summary>
            <param name="points">The points of the connection.</param>
            <param name="startTangentPoint">The start tangent point.</param>
            <param name="endTangentPoint">The end tangent point.</param>
            <param name="tension">The tension.</param>
            <param name="isClosed">If set to <c>true</c> [is closed].</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.CreateSplineFigures(System.Collections.Generic.IList{System.Windows.Point},System.Double,System.Boolean,System.Boolean)">
            <summary>
            Creates a canonical spline figure.
            </summary>
            <param name="points">The points defining the spline. These should be in local coordinates and include the endpoints.</param>
            <param name="tension">The tension of the spline. A tension or zero will result in a polyline, a tension between 0.5 and 0.8 is pleasing, other values lead to wild curves.</param>
            <param name="isClosed">If set to <c>true</c> the curve will be closed.</param>
            <param name="isFilled">If set to <c>true</c> the shape will be filled .</param>
            <remarks>Based on the code in <c>http://www.charlespetzold.com/blog/2009/01/canonical-splines-in-wpf-and-silverlight.html</c>.</remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.Clone(System.Windows.Media.Geometry)">
            <summary>
            Clones the specified geometry.
            </summary>
            <param name="geometry">The geometry.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.AsPathGeometry(System.Windows.Media.Geometry)">
            <summary>
            Returns the original geometry as path geometry.
            </summary>
            <param name="original">The original.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.GetPathGeometry(System.String)">
            <summary>
            Gets the path geometry.
            </summary>
            <param name="abbreviatedGeometry">The abbreviated geometry.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.Add(System.Windows.Media.PathGeometry,System.Windows.Media.PathFigure)">
            <summary>
            Adds the given figure to the geometry.
            </summary>
            <param name="pathGeometry">The path geometry.</param>
            <param name="pathFigure">The path figure.</param>
            <returns>The resulting path geometry.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.Add(System.Windows.Media.PathFigure,System.Windows.Media.PathSegment,System.Windows.Point)">
            <summary>
            Adds the given <see cref="T:System.Windows.Media.PathSegment"/> to the path figure and sets the starting point at the same time.
            </summary>
            <param name="pathFigure">The path figure.</param>
            <param name="segment">The segment.</param>
            <param name="startPoint">The start point.</param>
            <returns>The augmented path figure.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.Add(System.Windows.Media.PathFigure,System.Windows.Media.PathSegment)">
            <summary>
            Adds the given <see cref="T:System.Windows.Media.PathSegment"/> to the path figure.
            </summary>
            <param name="pathFigure">The path figure.</param>
            <param name="segment">The segment.</param>
            <returns>The augmented path figure.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.AddArc(System.Windows.Media.PathFigure,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Adds an arc to the path figure.
            </summary>
            <param name="pathFigure">The figure.</param>
            <param name="x">The x-coordinate of the bounding rectangle.</param>
            <param name="y">The y-coordinate of the bounding rectangle.</param>
            <param name="width">The width of the bounding rectangle.</param>
            <param name="height">The height of the bounding rectangle.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweep">The sweeping angle of the arc.</param>
            <param name="startPoint">If set to <c>true</c> the starting point will be set.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.AddArc(System.Windows.Media.PathFigure,System.Windows.Rect,System.Double,System.Double,System.Boolean)">
            <summary>
            Adds the arc.
            </summary>
            <param name="pathFigure">The path figure.</param>
            <param name="rectangle">The bounding rectangle.</param>
            <param name="startAngle">The start angle.</param>
            <param name="sweep">The sweeping angle of the arc.</param>
            <param name="setStartingPoint">If set to <c>true</c> the starting point will be set.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.AddBezier(System.Windows.Media.PathFigure,System.Double[])">
            <summary>
            Adds a bezier segment to the path.
            </summary>
            <param name="pathFigure">The path.</param>
            <param name="points">The eight values specifying the eight coordinates of the four Bezier points.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.AddBeziers(System.Windows.Media.PathFigure,System.Windows.Point[])">
            <summary>
            Adds a bezier segment to the path.
            </summary>
            <param name="pathFigure">The figure.</param>
            <param name="points">The points defining the Bezier segment.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.AddLine(System.Windows.Media.PathFigure,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Adds a line to the path.
            </summary>
            <param name="pathFigure">The path figure.</param>
            <param name="x1">The x-coordinate of the start point.</param>
            <param name="y1">The y-coordinate of the start point.</param>
            <param name="x2">The x-coordinate of the end point.</param>
            <param name="y2">The y-coordinate of the end point.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.AddLine(System.Windows.Media.PathFigure,System.Windows.Point,System.Windows.Point)">
            <summary>
            Adds a line to the path.
            </summary>
            <param name="pathFigure">The path figure.</param>
            <param name="point1">The start point of the line.</param>
            <param name="point2">The end point of the line.</param>
            <returns>The augmented path figure.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.AddPolyLine(System.Windows.Media.PathFigure,System.Collections.Generic.IEnumerable{System.Windows.Point})">
            <summary>
            Adds a polyline to the figure.
            </summary>
            <param name="pathFigure">The figure.</param>
            <param name="points">The points defining the polyline.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.AddPolyLine(System.Windows.Media.PathFigure,System.Windows.Media.PointCollection)">
            <summary>
            Adds a polyline to the figure.
            </summary>
            <param name="pathFigure">The figure.</param>
            <param name="collection">The points defining the polyline.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.AddRoundRect(System.Windows.Media.PathFigure,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Adds a rounded rectangle to the path figure.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.AddRoundRect(System.Windows.Media.PathFigure,System.Windows.Rect,System.Double,System.Boolean)">
            <summary>
            Adds a rounded rectangle to the path figure.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.Segment(System.Collections.Generic.ICollection{System.Windows.Point},System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Double,System.Double,System.Double)">
            <summary>
            Canonical spline as a collection of points.
            </summary>
            <param name="points">The points.</param>
            <param name="pt0">The PT0.</param>
            <param name="pt1">The PT1.</param>
            <param name="pt2">The PT2.</param>
            <param name="pt3">The PT3.</param>
            <param name="t1">The t1.</param>
            <param name="t2">The t2.</param>
            <param name="tolerance">The tolerance.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.CreateBezierLineFigure(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Double)">
            <summary>
            Creates the bezier line figure.
            </summary>
            <param name="startPoint">The start point.</param>
            <param name="endPoint">The end point.</param>
            <param name="startBezierPoint">The start bezier point.</param>
            <param name="endBezierPoint">The end bezier point.</param>
            <param name="tension">The tension is normally a value between zero and one. A value of one is a normal Bezier segment, a lower value will relax the Bezier and zero leads to a straight line.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.CreateArrow(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)">
            <summary>
            Creates an arrow based from the specified points.
            </summary>
            <param name="startPoint">The start point - the tip of the arrow.</param>
            <param name="arrowPoint1">The arrow point1 - the left end point from the start-base line.</param>
            <param name="arrowPoint2">The arrow point2 - the right end points from the start-base line.</param>
            <param name="basePoint">The base point of the arrow - the end of the arrow's head.</param>
            <param name="isClosed">If set to <c>true</c> the arrow will be closed.</param>
            <param name="isFilled">If set to <c>true</c> the arrow's head will be filled.</param>
            <returns>Returns a figure of an arrow.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.CreateCircle(System.Windows.Point,System.Windows.Point,System.Double,System.Double)">
            <summary>
            Creates a circle from the specified points.
            </summary>
            <param name="startPoint">The start point - where the circle should end.</param>
            <param name="endPoint">The end point - the opposite point to the start - mirror against the center.</param>
            <param name="radiusX">The x radius.</param>
            <param name="radiusY">The y radius.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.CreateDiamond(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point)">
            <summary>
            Creates a diamond from the specified points.
            </summary>
            <param name="startPoint">The start point - the tip of the diamond.</param>
            <param name="diamondPoint1">The first corner of the diamond.</param>
            <param name="diamondPoint2">The opposite corner to the start of the diamond.</param>
            <param name="diamondPoint3">The second corner of the diamond.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.CreateDoubleArrow(System.Windows.Point,System.Tuple{System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point},System.Boolean,System.Boolean)">
            <summary>
            Creates a two arrows one after another from the specified points.
            </summary>
            <param name="startPoint">The start points - the tip of the arrow.</param>
            <param name="points">The points of the double arrow:
            Point1 : the left arrow head point of the first arrow.
            Point2 : the base arrow point of the first arrow.
            Point3 : the left arrow head point of the second arrow.
            Point4 : the base arrow point of the second arrow.
            Point5 : the right arrow point of the second arrow.
            Point6 : the right arrow point of the first arrow.
            </param>
            <param name="isClosed">If set to <c>true</c> the arrow will be closed.</param>
            <param name="isFilled">If set to <c>true</c> the arrow's head will be filled.</param>
            <returns>Returns a figure of a double arrow.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.GetArrowPoints(Telerik.Windows.Diagrams.Core.CapType,System.Windows.Point,System.Windows.Point,System.Double,System.Double)">
            <summary>
            Gets the points of an arrow.
            </summary>
            <param name="type">The type of arrow.</param>
            <param name="startPoint">The start point - the tip of the arrow.</param>
            <param name="endPoint">The end of the line of the arrow.</param>
            <param name="arrowWidth">The width of the arrow.</param>
            <param name="arrowHeight">The height of the arrow.</param>
            <returns>Returns the points of an arrow in the order: base arrow point, left arrow head point, right arrow head point.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.GeometryExtensions.GetDoubleArrowPoints(System.Windows.Point,System.Windows.Point,System.Double,System.Double)">
            <summary>
            Gets the points of a double arrow.
            </summary>
            <param name="startPoint">The start point of the arrow - the tip of the arrow.</param>
            <param name="endPoint">The end point of the line of the arrow.</param>
            <param name="arrowWidth">The width of the arrow.</param>
            <param name="arrowHeight">The height of the arrow.</param>
            <returns>Returns the points of an arrow in the order:
            Point1: the left point of the first arrow.
            Point2: the base point of the first arrow.
            Point3: the left point of the second arrow.
            Point4: the base point of the second arrow.
            Point5: the right point of the second arrow.
            Point6: the right point of the first arrow.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DiagramTransformationService.CalculateFit(System.Windows.Point,System.Windows.Point,System.Double)">
            <summary>
            Calculates what transformation should be applied in order to transform sourcePoint to targetPoint.
            Both points should be in original coordinates.
            The zoom determines what should be the zoom level after the transformation.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.DiagramTransformationService.CalculateFit(System.Windows.Rect,System.Windows.Rect,System.Windows.Thickness)">
            <summary>
            Calculates what transformation should be applied in order to place sourceBounds in the center of targetBounds.
            Both bounds should be in original coordinates.
            The margin should also be in original coordinates and is interpreted as a padding of the toBounds.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.SerializationExtensions">
            <summary>
            Utilities related to the (de)serialization.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.SerializationExtensions.SerializePrimitives(System.Windows.Controls.Control,Telerik.Windows.Diagrams.Core.SerializationInfo)">
            <summary>
            Serializes some primitive properties of a control.
            </summary>
            <param name="control">The control.</param>
            <param name="info">The serialization info.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.SerializationExtensions.DeserializePrimitives(System.Windows.Controls.Control,Telerik.Windows.Diagrams.Core.SerializationInfo)">
            <summary>
            Deserializes some primitive properties of a control.
            </summary>
            <param name="control">The control.</param>
            <param name="info">The serialization info.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.SerializationExtensions.GetBrushInfo(System.Windows.Media.Brush,System.String)">
            <summary>
            Converts the brush to a serialized form which can be added to the buckets of the <see cref="T:Telerik.Windows.Diagrams.Core.SerializationInfo"/>.
            </summary>
            <param name="brush">The brush.</param>
            <param name="nodeName">Name of the node.</param>
            <returns></returns>
            <seealso cref="M:Telerik.Windows.Controls.Diagrams.SerializationExtensions.GetBrush(System.Object,System.String)"/>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.SerializationExtensions.GetBrush(System.Object,System.String)">
            <summary>
            Returns a brush from the <see cref="T:Telerik.Windows.Diagrams.Core.SerializationInfo"/> data.
            </summary>
            <param name="data">The data representing a brush; which can be a simple color or a gradient..</param>
            <param name="nodeName">Name of the node.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.SerializationExtensions.GetThicknessInfo(System.Windows.Thickness)">
            <summary>
            Returns a serialized form of the given thickness.
            </summary>
            <param name="thickness">The thickness.</param>
            <returns></returns>
            <seealso cref="M:Telerik.Windows.Controls.Diagrams.SerializationExtensions.GetThickness(System.String)"/>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.SerializationExtensions.GetThickness(System.String)">
            <summary>
            Returns a Thickness on the basis of the given string.
            </summary>
            <param name="serializationValue">The serialized thickness.</param>
            <returns></returns>
            <seealso cref="M:Telerik.Windows.Controls.Diagrams.SerializationExtensions.GetThicknessInfo(System.Windows.Thickness)"/>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.SerializationExtensions.GetBoolean(System.String)">
            <summary>
            Returns a boolean value of the given string.
            </summary>
            <param name="serializationValue">The serialized boolean.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.ShapeFactory">
            <summary>
            Shape factory.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.ShapeFactory.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Telerik.Windows.Controls.Diagrams.ShapeFactory"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.ShapeFactory.CreateCircle(System.Double,System.Double,System.Windows.Point)">
            <summary>
            
            </summary>
            <param name="radiusX"></param>
            <param name="radiusY"></param>
            <param name="center"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.ShapeFactory.CreateRectangle(System.Windows.Rect)">
            <summary>
            
            </summary>
            <param name="rect"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.ShapeFactory.GetShapeGeometry(Telerik.Windows.Controls.Diagrams.ArrowShapeType)">
            <summary>
            Gets a geometry of a specified arrow shape type.
            </summary>
            <param name="shapeType"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.ShapeFactory.GetShapeGeometry(Telerik.Windows.Controls.Diagrams.CommonShapeType)">
            <summary>
            Gets a geometry of a specified common shape type.
            </summary>
            <param name="shapeType"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.ShapeFactory.GetShapeGeometry(Telerik.Windows.Controls.Diagrams.FlowChartShapeType)">
            <summary>
            Gets a geometry of a specified flow chart shape type.
            </summary>
            <param name="shapeType"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.ShapeFactory.CommonGeometries">
            <summary>
            Gets the common geometries.
            </summary>
            <example>
            <para>The following snippet of XAML binds this source of geometries to a ListBox;</para>
            <code>
            <![CDATA[ <ListBox x:Name="ShapeList" >
            <ListBox.ItemTemplate>
            	<DataTemplate>
            	<Path Data="{Binding Path=Value}" Tag="{Binding Path=Key}"  Stroke="Orange" StrokeThickness="1" Margin="2" />
            	</DataTemplate>
            </ListBox.ItemTemplate>
            <ListBox.ItemsPanel>
            <ItemsPanelTemplate>
            	<WrapPanel Width="300" />
            </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            </ListBox> ]]>
            </code>
            </example>
            <seealso cref="P:Telerik.Windows.Controls.Diagrams.ShapeFactory.FlowchartGeometries"/>
            <seealso cref="P:Telerik.Windows.Controls.Diagrams.ShapeFactory.ArrowGeometries"/>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.ShapeFactory.FlowchartGeometries">
            <summary>
            Gets the flowchart geometries.
            </summary>
            <remarks>See also the example in the <see cref="P:Telerik.Windows.Controls.Diagrams.ShapeFactory.CommonGeometries"/>.</remarks>
            <seealso cref="P:Telerik.Windows.Controls.Diagrams.ShapeFactory.CommonGeometries"/>
            <seealso cref="P:Telerik.Windows.Controls.Diagrams.ShapeFactory.ArrowGeometries"/>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.ShapeFactory.ArrowGeometries">
            <summary>
            Gets the arrow geometries.
            </summary>
            <remarks>See also the example in the <see cref="P:Telerik.Windows.Controls.Diagrams.ShapeFactory.CommonGeometries"/>.</remarks>
            <seealso cref="P:Telerik.Windows.Controls.Diagrams.ShapeFactory.CommonGeometries"/>
            <seealso cref="P:Telerik.Windows.Controls.Diagrams.ShapeFactory.FlowchartGeometries"/>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.TransformExtensions">
            <summary>
            Methods related to the transformation of visuals.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.TransformExtensions.Translate(System.Windows.Media.TransformGroup,System.Nullable{System.Double},System.Nullable{System.Double},System.Boolean)">
            <summary>
            Translates the specified group.
            </summary>
            <param name="group">The group.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="isDelta">If set to <c>true</c> [is delta].</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.TransformExtensions.EnsureTransforms(System.Windows.Media.TransformGroup)">
            <summary>
            Ensures the transforms.
            </summary>
            <param name="group">The group.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.TransformExtensions.GetScaleTransform(System.Windows.Media.TransformGroup)">
            <summary>
            Gets the scale transform.
            </summary>
            <param name="group">The group.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.TransformExtensions.GetRotateTransform(System.Windows.Media.TransformGroup)">
            <summary>
            Gets the rotate transform.
            </summary>
            <param name="group">The group.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.TransformExtensions.GetTranslateTransform(System.Windows.Media.TransformGroup)">
            <summary>
            Gets the translate transform.
            </summary>
            <param name="group">The group.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.TransformExtensions.Transform(System.Windows.Media.GeneralTransform,System.Windows.Rect)">
            <summary>
            Transforms the specified rectangle.
            </summary>
            <param name="tr">The transform.</param>
            <param name="rect">The rectangle.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.TransformExtensions.ToMatrix(System.Windows.Media.Transform)">
            <summary>
            Toes the matrix.
            </summary>
            <param name="transform">The transform.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.TransformExtensions.Invert(System.Windows.Media.Matrix)">
            <summary>
            Inverts the matrix.
            </summary>
            <param name="m">The matrix.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.TransformExtensions.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)">
            <summary>
            Multiplies the given matrices.
            </summary>
            <param name="m1">A matrix.</param>
            <param name="m2">Another matrix.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.TransformExtensions.Transform(System.Windows.Media.Matrix,System.Windows.Rect)">
            <summary>
            Transforms the specified m.
            </summary>
            <param name="m">The m.</param>
            <param name="r">The r.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.Tween">
            <summary>
            Custom "tweening" implementation.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Telerik.Windows.Controls.Diagrams.Tween"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.#ctor(System.Object,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Double}},System.Double,System.Func{System.Double,System.Double,System.Double,System.Double,System.Double})">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.Tween"/> class.
            </summary>
            <param name="targetObject">The target object.</param>
            <param name="definitions">The definitions.</param>
            <param name="duration">The duration.</param>
            <param name="easingFunction">The easing function.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.Start">
            <summary>
            Starts this instance.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.To(System.Object,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Double}},System.Double,System.Func{System.Double,System.Double,System.Double,System.Double,System.Double},System.EventHandler)">
            <summary>
            Tweens to the specified situation.
            </summary>
            <param name="target">The motion object.</param>
            <param name="definitions">The key value.</param>
            <param name="duration">The duration in seconds.</param>
            <param name="easingFunction">The ease function.</param>
            <param name="completed">The completed.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.Linear(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a simple linear tweening, with no easing.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.ExponentialEaseOut(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for an exponential (2^t) easing out: 
            decelerating from zero velocity.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.ExponentialEaseIn(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for an exponential (2^t) easing in: 
            accelerating from zero velocity.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.ExponentialEaseInOut(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for an exponential (2^t) easing in/out: 
            acceleration until halfway, then deceleration.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.ExponentialEaseOutIn(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for an exponential (2^t) easing out/in: 
            deceleration until halfway, then acceleration.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.CircEaseOut(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a circular (sqrt(1-t^2)) easing out: 
            decelerating from zero velocity.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.CircEaseIn(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a circular (sqrt(1-t^2)) easing in: 
            accelerating from zero velocity.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.CircEaseInOut(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a circular (sqrt(1-t^2)) easing in/out: 
            acceleration until halfway, then deceleration.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.CircEaseOutIn(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a circular (sqrt(1-t^2)) easing in/out: 
            acceleration until halfway, then deceleration.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.QuadEaseOut(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a quadratic (t^2) easing out: 
            decelerating from zero velocity.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.QuadEaseIn(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a quadratic (t^2) easing in: 
            accelerating from zero velocity.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.QuadEaseInOut(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a quadratic (t^2) easing in/out: 
            acceleration until halfway, then deceleration.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.QuadEaseOutIn(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a quadratic (t^2) easing out/in: 
            deceleration until halfway, then acceleration.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.SineEaseOut(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a sinusoidal (sin(t)) easing out: 
            decelerating from zero velocity.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.SineEaseIn(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a sinusoidal (sin(t)) easing in: 
            accelerating from zero velocity.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.SineEaseInOut(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a sinusoidal (sin(t)) easing in/out: 
            acceleration until halfway, then deceleration.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.SineEaseOutIn(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a sinusoidal (sin(t)) easing in/out: 
            deceleration until halfway, then acceleration.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.CubicEaseOut(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a cubic (t^3) easing out: 
            decelerating from zero velocity.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.CubicEaseIn(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a cubic (t^3) easing in: 
            accelerating from zero velocity.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.CubicEaseInOut(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a cubic (t^3) easing in/out: 
            acceleration until halfway, then deceleration.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.CubicEaseOutIn(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a cubic (t^3) easing out/in: 
            deceleration until halfway, then acceleration.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.QuartEaseOut(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a quartic (t^4) easing out: 
            decelerating from zero velocity.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.QuartEaseIn(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a quartic (t^4) easing in: 
            accelerating from zero velocity.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.QuartEaseInOut(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a quartic (t^4) easing in/out: 
            acceleration until halfway, then deceleration.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.QuartEaseOutIn(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a quartic (t^4) easing out/in: 
            deceleration until halfway, then acceleration.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.QuintEaseOut(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a quintic (t^5) easing out: 
            decelerating from zero velocity.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.QuintEaseIn(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a quintic (t^5) easing in: 
            accelerating from zero velocity.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.QuintEaseInOut(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a quintic (t^5) easing in/out: 
            acceleration until halfway, then deceleration.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.QuintEaseOutIn(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a quintic (t^5) easing in/out: 
            acceleration until halfway, then deceleration.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.ElasticEaseOut(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for an elastic (exponentially decaying sine wave) easing out: 
            decelerating from zero velocity.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.ElasticEaseIn(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for an elastic (exponentially decaying sine wave) easing in: 
            accelerating from zero velocity.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.ElasticEaseInOut(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for an elastic (exponentially decaying sine wave) easing in/out: 
            acceleration until halfway, then deceleration.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.ElasticEaseOutIn(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for an elastic (exponentially decaying sine wave) easing out/in: 
            deceleration until halfway, then acceleration.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.BounceEaseOut(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a bounce (exponentially decaying parabolic bounce) easing out: 
            decelerating from zero velocity.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.BounceEaseIn(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a bounce (exponentially decaying parabolic bounce) easing in: 
            accelerating from zero velocity.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.BounceEaseInOut(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a bounce (exponentially decaying parabolic bounce) easing in/out: 
            acceleration until halfway, then deceleration.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.BounceEaseOutIn(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a bounce (exponentially decaying parabolic bounce) easing out/in: 
            deceleration until halfway, then acceleration.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.BackEaseOut(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a back (overshooting cubic easing: (s+1)*t^3 - s*t^2) easing out: 
            decelerating from zero velocity.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.BackEaseIn(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a back (overshooting cubic easing: (s+1)*t^3 - s*t^2) easing in: 
            accelerating from zero velocity.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.BackEaseInOut(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a back (overshooting cubic easing: (s+1)*t^3 - s*t^2) easing in/out: 
            acceleration until halfway, then deceleration.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.BackEaseOutIn(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Easing equation function for a back (overshooting cubic easing: (s+1)*t^3 - s*t^2) easing out/in: 
            deceleration until halfway, then acceleration.
            </summary>
            <param name="t">Current time in seconds.</param>
            <param name="b">Starting value.</param>
            <param name="c">Final value.</param>
            <param name="d">Duration of animation.</param>
            <returns>The correct value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.RemoveProperty(System.String)">
            <summary>
            Removes the tweened property and raises the <see cref="E:Telerik.Windows.Controls.Diagrams.Tween.OnComplete"/> event is the last one has been animated.
            </summary>
            <param name="propertyName">Label of the property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.RaiseOnComplete">
            <summary>
            Raises the on complete.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.Tween.OnTick(System.Object,System.EventArgs)">
            <summary>
            Makes the things go tween.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:Telerik.Windows.Controls.Diagrams.Tween.OnComplete">
            <summary>
            Occurs when the 'tweening' motion is complete.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Tween.Fps">
            <summary>
            Gets or sets the frames per second.
            </summary>
            <value>The FPS.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Tween.NumberOfTweenedProperties">
            <summary>
            Gets or sets the number of tweened properties.
            </summary>
            <value>
            The number of tweened properties.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Tween.Duration">
            <summary>
            The duration in seconds.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Tween.IsRunning">
            <summary>
            Gets a value indicating whether this instance is running.
            </summary>
            <value>
            	<c>True</c> if this instance is running; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Tween.TargetObject">
            <summary>
            Gets or sets the motion object being tweened.
            </summary>
            <value>The motion object.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Tween.EasingFunction">
            <summary>
            Gets or sets the easing function.
            </summary>
            <value>The easing function.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Tween.Cache">
            <summary>
            Gets or sets the Cache of the tweened objects.
            </summary>
            <value>The Cache.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.Tween.Timer">
            <summary>
            Gets or sets the Timer which runs the tween motion.
            </summary>
            <value>The Timer.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.TweenProxy">
            <summary>
            Wraps the tween target with the tween info as well as the reflected property for easy access during the 'tweening'.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.TweenProxy.#ctor(System.Object,System.String,System.Double,Telerik.Windows.Controls.Diagrams.Tween)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.TweenProxy"/> class.
            </summary>
            <param name="target">The tween object.</param>
            <param name="propertyName">The name of the animated property.</param>
            <param name="endValue">The end value.</param>
            <param name="tween">The tween.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.TweenProxy.BeginColor">
            <summary>
            Gets the color of the begin.
            </summary>
            <value>
            The color of the begin.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.TweenProxy.BeginValue">
            <summary>
            Gets the begin value.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.TweenProxy.PropertyDifference">
            <summary>
            Gets the property difference.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.TweenProxy.ColorDelta">
            <summary>
            Gets the color delta.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.TweenProxy.Property">
            <summary>
            Gets the property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.TweenProxy.EndValue">
            <summary>
            Gets the end value.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.TweenProxy.Tween">
            <summary>
            Gets the tween.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.TweenProxy.PropertyName">
            <summary>
            Gets the name of the property.
            </summary>
            <value>
            The name of the property.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.TweenProxy.Target">
            <summary>
            Gets the target.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.VisualStates">
            <summary>
            Collects constants related to the visual state of diagram entities.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.Normal">
            <summary>
            The Normal state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.MouseOver">
            <summary>
            The MouseOver state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.MouseOverVisibleConnectors">
            <summary>
            The MouseOverVisibleConnectors state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.MouseOverCollapsedConnectors">
            <summary>
            The Normal state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.Selected">
            <summary>
            The Selected state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.SelectedInGroup">
            <summary>
            The SelectedInGroup state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.SelectedAsGroup">
            <summary>
            The SelectedAsGroup state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.Unselected">
            <summary>
            The Unselected state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.NormalMode">
            <summary>
            The NormalMode state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.NormalEditMode">
            <summary>
            The NormalEditMode state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.TextBoxEditMode">
            <summary>
            The TextBoxEditMode state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.ReadOnly">
            <summary>
            The ReadOnly state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.Enabled">
            <summary>
            The Enabled state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.Disabled">
            <summary>
            The Disabled state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.Focused">
            <summary>
            The Focused state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.Unfocused">
            <summary>
            The Unfocused state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.Active">
            <summary>
            The Active state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.Inactive">
            <summary>
            The Inactive state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.ActiveConnectionAroundShape">
            <summary>
            The ActiveConnectionAroundShape state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.NormalActiveConnectionState">
            <summary>
            The NormalActiveConnectionState state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.ActiveConnectionInsideShape">
            <summary>
            The ActiveConnectionInsideShape state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.InactiveConnectionInsideShape">
            <summary>
            The InactiveConnectionInsideShape state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.ConnectedSource">
            <summary>
            The Connected to Source state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.ConnectedTarget">
            <summary>
            The Connected to Target state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.Disconnected">
            <summary>
            The Disconnected state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.Manipulating">
            <summary>
            The Manipulating state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.NotManipulating">
            <summary>
            The NotManipulating state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.ConnectorsAdornerCollapsed">
            <summary>
            The ConnectorsAdornerCollapsed state.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.VisualStates.ConnectorsAdornerVisible">
            <summary>
            The ConnectorsAdornerVisible state.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadDiagramConnection">
            <summary>
            The RadDiagramConnection is a special ContentControl that serves as a connection between zero, one or two shapes.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.RadDiagramItem">
            <summary>
            Abstract base implementation of the <see cref="T:Telerik.Windows.Diagrams.Core.IDiagramItem"/> interface.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramItem.ZIndexProperty">
            <summary>
            Identifies the ZIndex dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramItem.IsSelectedProperty">
            <summary>
            Identifies the IsSelected dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramItem.PositionProperty">
            <summary>
            Identifies the Position dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramItem.IsInEditModeProperty">
            <summary>
            Identifies the IsInEditMode dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramItem.IsEditableProperty">
            <summary>
            Identifies the IsEditable dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramItem.EditTemplateProperty">
            <summary>
            Identifies the EditTemplate dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramItem.StrokeProperty">
            <summary>
            Identifies the Stroke dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramItem.StrokeThicknessProperty">
            <summary>
            Identifies the StrokeThickness dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramItem.StrokeDashArrayProperty">
            <summary>
            Identifies the StrokeDashArray dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramItem.GroupProperty">
            <summary>
            Identifies the Group dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramItem.IsResizingEnabledProperty">
            <summary>
            Identifies the IsResizingEnabled dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramItem.IsRotationEnabledProperty">
            <summary>
            Identifies the IsRotationEnabled dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramItem.IsDraggingEnabledProperty">
            <summary>
            Identifies the IsDraggingEnabled dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramItem.IsConnectorsManipulationEnabledProperty">
            <summary>
            Identifies the IsConnectorsManipulationEnabled dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramItem.IsManipulationAdornerVisibleProperty">
            <summary>
            Identifies the IsManipulationAdornerVisible dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramItem.AllowDeleteProperty">
            <summary>
            Identifies the AllowDelete dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramItem.AllowCutProperty">
            <summary>
            Identifies the AllowCut dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramItem.AllowCopyProperty">
            <summary>
            Identifies the AllowCopy dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramItem.AllowPasteProperty">
            <summary>
            Identifies the AllowPaste dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramItem.PreviewBeginEditEvent">
            <summary>
            Identifies the PreviewBeginEdit routed event. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramItem.BeginEditEvent">
            <summary>
            Identifies the BeginEdit routed event. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramItem.PreviewEndEditEvent">
            <summary>
            Identifies the PreviewEndEdit routed event. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramItem.EndEditEvent">
            <summary>
            Identifies the EndEdit routed event. 
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.RadDiagramItem"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramItem.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. In simplest terms, this means the method is called just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramItem.Deserialize(Telerik.Windows.Diagrams.Core.SerializationInfo)">
            <summary>
            Deserializes the serialization info in this diagram entity.
            </summary>
            <param name="info">A <see cref="T:Telerik.Windows.Diagrams.Core.SerializationInfo"/> instance.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramItem.Serialize">
            <summary>
            Serializes this instance.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramItem.Telerik#Windows#Diagrams#Core#IDiagramItem#Initialize(Telerik.Windows.Diagrams.Core.IGraphServiceLocator,Telerik.Windows.Diagrams.Core.IGraphInternal)">
            <summary>
            Initializes the specified service locator.
            </summary>
            <param name="serviceLocator">The service locator.</param>
            <param name="graph">The diagram.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramItem.UpdateVisualStates">
            <summary>
            Updates the visual states.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramItem.RefreshIsSelectedInGroup">
            <summary>
            Refreshes the is selected in group property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramItem.Initialize(Telerik.Windows.Diagrams.Core.IGraphServiceLocator,Telerik.Windows.Diagrams.Core.IGraphInternal)">
            <summary>
            Initializes the specified service locator and parent graph.
            </summary>
            <param name="serviceLocator">The service locator.</param>
            <param name="graph">The diagram control.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramItem.OnPropertyChanged(System.String)">
            <summary>
            Called when a property value changed.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramItem.OnIsEditableChanged(System.Boolean,System.Boolean)">
            <summary>
            Called when IsEditable has changed.
            </summary>
            <param name="oldIsEditable">The old value of the property.</param>
            <param name="isEditable">The current value of the property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramItem.OnIsInEditModeChanged(System.Boolean,System.Boolean)">
            <summary>
            Called when IsInEditMode changes.
            </summary>
            <param name="oldIsInEditMode">The old value of the property.</param>
            <param name="isInEditMode">The current value of the property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramItem.OnIsSelectedChanged(System.Boolean,System.Boolean)">
            <summary>
            Called when the IsSelected property has changed.
            </summary>
            <param name="oldValue">The old value of the IsSelected property.</param>
            <param name="newValue">The new value of the IsSelected property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramItem.OnZIndexChanged(System.Int32,System.Int32)">
            <summary>
            Called when the ZIndex changes.
            </summary>
            <param name="newValue">The new value.</param>
            <param name="oldValue">The old value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramItem.OnZIndexChanged(System.Int32)">
            <summary>
            Called when the ZIndex changes.
            </summary>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramItem.OnSizeChanged(System.Windows.Size,System.Windows.Size)">
            <summary>
            Called when the size changes.
            </summary>
            <param name="newSize">The new size.</param>
            <param name="oldSize">The old size.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramItem.OnGroupNameChanged">
            <summary>
            Called when the group name changes.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramItem.OnStrokeThicknessChanged">
            <summary>
            Invoked when the StrokeThickness property has changed.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramItem.OnPositionChanged(System.Windows.Point,System.Windows.Point)">
            <summary>
            Called when position changes.
            </summary>
            <param name="oldPosition">The old position.</param>
            <param name="newPosition">The new position.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramItem.OnPositionCoerced(System.Windows.Point)">
            <summary>
            Called when [position coerced].
            </summary>
            <param name="position">The position.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramItem.OnIsConnectorsManipulationEnabledChanged(System.Boolean,System.Boolean)">
            <summary>
            Called when connectors manipulation changes.
            </summary>
            <param name="newValue">The new value.</param>
            <param name="oldValue">The old value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramItem.OnCreateAutomationPeer">
            <summary>
            Creates a <see cref="T:Telerik.Windows.Controls.Diagrams.AutomationPeers.RadDiagramAutomationPeer"/> peer associated with this object.
            </summary>
            <returns> An instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.AutomationPeers.RadDiagramAutomationPeer"/>.</returns>
        </member>
        <member name="E:Telerik.Windows.Controls.Diagrams.RadDiagramItem.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.Diagrams.RadDiagramItem.ParentGroupChanged">
            <summary>
            Occurs when [group changed].
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.Diagrams.RadDiagramItem.PreviewBeginEdit">
            <summary>
            Occurs before the editing starts.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.Diagrams.RadDiagramItem.BeginEdit">
            <summary>
            Occurs when the editing begins.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.Diagrams.RadDiagramItem.PreviewEndEdit">
            <summary>
            Occurs before the editing ends.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.Diagrams.RadDiagramItem.EndEdit">
            <summary>
            Occurs when the editing ends.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.Telerik#Windows#Diagrams#Core#ISupportVirtualization#VirtualizationState">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.IsSelected">
            <summary>
            Gets or sets whether the diagram entity is selected.
            </summary>
            <value>
              <c>True</c> if selected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.ParentGroup">
            <summary>
            Gets or sets the group.
            </summary>
            <value>
            The group.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.ParentContainer">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.IsInEditMode">
            <summary>
            Gets or sets a value indicating whether this instance is in edit mode.
            </summary>
            <value>
            	<c>True</c> if this instance is in edit mode; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.IsEditable">
            <summary>
            Gets or sets a value indicating whether editing is enabled on this item.
            </summary>
            <remarks>Note that the similar higher-level <see cref="P:Telerik.Windows.Diagrams.Core.IGraph.IsEditable"/> can potentially overrule this setting.</remarks>
            <value>
              <c>True</c> if editing is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.ZIndex">
            <summary>
            Gets or sets the ZIndex of this instance.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.Position">
            <summary>
            Gets or sets the position of the top left corner of the bounding rectangle of the item.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.X">
            <summary>
            Gets or sets the horizontal position of this item.
            </summary>
            <value>
            The x-coordinate.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.Y">
            <summary>
            Gets or sets the vertical position of this item.
            </summary>
            <value>
            The y-coordinate.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.Bounds">
            <summary>
            Gets the bounds.
            </summary>
            <value>
            The bounds.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.IsDynamic">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.Telerik#Windows#Diagrams#Core#ICollapsible#IsCollapsed">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.Id">
            <summary>
            Gets the unique identifier of this entity.
            </summary>
            <value>
            An identifier for this entity.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.EditTemplate">
            <summary>
            Gets or sets the edit template.
            </summary>
            <value>
            The edit template.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.Stroke">
            <summary>
            Gets or sets the stroke of this item.
            </summary>
            <value>
            The stroke.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.StrokeThickness">
            <summary>
            Gets or sets the stroke thickness of this item.
            </summary>
            <value>
            The stroke thickness.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.StrokeDashArray">
            <summary>
            Gets or sets the stroke dash array of this item.
            </summary>
            <value>
            The stroke dash array.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.IsRotationEnabled">
            <summary>
            Gets or sets a value indicating whether rotation is enabled.
            </summary>
            <value>
            	<c>true</c> if this rotation is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.IsResizingEnabled">
            <summary>
            Gets or sets a value indicating whether resizing is enabled.
            </summary>
            <value>
            	<c>True</c> if resizing is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.IsDraggingEnabled">
            <summary>
            Gets or sets a value indicating whether dragging is enabled.
            </summary>
            <value>
              <c>True</c> if dragging is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.IsConnectorsManipulationEnabled">
            <summary>
            Gets or sets a value indicating whether manipulation on the connectors is enabled.
            </summary>
            <value>
              <c>True</c> if manipulation on connectors is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.IsManipulationAdornerVisible">
            <summary>
            Gets or sets a value indicating whether the manipulation adorner is visible.
            </summary>
            <value>
              <c>True</c> if the manipulation adorner is visible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.AllowDelete">
            <summary>
            Gets or sets a value indicating whether deleting is allowed.
            </summary>
            <value>
              <c>True</c> if deleting is allowed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.AllowCut">
            <summary>
            Gets or sets a value indicating whether cutting is allowed.
            </summary>
            <value>
              <c>True</c> if cutting is allowed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.AllowCopy">
            <summary>
            Gets or sets a value indicating whether copying is allowed.
            </summary>
            <value>
              <c>True</c> if copying is allowed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.AllowPaste">
            <summary>
            Gets or sets a value indicating whether pasting is allowed.
            </summary>
            <value>
              <c>True</c> if pasting is allowed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.Services">
            <summary>
            Gets the diagram's services.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.IsSelectedInGroup">
            <summary>
            Gets a value indicating whether this instance is selected in group.
            </summary>
            <value>
            	<c>True</c> if this item is selected in group; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.Diagram">
            <summary>
            Gets the owning diagram of this instance.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.ServiceLocator">
            <summary>
            Gets the service locator.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.ActualSize">
            <summary>
            The actual size of the item.
            </summary>;
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramItem.IsServiceManipulation">
            <summary>
            Gets whether any service is manipulating at the moment.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagramConnection.ConnectionTypeProperty">
            <summary>
            Identifies the ConnectionType dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagramConnection.SourceConnectorPositionProperty">
            <summary>
            Identifies the SourceConnectorPosition dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagramConnection.TargetConnectorPositionProperty">
            <summary>
            Identifies the TargetConnectorPosition dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagramConnection.SourceCapTypeProperty">
            <summary>
            Identifies the SourceCapType dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagramConnection.TargetCapTypeProperty">
            <summary>
            Identifies the TargetCapType dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagramConnection.SourceCapSizeProperty">
            <summary>
            Identifies the SourceCapSize dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagramConnection.TargetCapSizeProperty">
            <summary>
            Identifies the TargetCapSize dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagramConnection.SourceProperty">
            <summary>
            Identifies the Source dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagramConnection.TargetProperty">
            <summary>
            Identifies the TargetProperty dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagramConnection.BezierTensionProperty">
            <summary>
            Identifies the BezierTensionProperty dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagramConnection.StartPointProperty">
            <summary>
            Identifies the StartPoint dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagramConnection.EndPointProperty">
            <summary>
            Identifies the EndPoint dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagramConnection.IsAutoUpdateSuppressedProperty">
            <summary>
            Identifies the IsAutoUpdateSuppressedProperty.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagramConnection.ConnectorCenterPointProperty">
            <summary>
            Identifies the ConnectorCenterPoint.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagramConnection.RouteProperty">
            <summary>
            Identifies the RouteProperty property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagramConnection.UseFreeConnectorsProperty">
            <summary>
            Identifies the <see cref="P:Telerik.Windows.Controls.RadDiagramConnection.UseFreeConnectors"/> property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadDiagramConnection"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.GetIsAutoUpdateSuppressed(System.Windows.DependencyObject)">
            <summary>
            Gets the IsUpdateNeeded.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.SetIsAutoUpdateSuppressed(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the IsUpdateNeeded.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.GetConnectorCenterPoint(System.Windows.DependencyObject)">
            <summary>
            Sets the ConnectorCenterPoint.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.SetConnectorCenterPoint(System.Windows.DependencyObject,System.Windows.Point)">
            <summary>
            Sets the ConnectorCenterPoint.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.Deserialize(Telerik.Windows.Diagrams.Core.SerializationInfo)">
            <summary>
            Deserializes the serialization info in this diagram entity.
            </summary>
            <param name="info">A <see cref="T:Telerik.Windows.Diagrams.Core.SerializationInfo"/> instance.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.Serialize">
            <summary>
            Serializes this instance.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate" />. In simplest terms, this means the method is called just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.AddConnectionPoint(System.Windows.Point)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.InsertConnectionPoint(System.Windows.Point,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.Attach(Telerik.Windows.Diagrams.Core.IConnector,Telerik.Windows.Diagrams.Core.IConnector)">
            <summary>
            Attaches the connection to specific source and target.
            </summary>
            <param name="source">The source.</param>
            <param name="target">The target.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.FetchZConnections(System.Boolean,System.Nullable{System.Windows.Rect})">
            <summary>
            Returns all connections below or above the current connection that intersect with the given bounds.
            </summary>
            <param name="below">If set to <c>true</c> the connections below current one will be returned, otherwise the ones above.</param>
            <param name="bounds">The bounds. If null the connection's Bounds are used.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.SetBezierHandles(System.Windows.Point,System.Windows.Point)">
            <summary>
            Sets the Bezier handle positions. The coordinates are absolute coordinates with respect to the diagramming surface.
            </summary>
            <param name="startHandle">The start handle position.</param>
            <param name="endHandle">The end handle position.</param>
            <exception cref="T:System.Exception">The connection is not a Bezier connection and has no handles.</exception>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.GetCrossings">
            <summary>
            Returns the information related to the crossing of this connection with other connections.
            </summary>
            <remarks>
            <list type="bullet">
            <item>
            The positions in the returned data are local coordinates with respect to the bounding rectangle of this connection. 
            </item> 
            <item>The returned data contains a collection of points for each segment. This collection starts with the startpoint of the segment and ends with the endpoint of the segment. If there is a gap or crossing then for each gap a pair of points will
            denote the begin/end of the gap. So, each segment collection has always at least two points.</item>
            </list>
            </remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.Telerik#Windows#Diagrams#Core#IConnection#UpdateDeferredGeometry(System.Windows.Point,System.Windows.Point,System.Windows.Point[])">
            <summary>
            Updates the deferred geometry.
            </summary>
            <param name="start">The start point of the connection.</param>
            <param name="end">The end point of the connection.</param>
            <param name="points">The intermediate connection points.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.Telerik#Windows#Controls#IThemable#ResetTheme">
            <summary>
            Resets the theme.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.RefreshIsSelectedInGroup">
            <inheritdoc /> 
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.OnInitialized(System.EventArgs)">
            <summary>
            This virtual method in called when IsInitialized is set to true and it raises an Initialized event.
            </summary> 
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.OnIsInEditModeChanged(System.Boolean,System.Boolean)">
            <summary>
            Called when IsInEditMode changes.
            </summary>
            <param name="oldIsInEditMode">The old value of the property.</param>
            <param name="isInEditMode">The current value of the property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.OnStrokeThicknessChanged">
            <summary>
            Invoked when the StrokeThickness property has changed.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.OnPositionCoerced(System.Windows.Point)">
            <summary>
            Called when [position coerced].
            </summary>
            <param name="position">The new position.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.OnIsSelectedChanged(System.Boolean,System.Boolean)">
            <summary>
            Called when the IsSelected property has changed.
            </summary>
            <param name="oldValue">The old value of the IsSelected property.</param>
            <param name="newValue">The new value of the IsSelected property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.OnCreateAutomationPeer">
            <inheritdoc /> 
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.OnIsConnectorsManipulationEnabledChanged(System.Boolean,System.Boolean)">
            <inheritdoc /> 
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.UpdateDeferredGeometry(System.Windows.Point,System.Windows.Point,System.Windows.Point[])">
            <summary>
            Updates the deferred geometry.
            </summary>
            <param name="start">The start point of the connection.</param>
            <param name="end">The end point of the connection.</param>
            <param name="points">The intermediate connection points.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.Update(System.Boolean)">
            <summary>
            Updates this instance.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.OnSourceChanged">
            <summary>
            Called when the source of the <see cref="T:Telerik.Windows.Controls.RadDiagramConnection"/> is changed.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.OnTargetChanged">
            <summary>
            Called when the target of the <see cref="T:Telerik.Windows.Controls.RadDiagramConnection"/> is changed.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.PositionEditElementOverride">
            <summary>
            When overridden, positions the editing element for the <see cref="T:Telerik.Windows.Controls.RadDiagramConnection"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.UpdateGeometryOverride">
            <summary>
            When overridden, provides the geometry for the connection.
            </summary>
            <remarks>This is called whenever the connection is redrawn.</remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.CreateGeometry(Telerik.Windows.Diagrams.Core.BridgeType,System.Boolean)">
            <summary>
            Creates the connection's geometry.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.ConnectionTypeChanged(Telerik.Windows.Diagrams.Core.ConnectionType,Telerik.Windows.Diagrams.Core.ConnectionType)">
            <summary>
            Invoked on connection type changed.
            </summary>
            <param name="newValue">The new value.</param>
            <param name="oldValue">The old value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.OnSourceConnectorPositionChanged(System.String,System.String)">
            <summary>
            Called when on source connector position changed.
            </summary>
            <param name="newPosition">The new position.</param>
            <param name="oldPosition">The old position.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.OnTargetConnectorPositionChanged(System.String,System.String)">
            <summary>
            Called when on target connector position changed.
            </summary>
            <param name="newPosition">The new position.</param>
            <param name="oldPosition">The old position.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.OnRouteChanged(System.Boolean,System.Boolean)">
            <summary>
            Called when route changed property change.
            </summary>
            <param name="newValue">The new value.</param>
            <param name="oldValue">The old value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.OnStartPointChanged(System.Windows.Point,System.Windows.Point)">
            <summary>
            Called on start point changed.
            </summary>
            <param name="newValue">The new value.</param>
            <param name="oldValue">The old value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.OnEndPointChanged(System.Windows.Point,System.Windows.Point)">
            <summary>
            Called on end point changed.
            </summary>
            <param name="newValue">The new value.</param>
            <param name="oldValue">The old value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.CreateSourceCapGeometry(System.Windows.Point,System.Windows.Point,System.Windows.Point@)">
            <summary>
            Creates the source cap geometry.
            </summary>
            <param name="startPoint">The start point.</param>
            <param name="endPoint">The end point.</param>
            <param name="baseLineStart">The new start of the base line.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.CreateTargetCapGeometry(System.Windows.Point,System.Windows.Point,System.Windows.Point@)">
            <summary>
            Creates the target cap geometry.
            </summary>
            <param name="startPoint">The start point.</param>
            <param name="endPoint">The end point.</param>
            <param name="baseLineEnd">The new end of the base line.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.OnZIndexChanged(System.Int32,System.Int32)">
            <summary>
            Called when the ZIndex changes.
            </summary>
            <param name="newValue">The new value.</param>
            <param name="oldValue">The old value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.GetBezierAutoHandleOffset(Telerik.Windows.Diagrams.Core.IShape,System.String)">
            <summary>
            Gets the Bezier handle offset in function of the connector's position.
            </summary>
            <remarks>
            <item> The default offset is defined in the <see cref="P:Telerik.Windows.Diagrams.Core.DiagramConstants.BezierAutoOffset"/>.</item> 
            <item> This method accepts the predefined <see cref="T:Telerik.Windows.Diagrams.Core.ConnectorPosition"/> enumeration but will also 'guess' anything containing the words 'left', 'up' and so on. </item>
            </remarks>
            <param name="shape">The shape to which the connection is attached.</param>
            <param name="connectorName">Name of the connector.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.OnConnectionTypePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the <see cref="P:Telerik.Windows.Controls.RadDiagramConnection.ConnectionType"/> has changed.
            </summary>
            <param name="d">The dependency object which was modified. This is supposedly a <see cref="T:Telerik.Windows.Controls.RadDiagramConnection"/>.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
            <exception cref="T:System.Exception">This connection type is since Q3.2012 obsolete and should be replaced by the Polyline type. A polyline with only a start and end point is equivalent to the Straight connection type.</exception>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.ResolveSourceConnector">
            <summary>
            Will attempt to resolves the source connector on the basis of the set <see cref="P:Telerik.Windows.Controls.RadDiagramConnection.SourceConnectorPosition"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.ResolveTargetConnector">
            <summary>
            Will attempt to resolves the target connector on the basis of the set <see cref="P:Telerik.Windows.Controls.RadDiagramConnection.TargetConnectorPosition"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.EnsureBezierPoints">
            <summary>
            Ensures that, for the given <see cref="P:Telerik.Windows.Controls.RadDiagramConnection.ConnectionType"/>, the intermediate connection points are present.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.UpdateAutoBezierHandles">
            <summary>
            Updates the Bezier handles according to the position of the endpoints.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.CalculateAutoConnectors(System.Boolean,System.Boolean)">
            <summary>
            Calculates the connector to which this connection is attached if the <see cref="F:Telerik.Windows.Diagrams.Core.ConnectorPosition.Auto"/> connector is used.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.EnsureZIndex(Telerik.Windows.Diagrams.Core.IShape)">
            <summary>
            Ensures the connection is on top if attached to container.
            </summary>
            <param name="shape">The shape.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.CalculateEdittingPoint">
            <summary>
            Calculates the point where the editing of the label occurs.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.ResetCrossings(System.Windows.Rect)">
            <summary>
            Resets the associated crossing information causing it
            to be recalculated the next time it is required.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramConnection.ResetCrossings">
            <summary>
            Resets the associated crossing information causing it
            to be recalculated the next time it is required.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagramConnection.ManipulationPointActivated">
            <summary>
            Occurs when a manipulation point of the <see cref="T:Telerik.Windows.Controls.RadDiagramConnection"/> is activated.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramConnection.IsModified">
            <summary>
            Gets or sets a value indicating whether the connection has been modified.
            </summary>
            <remarks>
              <list type="bullet">
              <item> This property is set to <c>true</c> as soon as you add/remove intermediate points or manually move one of the Bezier handles. This means that the automatically calculated handle positions in function of the connector will be halted. You re-enable this auto-handle
            calculation by re-setting this property to <c>false</c>.
              </item>
              <item> If this property is <c>true</c> the connection won't be routed and no automatic reflexive points will be added. You can re-enable this by re-setting this property to <c>false</c>.
              </item>
              </list>
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramConnection.Adorner">
            <summary>
            The connection adorner which helps manipulating this connection.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramConnection.SegmentCount">
            <summary>
            Gets the number of segments this connection has.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramConnection.Bounds">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramConnection.Geometry">
            <summary>
            Gets the geometry of the connection.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramConnection.ConnectionType">
            <summary>
            Gets or sets the type of the connection.
            </summary>
            <value>
            The type of the connection.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramConnection.BezierTension">
            <summary>
            Gets or sets the Bezier tension.
            </summary>
            <value>
            A value or zero turns the Bezier connection into a straight line, a value of one and above increase the sharpness of the Bezier curve.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramConnection.Source">
            <summary>
            Gets or sets the source.
            </summary>
            <value>
            The source.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramConnection.Target">
            <summary>
            Gets or sets the target.
            </summary>
            <value>
            The target.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramConnection.EndPoint">
            <summary>
            Gets or sets the position of where this connection ends.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramConnection.StartPoint">
            <summary>
            Gets or sets the position of where this connection starts.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramConnection.SourceConnectorPosition">
            <summary>
            Gets or sets the source connector position.
            </summary>
            <value>
            The source connector position.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramConnection.SourceConnectorResult">
            <summary>
            Gets the source connector result.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramConnection.TargetConnectorResult">
            <summary>
            Gets the target connector result.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramConnection.TargetConnectorPosition">
            <summary>
            Gets or sets the target connector position.
            </summary>
            <value>
            The target connector position.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramConnection.SourceCapType">
            <summary>
            Gets or sets the type of the source cap.
            </summary>
            <value>
            The type of the source cap.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramConnection.TargetCapType">
            <summary>
            Gets or sets the type of the target cap.
            </summary>
            <value>
            The type of the target cap.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramConnection.SourceCapSize">
            <summary>
            Gets or sets the size of the source cap.
            </summary>
            <value>
            The size of the source cap.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramConnection.TargetCapSize">
            <summary>
            Gets or sets the size of the target cap.
            </summary>
            <value>
            The size of the target cap.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramConnection.ConnectionPoints">
            <summary>
            Gets the connection points of the connection.
            </summary>
            <remarks>The positions are absolute coordinates with respect to the canvas.</remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramConnection.ManipulationPoints">
            <summary>
            Gets the manipulation points, which are equal to the adorner's connection editing points.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramConnection.Route">
            <summary>
            Gets or sets whether this connection will be automatically routed. 
            </summary>
            <remarks>Setting this property effects only <see cref="F:Telerik.Windows.Diagrams.Core.ConnectionType.Spline"/> and <see cref="F:Telerik.Windows.Diagrams.Core.ConnectionType.Polyline"/> connections.</remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramConnection.UseFreeConnectors">
            <summary>
            Gets or sets whether this connection will choose free connectors when attaching to shape with Source or TargetConnectorPosition Auto.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramConnection.EdittingPoint">
            <summary>
            Gets or sets the editing point of the connection. This points indicates the position of the editing element.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramConnection.IsGlindingConnectorPointsUpdateFinished">
            <summary>
            Updating Start/EndPoint when using GlidingConnectors and Routing might lead to circular dependency.
            To avoid this we can separate the gliding connectors update process from routing update process.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadDiagramContainerShape">
            <summary>
             A shape which holds other shapes much like an items container.
            </summary>
            <remarks>
            <list type="bullet">
            <item> The parent shape container of a shape can be obtained through the <see cref="M:Telerik.Windows.Controls.RadDiagramContainerShape.GetParentContainer(System.Windows.DependencyObject)"/>attached  property.</item> 
            <item> This is a bindable items container, the items are not necessarily shapes or diagram items, they can be arbitrary objects. The container can be obtained through <see cref="M:Telerik.Windows.Controls.RadDiagram.GetContainerFromItem(System.Object)"/>. </item>
            </list>
            </remarks>
        </member>
        <member name="T:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase">
            <summary>
            Abstract base implementation of the <see cref="T:Telerik.Windows.Diagrams.Core.IShape"/> interface.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.IsActiveConnectionInsideProperty">
            <summary>
            Identifies the IsActiveConnectionInside dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.RotationAngleProperty">
            <summary>
             Identifies the RotationAngle dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.ConnectorStyleProperty">
            <summary>
             Identifies the ConnectorStyle dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.UseDefaultConnectorsProperty">
            <summary>
             Identifies the UseDefaultConnectors dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.UseGlidingConnectorProperty">
            <summary>
             Identifies the UseGlidingConnector dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.GlidingStyleProperty">
            <summary>
             Identifies the GlidingStyle dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.ConnectorsProperty">
            <summary>
            Identifies the ConnectorsProperty dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.Serialize">
            <summary>
            Serializes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.GetXml">
            <summary>
            Gets the XML representation of this shape.
            </summary>
            <remarks>
            <para>This is based on the <see cref="M:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.Serialize">Serialize </see> method; if you
            wish to alter the returned XML you need to override that method.</para>
            </remarks>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.OnApplyTemplate">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.Deserialize(Telerik.Windows.Diagrams.Core.SerializationInfo)">
            <summary>
            Deserializes the serialization info in this diagram entity.
            </summary>
            <param name="info">A <see cref="T:Telerik.Windows.Diagrams.Core.SerializationInfo"/> instance.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.AttemptToSetGlidingConnector(Telerik.Windows.Diagrams.Core.IShape)">
            <summary>
            Attempts to set the gliding connector on the shape or throws an exception is not possible.
            </summary>
            <remarks>This is to make the creation of gliding connections easier for the user, otherwise an explicit change of connector configuration is necessary before switching to gliding connections.</remarks>
            <seealso cref="P:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.UseGlidingConnector"/>
            <param name="shape">The shape.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.AttemptToSetDefaultConnector(Telerik.Windows.Diagrams.Core.IShape)">
            <summary>
            Attempts to set the default connector on the shape or throws an exception is not possible.
            </summary>
            <remarks>This is to make the creation of normal connections easier for the user, otherwise an explicit change of connector configuration is necessary before switching between gliding and normal connections.</remarks>
            <seealso cref="P:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.UseDefaultConnectors"/>
            <param name="shape">The shape.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.UpdateVisualStates">
            <summary>
            Updates the visual states.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.OnIsInEditModeChanged(System.Boolean,System.Boolean)">
            <summary>
            Called when IsInEditMode changes.
            </summary>
            <param name="oldIsInEditMode">The old value of the property.</param>
            <param name="isInEditMode">The current value of the property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.OnRotationAngleChanged(System.Double,System.Double)">
            <summary>
            Called when the rotation angle has changed.
            </summary>
            <param name="newValue">The new value.</param>
            <param name="oldValue">The old value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.OnPositionChanged(System.Windows.Point,System.Windows.Point)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.EnsureDefaultConnectors">
            <summary>
            Ensures that the known/predefined/default connectors are added to the shape.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.EnsureGlidingConnector">
            <summary>
            Ensures that the gliding connector is added to the shape.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.RotationAngle">
            <summary>
            Gets or sets the rotation angle.
            </summary>
            <value>
            The rotation angle.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.Connectors">
            <summary>
            Gets the connectors of this shape.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.ActualBounds">
            <summary>
            Gets the actual bounds.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.ConnectorStyle">
            <summary>
            Gets or sets the connector style.
            </summary>
            <value>
            The connector style.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.IncomingLinks">
            <summary>
            Gets the incoming links.
            </summary>
            <value>
            The incoming links.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.OutgoingLinks">
            <summary>
            Gets the outgoing links.
            </summary>
            <value>
            The outgoing links.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.Telerik#Windows#Diagrams#Core#IShape#IsConnectorsAdornerVisible">
            <summary>
            Gets or sets a value indicating whether this instance is connectors adorner visible.
            </summary>
            <value>
            	<c>true</c> if this instance is connectors adorner visible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.UseDefaultConnectors">
            <summary>
            Gets or sets whether the default connectors should be defined on the shape.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.UseGlidingConnector">
            <summary>
            Gets or sets whether the gliding connector should be defined on the shape.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.GlidingStyle">
            <summary>
            Gets or sets the style of outline the gliding connection should follow.
            </summary>
            <remarks>This property has only an effect if the <see cref="P:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.UseGlidingConnector"/> is set to <c>true</c>.</remarks>
            <seealso cref="T:Telerik.Windows.Diagrams.Core.ConnectorPosition"/>
            <seealso cref="P:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.UseGlidingConnector"/>
        </member>
        <member name="P:Telerik.Windows.Controls.Diagrams.RadDiagramShapeBase.Transform">
            <summary>
            Gets the transform.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagramContainerShape.ItemsProperty">
            <summary>
            Identifies the Items dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagramContainerShape.ItemsSourceProperty">
            <summary>
            Identifies the ItemsSource dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagramContainerShape.IsDropEnabledProperty">
            <summary>
            Identifies the IsDropEnabled dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagramContainerShape.IsCollapsibleProperty">
            <summary>
            Identifies the IsCollapsibleProperty dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagramContainerShape.IsCollapsedProperty">
            <summary>
            Identifies the IsCollapsedProperty dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagramContainerShape.CollapsedContentProperty">
            <summary>
            Identifies the CollapsedContentProperty dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagramContainerShape.CollapsedContentTemplateProperty">
            <summary>
            Identifies the CollapsedContentTemplateProperty dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagramContainerShape.IsCollapsedChangedEvent">
            <summary>
            Identifies the IsCollapsedChanged routed event.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagramContainerShape.isInnerChange">
            <summary>
            Keeps track of whether an ItemsSource has been assigned.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramContainerShape.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadDiagramContainerShape"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramContainerShape.GetParentContainer(System.Windows.DependencyObject)">
            <summary>
            Gets the parent container, if any.
            </summary>
            <param name="obj">An object which sits possibly in a container.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramContainerShape.FitToChildren">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramContainerShape.Deserialize(Telerik.Windows.Diagrams.Core.SerializationInfo)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramContainerShape.Serialize">
            <summary>
            Serializes this instance.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramContainerShape.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. In simplest terms, this means the method is called just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramContainerShape.Telerik#Windows#Controls#IThemable#ResetTheme">
            <summary>
            Resets the theme.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramContainerShape.Telerik#Windows#Diagrams#Core#IDragDropAware#OnDrop(Telerik.Windows.Diagrams.Core.DragItemsEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramContainerShape.Telerik#Windows#Diagrams#Core#IDragDropAware#OnDragLeave(Telerik.Windows.Diagrams.Core.DragItemsEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramContainerShape.Telerik#Windows#Diagrams#Core#IDragDropAware#OnDragEnter(Telerik.Windows.Diagrams.Core.DragItemsEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramContainerShape.Telerik#Windows#Diagrams#Core#IContainerShape#AddItem(System.Object,System.Nullable{System.Windows.Point})">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramContainerShape.Telerik#Windows#Diagrams#Core#IContainerShape#AddItems(System.Collections.Generic.IEnumerable{System.Object})">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramContainerShape.Telerik#Windows#Diagrams#Core#IContainerShape#RemoveItems(System.Collections.Generic.IEnumerable{System.Object})">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramContainerShape.Telerik#Windows#Diagrams#Core#IContainerShape#RemoveItem(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramContainerShape.OnDrop(Telerik.Windows.Diagrams.Core.DragItemsEventArgs)">
            <summary>
            Called on drop.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramContainerShape.OnDragEnter(Telerik.Windows.Diagrams.Core.DragItemsEventArgs)">
            <summary>
            Called on drag enter.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramContainerShape.OnDragLeave(Telerik.Windows.Diagrams.Core.DragItemsEventArgs)">
            <summary>
            Called on drag leave.
            </summary>
            <param name="args">The <see cref="T:Telerik.Windows.Diagrams.Core.DragItemsEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramContainerShape.OnIsDropEnabledPropertyChanged(System.Boolean,System.Boolean)">
            <summary>
            Called when the <see cref="P:Telerik.Windows.Controls.RadDiagramContainerShape.IsDropEnabled"/> property changed.
            </summary>
            <param name="oldValue">The old value of the property.</param>
            <param name="newValue">The new value of the property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramContainerShape.OnContainerItemsDeserialized">
            <summary>
            Called when the items in the containers have been deserialized and added to the <see cref="P:Telerik.Windows.Controls.RadDiagramContainerShape.Items"/> collection.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramContainerShape.Initialize(Telerik.Windows.Diagrams.Core.IGraphServiceLocator,Telerik.Windows.Diagrams.Core.IGraphInternal)">
            <summary>
            Initializes the specified service locator and parent graph.
            </summary>
            <param name="serviceLocator">The service locator.</param>
            <param name="graph">The diagram control.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramContainerShape.OnZIndexChanged(System.Int32,System.Int32)">
            <summary>
            Called when the ZIndex changes.
            </summary>
            <param name="newValue">The new value.</param>
            <param name="oldValue">The old value.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramContainerShape.OnPropertyChanged(System.String)">
            <summary>
            Called when a property value changed.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramContainerShape.OnSizeChanged(System.Windows.Size,System.Windows.Size)">
            <summary>
            Called when the size changes.
            </summary>
            <param name="newSize">The new size.</param>
            <param name="oldSize">The old size.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramContainerShape.OnPositionChanged(System.Windows.Point,System.Windows.Point)">
            <summary>
            Called when the position of this container changes.
            </summary>
            <param name="oldPosition">The old position.</param>
            <param name="newPosition">The new position.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramContainerShape.UpdateChildrenPositions(System.Windows.Point,System.Windows.Point)">
            <summary>
            Updates the children positions on container position change.
            </summary>
            <param name="oldPosition">The old position.</param>
            <param name="newPosition">The new position.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramContainerShape.OnInitialized(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.FrameworkElement.Initialized" /> event. This method is invoked whenever <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> is set to true internally.
            </summary>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramContainerShape.OnCreateAutomationPeer">
            <inheritdoc />
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramContainerShape.OnItemsCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Called when the items collection has been altered. 
            </summary>
            <remarks>Note that the items are not necessarily shapes, but can be arbitrary objects.</remarks>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramContainerShape.OnChildBoundsChanged(Telerik.Windows.Diagrams.Core.IDiagramItem)">
            <summary>
            Called when [child bounds changed].
            </summary>
            <param name="diagramItem">The diagram item.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramContainerShape.OnManagerDrop(System.Object,Telerik.Windows.DragDrop.DragEventArgs)">
            <summary>
            Called on drag drop manager drop.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Telerik.Windows.DragDrop.DragEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramContainerShape.OnIsCollapsedChanged(System.Boolean,System.Boolean)">
            <summary>
            Called on is collapsed changed.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramContainerShape.CalculateShapeBounds(System.Windows.Rect)">
            <summary>
            Calculates the shape bounds from the given content bounds.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramContainerShape.CalculateContentBounds(System.Windows.Rect)">
            <summary>
            Calculates the content bounds from the given shape bounds.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramContainerShape.CalculateMinShapeBounds">
            <summary>
            Calculates the minimum shape bounds.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramContainerShape.AddItem(System.Object,System.Nullable{System.Windows.Point})">
            <summary>
            Adds item to the Items collection.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramContainerShape.AddItems(System.Collections.Generic.IEnumerable{System.Object},System.Boolean)">
            <summary>
            Adds items to the Items collection.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramContainerShape.RemoveItem(System.Object)">
            <summary>
            Removes item from the Items collection.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramContainerShape.RemoveItems(System.Collections.Generic.IEnumerable{System.Object},System.Boolean)">
            <summary>
            Removes items from the Items collection.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramContainerShape.EnsureZIndices">
            <summary>
            This ensure that the children never get hidden behind the container.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramContainerShape.UpdateShapeBounds(System.Windows.Rect)">
            <summary>
            Updates the shape bounds on content bounds change.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagramContainerShape.IsCollapsedChanged">
            <summary>
            Occurs when the container IsCollapsed property has changed.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramContainerShape.MinBounds">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramContainerShape.IsCollapsed">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramContainerShape.IsCollapsible">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramContainerShape.Items">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramContainerShape.ItemsSource">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramContainerShape.IsDropEnabled">
            <summary>
            Gets or sets whether drag-drop new items or removing items is enabled.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramContainerShape.Children">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramContainerShape.ContentBounds">
            <inheritdoc />
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramContainerShape.CollapsedContentTemplate">
            <summary>
            Gets or sets the content template of the collapsed state placeholder of the container.
            </summary>
            <value>
            The content.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramContainerShape.CollapsedContent">
            <summary>
            Gets or sets the content of the collapsed state placeholder of the container.
            </summary>
            <value>
            The content.
            </value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramContainerShape.IsDropPossible">
            <summary>
            Gets a value indicating whether drop operation is possible.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadDiagramShape">
            <summary>
             A shape with geometric content.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDiagramShape.GeometryProperty">
            <summary>
            The <see cref="P:Telerik.Windows.Controls.RadDiagramShape.Geometry"/> dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramShape.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadDiagramShape"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramShape.Serialize">
            <summary>
            Serializes this shape.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramShape.Deserialize(Telerik.Windows.Diagrams.Core.SerializationInfo)">
            <summary>
            Deserializes the specified info.
            </summary>
            <param name="info">The info.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramShape.ResetTheme">
            <summary>
            Resets the theme.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramShape.OnInitialized(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.FrameworkElement.Initialized"/> event. This method is invoked whenever <see cref="P:System.Windows.FrameworkElement.IsInitialized"/> is set to true internally.
            </summary>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramShape.OnCreateAutomationPeer">
            <inheritdoc /> 
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramShape.OnGeometryChanged(System.Windows.Media.Geometry,System.Windows.Media.Geometry)">
            <summary>
            Called when [geometry changed].
            </summary>
            <param name="oldGeometry">The old geometry.</param>
            <param name="newGeometry">The new geometry.</param> 
        </member>
        <member name="E:Telerik.Windows.Controls.RadDiagramShape.GeometryChanged">
            <summary>
            Occurs when [geometry changed].
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDiagramShape.Geometry">
            <summary>
            Gets or sets the geometry this shape contains.
            </summary>
            <value>
            The geometry or figure.
            </value>
        </member>
        <member name="T:Telerik.Windows.Controls.RadDiagramTextShape">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramTextShape.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadDiagramTextShape"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramTextShape.ResetTheme">
            <summary>
            Resets the theme.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramTextShape.OnInitialized(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.FrameworkElement.Initialized"/> event. This method is invoked whenever <see cref="P:System.Windows.FrameworkElement.IsInitialized"/> is set to true internally.
            </summary>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDiagramTextShape.OnCreateAutomationPeer">
            <inheritdoc />
        </member>
    </members>
</doc>
