// <auto-generated />
using System;
using Cvl.ApplicationServer.Core.Database.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cvl.ApplicationServer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211123233538_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Cvl.ApplicationServer.Core.Model.Processes.ProcessActivity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("ActivityState")
                        .HasColumnType("int");

                    b.Property<bool>("Archival")
                        .HasColumnType("bit");

                    b.Property<string>("ClientConnectionData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientIpPort")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MemberName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PreviewRequestJson")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PreviewResponseJson")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<long>("ProcessActivityDataId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProcessInstanceId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ResponseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProcessActivityDataId");

                    b.HasIndex("ProcessInstanceId");

                    b.ToTable("ProcessActivity", "Processes");
                });

            modelBuilder.Entity("Cvl.ApplicationServer.Core.Model.Processes.ProcessActivityData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("Archival")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestFullSerialization")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponseFullSerialization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponseJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponseType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProcessActivityData", "Processes");
                });

            modelBuilder.Entity("Cvl.ApplicationServer.Core.Model.Processes.ProcessDiagnosticData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("Archival")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastError")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastErrorPreview")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastRequestPreview")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastResponsePreview")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("NumberOfActivities")
                        .HasColumnType("bigint");

                    b.Property<long>("NumberOfErrors")
                        .HasColumnType("bigint");

                    b.Property<long>("NumberOfSteps")
                        .HasColumnType("bigint");

                    b.Property<long>("ProcessInstanceId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProcessInstanceId")
                        .IsUnique();

                    b.ToTable("ProcessDiagnosticData", "Processes");
                });

            modelBuilder.Entity("Cvl.ApplicationServer.Core.Model.Processes.ProcessInstance", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("Archival")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MainThreadState")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProcessNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Step")
                        .HasColumnType("int");

                    b.Property<string>("StepDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StepName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProcessInstance", "Processes");
                });

            modelBuilder.Entity("Cvl.ApplicationServer.Core.Model.Processes.ProcessStateData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("Archival")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ProcessInstanceId")
                        .HasColumnType("bigint");

                    b.Property<string>("ProcessStateFullSerialization")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProcessInstanceId")
                        .IsUnique();

                    b.ToTable("ProcessStateData", "Processes");
                });

            modelBuilder.Entity("Cvl.ApplicationServer.Core.Model.ProcessStepHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("Archival")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ProcessInstanceId")
                        .HasColumnType("bigint");

                    b.Property<string>("Step")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StepDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProcessInstanceId");

                    b.ToTable("ProcessStepHistory", "Processes");
                });

            modelBuilder.Entity("Cvl.ApplicationServer.Core.Model.Processes.ProcessActivity", b =>
                {
                    b.HasOne("Cvl.ApplicationServer.Core.Model.Processes.ProcessActivityData", "ProcessActivityData")
                        .WithMany()
                        .HasForeignKey("ProcessActivityDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cvl.ApplicationServer.Core.Model.Processes.ProcessInstance", "ProcessInstance")
                        .WithMany()
                        .HasForeignKey("ProcessInstanceId");

                    b.Navigation("ProcessActivityData");

                    b.Navigation("ProcessInstance");
                });

            modelBuilder.Entity("Cvl.ApplicationServer.Core.Model.Processes.ProcessDiagnosticData", b =>
                {
                    b.HasOne("Cvl.ApplicationServer.Core.Model.Processes.ProcessInstance", "ProcessInstance")
                        .WithOne("ProcessDiagnosticData")
                        .HasForeignKey("Cvl.ApplicationServer.Core.Model.Processes.ProcessDiagnosticData", "ProcessInstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProcessInstance");
                });

            modelBuilder.Entity("Cvl.ApplicationServer.Core.Model.Processes.ProcessInstance", b =>
                {
                    b.OwnsOne("Cvl.ApplicationServer.Core.Model.ProcessBusinessData", "BusinessData", b1 =>
                        {
                            b1.Property<long>("ProcessInstanceId")
                                .HasColumnType("bigint");

                            b1.Property<string>("ClientName")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Email")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Phone")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("VendorName")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ProcessInstanceId");

                            b1.ToTable("ProcessInstance", "Processes");

                            b1.WithOwner()
                                .HasForeignKey("ProcessInstanceId");
                        });

                    b.OwnsOne("Cvl.ApplicationServer.Core.Model.Processes.ExternalIdentifiers", "ExternalIds", b1 =>
                        {
                            b1.Property<long>("ProcessInstanceId")
                                .HasColumnType("bigint");

                            b1.Property<string>("ExternalId1")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<string>("ExternalId2")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<string>("ExternalId3")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<string>("ExternalId4")
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.HasKey("ProcessInstanceId");

                            b1.ToTable("ProcessInstance", "Processes");

                            b1.WithOwner()
                                .HasForeignKey("ProcessInstanceId");
                        });

                    b.Navigation("BusinessData")
                        .IsRequired();

                    b.Navigation("ExternalIds")
                        .IsRequired();
                });

            modelBuilder.Entity("Cvl.ApplicationServer.Core.Model.Processes.ProcessStateData", b =>
                {
                    b.HasOne("Cvl.ApplicationServer.Core.Model.Processes.ProcessInstance", "ProcessInstance")
                        .WithOne("ProcessInstanceStateData")
                        .HasForeignKey("Cvl.ApplicationServer.Core.Model.Processes.ProcessStateData", "ProcessInstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProcessInstance");
                });

            modelBuilder.Entity("Cvl.ApplicationServer.Core.Model.ProcessStepHistory", b =>
                {
                    b.HasOne("Cvl.ApplicationServer.Core.Model.Processes.ProcessInstance", "ProcessInstance")
                        .WithMany()
                        .HasForeignKey("ProcessInstanceId");

                    b.Navigation("ProcessInstance");
                });

            modelBuilder.Entity("Cvl.ApplicationServer.Core.Model.Processes.ProcessInstance", b =>
                {
                    b.Navigation("ProcessDiagnosticData")
                        .IsRequired();

                    b.Navigation("ProcessInstanceStateData")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
